openapi: 3.0.0
info:
  title: Sysdig Secure API
  description: >
    Sysdig Secure RESTful Documentation


    ## Conventions

    ### Access | Send | Receive

    API access is over HTTPS and accessed from:



    SaaS: See [SaaS
    Regions](https://docs.sysdig.com/en/saas-regions-and-ip-ranges.html) and IP
    Ranges for the URLs corresponding to different regions.



    For example:

    Sysdig Secure for US East: https://secure.sysdig.com


    Sysdig Monitor for US West: https://us2.app.sysdig.com


    Sysdig Secure for EU Central: https://eu1.app.sysdig.com/secure/


    Sysdig Monitor for EU Central: https://eu1.app.sysdig.com


    On-Prem: through your Sysdig application server address



    Data is sent and received using `JSON` format.


    ### Authorization

    The Sysdig API token must be passed to the HTTPS server via the
    Authorization header with the format:


    `Authorization: Bearer [token]`


    ### Encoding

    The request should set the HTTP header:


    `Accept: application/json`


    Every response is returned with the HTTP header


    `Content-Type: application/json;charset=UTF-8`


    To reduce the size of the request and (primarily) the response, you can set
    the header to compress HTTP body and response:


    `Accept-Encoding:gzip, deflate, sdch`


    <SecurityDefinitions />
  version: v2
  x-logo:
    url: 'https://docs.sysdig.com/css/image/portal-logo.png'
  contact:
    name: API Support
    url: 'https://sysdig.com/company/technical-support/'
    email: ' doc-feedback@sysdig.com'
externalDocs:
  description: Sysdig Product Documentation
  url: 'https://docs.sysdig.com'
servers:
  - url: 'https://secure.sysdig.com'
    description: Sysdig Secure API
paths:
  /api/v1/secure/overview/status:
    get:
      summary: Check status of overview service.
      description: Checks whether the overview service is available or not.
      tags:
        - Overview
      responses:
        '200':
          description: Successfully returned status of overview service.
          content:
            application/json:
              schema:
                type: object
        '401':
          description: |
            Status Unauthorized: Returned when user is not authorized
        '403':
          description: |
            Status Forbidden: Returned when Overview V2 is disabled
  /api/v1/secure/overview:
    get:
      summary: Datasource for the Secure Overview page.
      description: >-
        Fetches overview data for a specified set of panels of the Secure
        Overview page. Customer ID is derived from API key.
      tags:
        - Overview
      parameters:
        - $ref: '#/components/parameters/panel'
        - $ref: '#/components/parameters/timeframe'
        - $ref: '#/components/parameters/cluster'
        - $ref: '#/components/parameters/namespace'
      responses:
        '200':
          description: Successfully returned overview data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OverviewResponse'
        '400':
          description: 'Returned if panel, cluster or namespace are invalid.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OverviewError'
        '401':
          description: Invalid or missing auth token
        '404':
          description: No record found for customerId
  /api/benchmarks/v2/status:
    get:
      tags:
        - Benchmarks V2
      summary: Status
      description: >
        Checks the availability of the Benchmarks V2 API. If Benchmarks V2 is
        disabled for the customer, and no Cloud Benchmark results are available,
        this endpoint will return a 403. If Benchmarks V2 is disabled for the
        customer, but Cloud Benchmark results are available, this endpoint will
        return 200 with a dummy TaskId in the response body to be used to
        request the Cloud Benchmark results. Finally, if Benchmark V2 is
        enabled, this endpoint will return a 200 with no body.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  dummyCloudTaskId:
                    type: string
                    example: '123'
                    description: >
                      This task Id is not a real task, but is used to request
                      Cloud Benchmark results. If there are no Cloud Benchmark
                      results available, this endpoint will return a `403 STATUS
                      FORBIDDEN` instead.
        '403':
          description: >
            Status Forbidden: Returned when Benchmarks V2 is disabled, and there
            are no Cloud Benchmark Results available. FE should hide the
            Benchmarks V2 UI.
  /api/benchmarks/v2/scopeOptions:
    get:
      tags:
        - Benchmarks V2
      summary: Scope Options
      description: >
        Returns the list of available Scope Labels and Operators that can be
        used when creating a Benchmark Task. If an optional 'schema' query param
        is provided, only Scope Labels relevant to that schema are returned,
        otherwise all possible Scope Labels are returned.
      parameters:
        - name: schema
          in: query
          description: >-
            Fetch the Scope Labels and Operators for this schema. Use a value
            returned from `/benchmarks/v2/schemas`
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  labels:
                    type: array
                    description: A list of supported Scope Labels
                    items:
                      type: string
                    example:
                      - host.hostName
                      - host.mac
                      - aws.account_id
                      - aws.region
                      - aws.instance_id
                      - kubernetes.cluster.name
                      - kubernetes.node.name
                  operators:
                    type: array
                    description: A list of supported Scope Operators
                    items:
                      type: string
                    example:
                      - in
                      - equals
  /api/benchmarks/v2/schemas:
    get:
      tags:
        - Benchmarks V2
      summary: List Schemas
      description: Returns the list of available Benchmark Schemas.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    schema:
                      type: string
                      description: The internal Schema identifier
                    displayName:
                      type: string
                      description: The Schema display name
                    link:
                      type: string
                      description: A link to the official standard
                example:
                  - schema: kube_bench_cis-1.5
                    displayName: CIS Kubernetes Benchmark 1.5
                    link: 'https://www.cisecurity.org/benchmark/kubernetes/'
                  - schema: kube_bench_cis-1.6
                    displayName: CIS Kubernetes Benchmark 1.6
                    link: 'https://www.cisecurity.org/benchmark/kubernetes/'
  '/api/benchmarks/v2/schemas/{schemaId}':
    get:
      tags:
        - Benchmarks V2
      summary: Get Schema Controls
      description: >-
        Returns the list of Controls in a given Benchmark Schemas grouped by
        Family.
      parameters:
        - name: schemaId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    familyId:
                      type: string
                      description: The ID of the family.
                    title:
                      type: string
                      description: The Title (name) of the family.
                    controls:
                      type: array
                      items:
                        type: object
                        properties:
                          controlId:
                            type: string
                            description: The ID of the control.
                          title:
                            type: string
                            description: The Title (name) of the control.
                          level:
                            type: string
                            description: The CIS Level of the control.
                example:
                  - familyId: '1.1'
                    title: Master Node Configuration Files
                    controls:
                      - controlId: 1.1.1
                        title: >-
                          Ensure that the API server pod specification file
                          permissions are set to 644 or more restrictive
                        level: Level 1
                      - controlId: 1.1.2
                        title: >-
                          Ensure that the API server pod specification file
                          ownership is set to root:root
                        level: Level 1
                  - familyId: '1.2'
                    title: API Server
                    controls:
                      - controlId: 1.2.1
                        title: >-
                          Ensure that the --anonymous-auth argument is set to
                          false
                        level: Level 1
                      - controlId: 1.2.2
                        title: Ensure that the --basic-auth-file argument is not set
                        level: Level 1
  /api/benchmarks/v2/tasks:
    get:
      tags:
        - Benchmarks V2
      summary: List Tasks
      description: Fetches a list of Benchmark Tasks
      parameters:
        - name: filter
          in: query
          description: 'Free text filter. Searches the following fields: `name`, `scope`'
          required: false
          schema:
            type: string
        - name: schema
          in: query
          description: Filter by schema. Valid list returned by `/schemas` endpoint.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskResponseBody'
    post:
      tags:
        - Benchmarks V2
      summary: Create Task
      description: Create a new Benchmark Task
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponseBody'
  '/api/benchmarks/v2/tasks/{taskId}':
    get:
      tags:
        - Benchmarks V2
      summary: Get Task
      description: Fetches a Benchmark Task by Id
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponseBody'
    delete:
      tags:
        - Benchmarks V2
      summary: Delete Task
      description: >-
        Delete Benchmark Task with specified task Id. If task has results then
        the result must be deleted before deleting the task
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: number
      responses:
        '200':
          description: OK
  '/api/benchmarks/v2/tasks/{taskId}/enable':
    put:
      tags:
        - Benchmarks V2
      summary: Enable Task
      description: >-
        Enables the Benchmark Task with specified task Id. If the task is
        already enabled, this is a no-op.
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: number
      responses:
        '200':
          description: OK
  '/api/benchmarks/v2/tasks/{taskId}/disable':
    put:
      tags:
        - Benchmarks V2
      summary: Disable Task
      description: >-
        Disables the Benchmark Task with specified task Id. If the task is
        already disabled, this is a no-op.
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: number
      responses:
        '200':
          description: OK
  '/api/benchmarks/v2/tasks/{taskId}/run':
    post:
      tags:
        - Benchmarks V2
      summary: Run now
      description: Runs the Benchmark Task with the specified task Id
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Set to True if the run request was successfully enqueued
                  runID:
                    type: string
                    description: >-
                      The run ID (and ensuing result ID) that was created.
                      Present IFF `success=true`.
                    example: 674088d3-c9a8-4f04-b47a-5ade04d36faf
                  errMsg:
                    type: string
                    description: >-
                      A description of what went wrong. Present IFF
                      `success=false`.
                    example: could not contact redis
  '/api/benchmarks/v2/tasks/{taskId}/result':
    get:
      tags:
        - Benchmarks V2
      summary: Get most recent Result ID
      description: >-
        Fetches most recent result Id, and optionally redirects to the correct
        `/tasks/{taskId}/results/{resultId}` URL
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: number
        - name: redirect
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Returned when `redirect` is false or not provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  lastRunId:
                    type: string
                    description: The most recent run (result) ID
                    example: 674088d3-c9a8-4f04-b47a-5ade04d36faf
        '204':
          description: 'Returned when task does not exist, or it has not yet been run'
        '302':
          description: >-
            Returned when `redirect` is true. Redirects the browser to the URL
            with latest resultId
          headers:
            Location:
              schema:
                type: string
                example: /api/benchmarks/v2/tasks/1/results/10
  /api/compliance/v1/status:
    get:
      summary: Check the status of Compliance service.
      description: Checks whether the Compliance service is available or not.
      tags:
        - Compliance
      responses:
        '200':
          description: Successfully returned compliance status.
          content:
            application/json:
              schema:
                type: object
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /api/compliance/v1/standards:
    get:
      summary: List of supported Compliance standards.
      description: Fetches list of compliance standards supported by Sysdig.
      tags:
        - Compliance
      responses:
        '200':
          description: Successfully returned compliance standards list.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - PCI_3.2
                  - NIST_800_53
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /api/compliance/v1/environments:
    get:
      summary: List of supported Compliance environments.
      description: Fetches list of compliance environments supported by Sysdig.
      tags:
        - Compliance
      responses:
        '200':
          description: Successfully returned compliance environments list.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - kubernetes
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /api/compliance/v1/controls/description:
    get:
      summary: Get detailed description of a specific control.
      description: Fetches detailed description of a given control.
      tags:
        - Compliance
      parameters:
        - $ref: '#/components/parameters/standard'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/controlId'
      responses:
        '200':
          description: Successfully returned detailed description of specific control.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/controlDescription'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /api/compliance/v1/report:
    get:
      summary: Get the complete compliance report for a given compliance standard.
      description: >-
        Fetches the complete compliance report for a given compliance standard
        and environment.
      tags:
        - Compliance
      parameters:
        - $ref: '#/components/parameters/standard'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/parameters-cluster'
        - $ref: '#/components/parameters/detail'
        - $ref: '#/components/parameters/showBulkFail'
        - $ref: '#/components/parameters/status'
      responses:
        '200':
          description: >-
            Successfully returned the complete compliance report for a given
            compliance standard and environment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/complianceReport'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  /api/compliance/v1/report/csv:
    get:
      summary: >-
        Get the complete compliance report for a given compliance standard in
        CSV format.
      description: >-
        Fetches the complete compliance report for a given compliance standard
        and environment in CSV format.
      tags:
        - Compliance
      parameters:
        - $ref: '#/components/parameters/standard'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/parameters-cluster'
        - $ref: '#/components/parameters/detail'
      responses:
        '200':
          description: >-
            Successfully returned the complete compliance report for a given
            compliance standard and environment.
          content:
            text/csv:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '503':
          $ref: '#/components/responses/serviceUnavailable'
  '/api/reporting/v1/{domain}/{reportType}/config':
    parameters:
      - $ref: '#/components/parameters/domain'
      - $ref: '#/components/parameters/reportType'
    get:
      summary: Get all the options available to define a report configuration
      tags:
        - Reporting
      responses:
        '200':
          description: Options available to define a report configuration
          content:
            application/json:
              schema:
                type: object
                properties:
                  availableColumns:
                    type: array
                    readOnly: true
                    description: >-
                      The available columns that can be chosen and included in a
                      generated report
                    items:
                      type: object
                      properties:
                        dataKey:
                          type: string
                          description: Column identifier
                          example: severity
                        label:
                          type: string
                          nullable: true
                          description: Human-readable name for the column
                          example: Severity
                        isRequired:
                          type: boolean
                          description: >-
                            Whether the columns must be included when specifying
                            a report configuration
                          example: true
                  availableFilters:
                    type: array
                    readOnly: true
                    description: >-
                      The available conditions that can be set to filter the
                      results in a generated report
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - string
                            - number
                            - boolean
                            - stringarray
                          description: Data type for the filter values
                          example: string
                        name:
                          type: string
                          description: Filter identifier
                          example: severity
                        label:
                          type: string
                          nullable: true
                          description: Human-readable label for the filter
                          example: Severity
                        labelSuffix:
                          type: string
                          nullable: true
                          description: Human-readable suffix for the filter value
                          example: sev.
                        allowedValues:
                          type: array
                          nullable: true
                          items:
                            type: object
                            properties:
                              value:
                                oneOf:
                                  - type: string
                                  - type: number
                                  - type: boolean
                                  - type: array
                                    items:
                                      type: string
                                description: One of the allowed value for the filter
                                example: high
                              label:
                                type: string
                                description: Human-readable label for the filter value
                                example: High
                          description: Full list of the allowed values for the filter
                        min:
                          type: number
                          nullable: true
                          description: Minimum allowed value for filters with type number
                          example: 0
                        max:
                          type: number
                          nullable: true
                          description: Maximum allowed value for filters with type number
                          example: 10
                        comparisons:
                          type: array
                          nullable: true
                          items:
                            type: string
                          description: >-
                            Optional list of comparison operators which can be
                            used when applying the filter
                          example:
                            - '>='
                            - <=
  '/api/reporting/v1/{domain}/{reportType}/preview':
    parameters:
      - $ref: '#/components/parameters/domain'
      - $ref: '#/components/parameters/reportType'
    post:
      summary: Get a result preview of a report with the given configuration
      tags:
        - Reporting
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportConfig'
      responses:
        '200':
          description: The result preview for the requested report configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportContent'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportingError'
              example: Invalid report configuration
  '/api/reporting/v1/{domain}/schedules':
    parameters:
      - $ref: '#/components/parameters/domain'
    get:
      summary: List all the saved schedules for report generation
      tags:
        - Reporting
      responses:
        '200':
          description: The list of all saved schedules for report generation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReportSchedule'
    post:
      summary: Create a new schedule for report generation
      tags:
        - Reporting
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportSchedule'
      responses:
        '200':
          description: The created schedule for report generation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportSchedule'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportingError'
              example: Invalid report configuration
  '/api/reporting/v1/{domain}/schedules/{scheduleId}':
    parameters:
      - $ref: '#/components/parameters/domain'
      - $ref: '#/components/parameters/scheduleId'
    get:
      summary: Get the configuration of the requested schedule for report generation
      tags:
        - Reporting
      responses:
        '200':
          description: Configuration for the requested schedule for report generation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportSchedule'
        '404':
          description: Requested report generation schedule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportingError'
              example: Report generation schedule not found
    put:
      summary: Edit the configuration of the requested schedule for report generation
      tags:
        - Reporting
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportSchedule'
      responses:
        '200':
          description: >-
            Updated configuration for the requested schedule for report
            generation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportSchedule'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportingError'
              example: Invalid report configuration
        '404':
          description: Requested report generation schedule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportingError'
              example: Report generation schedule not found
    delete:
      summary: Remove the requested schedule for report generation
      tags:
        - Reporting
      responses:
        '204':
          description: Schedule for report generation removed
  '/api/reporting/v1/{domain}/reports/{fileId}':
    parameters:
      - $ref: '#/components/parameters/domain'
      - $ref: '#/components/parameters/fileId'
    get:
      summary: Download a previously generated report
      tags:
        - Reporting
      responses:
        '200':
          description: Report content
          content:
            text/csv:
              schema:
                type: string
            application/json:
              schema:
                $ref: '#/components/schemas/ReportContent'
            application/pdf:
              schema:
                type: string
                format: binary
        '307':
          description: Requested report available for download at another location
          headers:
            Location:
              schema:
                type: string
        '404':
          description: Requested report not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportingError'
              example: Report not found
  /api/v1/policyAdvisor/podSecurityPolicies:
    post:
      summary: Create a podSecurityPolicy
      description: >-
        Create a podSecurityPolicy from a k8s deployment yaml. Uses
        k8s-psp-advisor to perform the conversion.
      tags:
        - Policy Advisor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicySimulationK8sObject'
      responses:
        '200':
          description: >-
            An initial PSP that can be used as a part of the /simulations
            endpoints
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/K8sPsp'
        '400':
          description: Some part of the provided deployment yaml was malformed/invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/policyAdvisor/simulations:
    get:
      summary: Get a list of simulations
      description: >-
        Get a list of simulations for the current customer, including names/ids,
        etc.
      tags:
        - Policy Advisor
      parameters:
        - name: offset
          in: query
          required: true
          schema:
            type: number
            format: integer
          description: Return values from the simulations list at this position.
        - name: limit
          in: query
          required: true
          schema:
            type: number
            format: integer
          description: The maximum number of items to return.
        - name: dir
          in: query
          required: true
          schema:
            type: string
            enum:
              - Asc
              - Desc
          description: >-
            Whether additional results should be increasing or decreasing
            relative to limit.
        - name: filter
          in: query
          required: false
          schema:
            type: string
          description: >-
            Filter used to match against the name attribute of the policy
            simulation.
      responses:
        '200':
          description: The list of simulations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicySimulationsList'
        '400':
          description: Some part of the request was invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: The request is unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new policy simulation
      description: Create a new policy simulation
      tags:
        - Policy Advisor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicySimulationInfo'
      responses:
        '200':
          description: The just-created policy simulation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicySimulation'
        '400':
          description: Some part of the request was invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: The operation is forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity (Backend rejected due to validation errors)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/api/v1/policyAdvisor/simulations/{id}':
    get:
      summary: Retrieve info on a single policy simulation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - Policy Advisor
      responses:
        '200':
          description: The requested policy simulation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicySimulation'
    put:
      summary: Update a given policy simulation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicySimulationInfo'
      tags:
        - Policy Advisor
      responses:
        '200':
          description: The now-updated policy simulation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicySimulation'
        '400':
          description: Some part of the request was invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity (Backend rejected due to validation errors)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete the policy simulation.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - Policy Advisor
      responses:
        '200':
          description: The deleted policy simulation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicySimulation'
        '400':
          description: Simulation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/networkTopology/clusters:
    get:
      summary: Returns all cluster names for the customer
      description: Returns all cluster names for the customer
      tags:
        - Network Topology
      parameters:
        - $ref: '#/components/parameters/from'
        - $ref: '#/components/parameters/to'
      responses:
        '200':
          description: Indicates the requested cluster names were successfully returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClustersResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /api/v1/networkTopology/namespaces:
    get:
      summary: Returns all namespace names for the cluster
      description: Returns all namespace names for the cluster
      tags:
        - Network Topology
      parameters:
        - $ref: '#/components/parameters/components-parameters-cluster'
        - $ref: '#/components/parameters/from'
        - $ref: '#/components/parameters/to'
      responses:
        '200':
          description: Indicates the requested namespaces were successfully returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespacesResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /api/v1/networkTopology/owners:
    get:
      summary: 'Returns all pod owners for a cluster, namespace, and time range'
      tags:
        - Network Topology
      description: Returns a map of owner type to a list of owner selectors
      parameters:
        - $ref: '#/components/parameters/components-parameters-cluster'
        - $ref: '#/components/parameters/parameters-namespace'
        - $ref: '#/components/parameters/from'
        - $ref: '#/components/parameters/to'
      responses:
        '200':
          description: >-
            Indicates the requested map of owner type to a list of owner
            selectors were successfully returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OwnersResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /api/v1/networkTopology/ingressSummaries:
    get:
      summary: Returns an overview of ingress networking traffic
      tags:
        - Network Topology
      description: Returns an overview of ingress networking traffic
      parameters:
        - $ref: '#/components/parameters/components-parameters-cluster'
        - $ref: '#/components/parameters/parameters-namespace'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/kind'
        - $ref: '#/components/parameters/from'
        - $ref: '#/components/parameters/to'
      responses:
        '200':
          description: >-
            Indicates the requested overview of ingress networking traffic was
            successfully returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngressSummary'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /api/v1/networkTopology/egressSummaries:
    get:
      summary: Returns an overview of egress networking traffic
      tags:
        - Network Topology
      description: Returns an overview of egress networking traffic
      parameters:
        - $ref: '#/components/parameters/components-parameters-cluster'
        - $ref: '#/components/parameters/parameters-namespace'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/kind'
        - $ref: '#/components/parameters/from'
        - $ref: '#/components/parameters/to'
      responses:
        '200':
          description: >-
            Indicates the requested overview of egress networking traffic was
            successfully returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EgressSummary'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /api/v1/networkTopology/ingressUnresolvedIps:
    get:
      summary: Returns the unresolved ips for a time range and pod owner
      tags:
        - Network Topology
      description: Returns the unresolved ips for a time range and pod owner
      parameters:
        - $ref: '#/components/parameters/components-parameters-cluster'
        - $ref: '#/components/parameters/parameters-namespace'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/kind'
        - $ref: '#/components/parameters/from'
        - $ref: '#/components/parameters/to'
      responses:
        '200':
          description: >-
            Indicates the requested ingress unresolved ips were successfully
            returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EgressUnresolvedIpsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /api/v1/networkTopology/egressUnresolvedIps:
    get:
      summary: Returns the unresolved ips for a time range and pod owner
      tags:
        - Network Topology
      description: Returns the unresolved ips for a time range and pod owner
      parameters:
        - $ref: '#/components/parameters/components-parameters-cluster'
        - $ref: '#/components/parameters/parameters-namespace'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/kind'
        - $ref: '#/components/parameters/from'
        - $ref: '#/components/parameters/to'
      responses:
        '200':
          description: >-
            Indicates the requested egress unresolved ips were successfully
            returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngressUnresolvedIpsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /api/v1/networkTopology/ownerTopology:
    get:
      summary: Creates a communication topology graph around the specified owner
      tags:
        - Network Topology
      description: Creates a communication topology graph around the specified owner
      parameters:
        - $ref: '#/components/parameters/parameters-namespace'
        - $ref: '#/components/parameters/components-parameters-cluster'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/kind'
        - $ref: '#/components/parameters/from'
        - $ref: '#/components/parameters/to'
      responses:
        '200':
          description: Indicates the requested topology graph is sucessfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopologyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /api/v1/networkTopology/status:
    get:
      summary: Ping the status
      tags:
        - Network Topology
      description: |
        Retrieves a 200 to double check if the topology feature on the
        backend is available.
      responses:
        '200':
          description: Indicates the topology feature is available
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  status:
                    type: string
                    description: The status.
                    enum:
                      - ok
                    example: ok
  '/api/v1/networkSecurity/namespaces/{namespaceName}/simulatedPolicies':
    post:
      summary: Creates a Kubernetes Network Policy
      description: Creates a Kubernetes Network Policy
      tags:
        - Network Security
      parameters:
        - $ref: '#/components/parameters/namespaceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesNetworkPolicyRequest'
      responses:
        '200':
          description: Indicates the requested KNP was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesNetworkPolicy'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /api/v1/networkSecurity/networkPolicyOverlayOwnerTopology:
    post:
      summary: Creates a communication topology graph around the specified owner
      description: >-
        Creates a communication topology graph around the specified owner; if
        KNP spec is provided, marks communication edges as 'blocked' if they are
        blocked by the KNP
      tags:
        - Network Security
      parameters:
        - $ref: '#/components/parameters/parameters-namespace'
        - $ref: '#/components/parameters/components-parameters-cluster'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/kind'
        - $ref: '#/components/parameters/from'
        - $ref: '#/components/parameters/to'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesNetworkPolicyRequest'
      responses:
        '200':
          description: Indicates the requested topology graph is sucessfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopologyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /api/v1/networkSecurity/status:
    get:
      summary: Ping the status
      description: |
        Retrieves a 200 to double check if the network security feature on the
        backend is available.
      tags:
        - Network Security
      responses:
        '200':
          description: Indicates the network security feature is available
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  status:
                    type: string
                    description: The status.
                    enum:
                      - ok
                    example: ok
  /api/v1/networkTopology/workloadLabelKeys:
    get:
      summary: Returns sorted list of unique workload label key values
      tags:
        - Network Topology
      description: Returns sorted list of unique workload label key values
      parameters:
        - $ref: '#/components/parameters/components-parameters-cluster'
      responses:
        '200':
          description: Indicates the requested list was returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Labels'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /api/v1/networkTopology/namespaceLabelKeys:
    get:
      summary: Returns sorted list of unique namespace label key values
      tags:
        - Network Topology
      description: Returns sorted list of unique namespace label key values
      parameters:
        - $ref: '#/components/parameters/components-parameters-cluster'
      responses:
        '200':
          description: Indicates the requested list was returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Labels'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /api/v1/captures:
    get:
      summary: Retrieve the list of captures
      description: Retrieve the list of captures
      tags:
        - Captures
      parameters:
        - name: ids
          in: query
          required: false
          schema:
            type: integer
          description: >-
            Represents the id of a particular capture. Can be used multiple
            times in the same request to fetch multiple captures
        - name: offset
          in: query
          required: false
          schema:
            type: integer
          description: >-
            Indicates the distance between the true starting point and the index
            of the first returned capture
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: sort
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortableCaptureFields'
        - name: dir
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Direction'
        - name: filter
          in: query
          required: false
          schema:
            type: string
        - name: from
          in: query
          required: false
          schema:
            type: integer
          description: Unix time of when to start looking for captures in microseconds
        - name: to
          in: query
          required: false
          schema:
            type: integer
          description: Unix time of when to stop looking for captures in microseconds
        - name: source
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/AppEnum'
        - name: scopeFilter
          in: query
          required: false
          schema:
            type: string
          description: Limit the results to only captures matching a scope expression
          example: kubernetes.cluster.name != null
        - name: metrics
          in: query
          required: false
          schema:
            type: string
          example:
            - host.mac
            - host.hostName
            - container.id
            - container.name
            - container.image
        - name: aggregations
          in: query
          required: false
          schema:
            type: string
          example:
            - host.mac
            - host.hostName
            - container.id
            - container.name
            - container.image
        - name: forceSync
          in: query
          required: false
          schema:
            type: boolean
        - name: annotations
          in: query
          required: false
          schema:
            type: string
        - name: token
          in: query
          required: false
          schema:
            type: string
          description: >-
            Uniquely identifies a capture and correlates the capture to a
            request. Must match the following regex
            ([a-z0-9]){8}-([a-z0-9]){4}-([a-z0-9]){4}-([a-z0-9]){4}-([a-z0-9]){12}
          example: 960d9da0-cc79-4079-932a-544e193ab385
      responses:
        '200':
          description: The array representing the captures
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCapturesResponse'
        '400':
          description: Indicates a query param was invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
    post:
      summary: Create a capture
      description: Create a capture
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCapture'
      tags:
        - Captures
      responses:
        '200':
          description: Successfully created a capture
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaptureWrapper'
        '400':
          description: Indicates the request body was invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
    delete:
      summary: Delete captures
      description: Delete captures
      parameters:
        - name: ids
          in: query
          required: false
          schema:
            type: integer
          description: >-
            Represents the id of a particular capture. Can be used multiple
            times in the same request to delete multiple captures
        - name: source
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/AppEnum'
          description: >-
            Indicates that only captures belonging to either the monitor or
            secure product should be considered for deletion. Defaults to SDC if
            not specified
        - name: statuses
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/CaptureStatus'
          description: >-
            Indicates that only captures with a particular status should be
            considered for deletion. Can be used multiple times in the same
            request
      tags:
        - Captures
      responses:
        '200':
          description: The number of captures deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCapturesResponse'
  '/api/v1/captures/{captureId}':
    get:
      summary: Get a capture
      description: Get a capture
      parameters:
        - name: captureId
          in: path
          required: true
          schema:
            type: integer
      tags:
        - Captures
      responses:
        '200':
          description: Successfully retrieved a capture
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaptureWrapper'
        '404':
          description: The capture could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
    put:
      summary: Update a capture
      description: Update a capture
      parameters:
        - name: captureId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Capture'
      tags:
        - Captures
      responses:
        '200':
          description: Successfully updated a capture
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Capture'
        '400':
          description: Indicates the request body was invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
  '/api/v1/captures/{captureId}/download':
    get:
      summary: Download a capture
      description: Download a capture
      parameters:
        - name: captureId
          in: path
          required: true
          schema:
            type: integer
      tags:
        - Captures
      responses:
        '302':
          description: Redirects to a location for downloading
        '404':
          description: The capture could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
  '/api/v1/captures/{captureId}/stop':
    post:
      summary: Stop a capture
      description: Stop a capture
      parameters:
        - name: captureId
          in: path
          required: true
          schema:
            type: integer
      tags:
        - Captures
      responses:
        '200':
          description: Successfully stopped the capture
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaptureWrapper'
        '404':
          description: The capture could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
  '/api/scanning/v1/images/{imageDigest}/vulnSummary':
    get:
      summary: >-
        Retrieve a map of vulnType -> (map of severity -> count) of the
        vulnerabilities of an image
      parameters:
        - name: imageDigest
          in: path
          description: The targeted image digest
          required: true
          schema:
            type: string
      tags:
        - Scanning
      responses:
        '200':
          description: A map of vulnType -> (map of severity -> count)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningVulnSummaryMap'
  '/api/scanning/v1/images/{imageDigest}/vulnSummaryDirect':
    get:
      summary: >-
        Vulnerabilities of an image. [Digest] Data is fetched directly from
        anchore database.
      parameters:
        - name: imageDigest
          in: path
          description: The targeted image digest
          required: true
          schema:
            $ref: '#/components/schemas/ScanningImageDigest'
      tags:
        - Scanning
      responses:
        '200':
          description: A map of vulnType -> (map of severity -> count)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningVulnSummaryMap'
  '/api/scanning/v1/images/by_id/{imageId}/vulnSummaryDirect':
    get:
      summary: >-
        Vulnerabilities of an image. [ImageID] Data is fetched directly from
        anchore database.
      parameters:
        - name: imageId
          in: path
          description: The targeted imageID
          required: true
          schema:
            $ref: '#/components/schemas/ScanningImageId'
      tags:
        - Scanning
      responses:
        '200':
          description: A map of vulnType -> (map of severity -> count)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningVulnSummaryMap'
  '/api/scanning/v1/images/{imageDigest}/vuln/{vtype}':
    get:
      summary: Retrieve vulnerabilities data of an image
      parameters:
        - name: imageDigest
          in: path
          description: The targeted image digest
          required: true
          schema:
            $ref: '#/components/schemas/ScanningImageDigest'
        - name: vtype
          in: path
          description: The type of vulnerabilities to retrieve
          required: true
          schema:
            type: string
            enum:
              - os
              - non-os
        - name: filter
          in: query
          description: >-
            If specified, only vulnerabilities that contain this substring will
            be retrieved
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Sorting method. Defaults to descendent.
          required: false
          schema:
            type: string
            enum:
              - desc
              - asc
        - name: sortBy
          in: query
          description: Field used to alphabetically sort by. Defaults to severity.
          required: false
          schema:
            type: string
            enum:
              - vuln
              - fix
              - severity
              - package
              - url
              - feed
              - feed_group
              - package_name
              - package_version
              - package_type
              - package_cpe
              - package_pat
        - name: filters
          in: query
          description: >-
            A comma-separated list of severities. If specified, only
            vulnerabilities of these severities will be retrieved
          required: false
          schema:
            type: string
            enum:
              - Unknown
              - Negligible
              - Low
              - Medium
              - High
              - Critical
        - name: hasFix
          in: query
          description: >-
            If specified, only vulnerabilities with an available fix will be
            retrieved
          required: false
          schema:
            type: boolean
        - name: cmpDigest
          in: query
          description: >-
            If specified, the vulnerabilities in the response will contain a
            comparison status relative to the image specified by this parameter.
            A total count of all comparison statuses will also be returned.
          required: false
          schema:
            type: string
        - name: cmpFilter
          in: query
          description: >-
            If specified, only vulnerabilities matching this comparison status
            will be returned. If not specified, all vulnerabilities will be
            returned.
          required: false
          schema:
            type: string
            enum:
              - New
              - Fixed
              - Shared
        - name: offset
          in: query
          description: >-
            If specified, a 0-based index on the vulnerabilities list. Only
            entries >= offset will be retrieved. Defaults to 0. If filter is
            also specified, this index will be applied on the filtered list. An
            empty list will be retrieved if this index overflows the list.
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          description: >-
            If specified, a limit on the number of entries retrieved. If filter
            is also specified, the limit will be applied on the filtered list.
            limit must be >= 1 and if it overflows the list all entries will be
            retrieved.
          required: false
          schema:
            type: integer
        - name: includeVulnExceptions
          in: query
          description: >-
            If specified, returns also the set of vulnerability exception lists
            where the vulnerability is contained and when it will expire.
          required: false
          schema:
            type: boolean
        - name: imageTag
          in: query
          description: |
            The image's tag.
            Required when "includeVulnExceptions" is set to true.
          required: false
          schema:
            type: string
        - name: bundleId
          in: query
          description: >-
            Target bundle. If not specified, the currently active bundle will be
            used.
          required: false
          schema:
            type: string
      tags:
        - Scanning
      responses:
        '200':
          description: The retrieved vulnerabilities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningVulnerabilities'
  '/api/scanning/v1/images/{imageDigest}/vulnDirect/{vtype}':
    get:
      summary: |
        Retrieve vulnerabilities data of an image [Digest][Direct]
      parameters:
        - name: imageDigest
          in: path
          description: The targeted image digest
          required: true
          schema:
            type: string
        - name: vtype
          in: path
          description: The type of vulnerabilities to retrieve
          required: true
          schema:
            type: string
            enum:
              - os
              - non-os
              - all
        - name: filter
          in: query
          description: >-
            If specified, only vulnerabilities that contain this substring will
            be retrieved
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Sorting method. Defaults to descendent.
          required: false
          schema:
            type: string
            enum:
              - desc
              - asc
        - name: sortBy
          in: query
          description: Field used to alphabetically sort by. Defaults to severity.
          required: false
          schema:
            type: string
            enum:
              - vuln
              - fix
              - severity
              - package
              - url
              - feed
              - feed_group
              - package_name
              - package_version
              - package_type
              - package_cpe
              - package_pat
        - name: filters
          in: query
          description: >-
            A comma-separated list of severities. If specified, only
            vulnerabilities of these severities will be retrieved
          required: false
          schema:
            type: string
            enum:
              - Unknown
              - Negligible
              - Low
              - Medium
              - High
              - Critical
        - name: hasFix
          in: query
          description: >-
            If specified, only vulnerabilities with an available fix will be
            retrieved
          required: false
          schema:
            type: boolean
        - name: offset
          in: query
          description: >-
            If specified, a 0-based index on the vulnerabilities list. Only
            entries >= offset will be retrieved. Defaults to 0. If filter is
            also specified, this index will be applied on the filtered list. An
            empty list will be retrieved if this index overflows the list.
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          description: >-
            If specified, a limit on the number of entries retrieved. If filter
            is also specified, the limit will be applied on the filtered list.
            limit must be >= 1 and if it overflows the list all entries will be
            retrieved.
          required: false
          schema:
            type: integer
        - name: includeVulnExceptions
          in: query
          description: >-
            If specified, returns also the set of vulnerability exception lists
            where the vulnerability is contained and when it will expire.
          required: false
          schema:
            type: boolean
        - name: imageTag
          in: query
          description: |
            The image's tag.
            Required when "includeVulnExceptions" is set to true.
          required: false
          schema:
            type: string
        - name: bundleId
          in: query
          description: >-
            Target bundle. If not specified, the currently active bundle will be
            used.
          required: false
          schema:
            type: string
      tags:
        - Scanning
      responses:
        '200':
          description: The retrieved vulnerabilities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningVulnerabilities'
  '/api/scanning/v1/images/by_id/{imageId}/vulnDirect/{vtype}':
    get:
      summary: |
        Retrieve vulnerabilities data of an image [ImageId][Direct]
      parameters:
        - name: imageId
          in: path
          description: The targeted imageID
          required: true
          schema:
            $ref: '#/components/schemas/ScanningImageId'
        - name: vtype
          in: path
          description: The type of vulnerabilities to retrieve
          required: true
          schema:
            type: string
            enum:
              - os
              - non-os
              - all
        - name: filter
          in: query
          description: >-
            If specified, only vulnerabilities that contain this substring will
            be retrieved
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Sorting method. Defaults to descendent.
          required: false
          schema:
            type: string
            enum:
              - desc
              - asc
        - name: sortBy
          in: query
          description: Field used to alphabetically sort by. Defaults to severity.
          required: false
          schema:
            type: string
            enum:
              - vuln
              - fix
              - severity
              - package
              - url
              - feed
              - feed_group
              - package_name
              - package_version
              - package_type
              - package_cpe
              - package_pat
        - name: filters
          in: query
          description: >-
            A comma-separated list of severities. If specified, only
            vulnerabilities of these severities will be retrieved
          required: false
          schema:
            type: string
            enum:
              - Unknown
              - Negligible
              - Low
              - Medium
              - High
              - Critical
        - name: hasFix
          in: query
          description: >-
            If specified, only vulnerabilities with an available fix will be
            retrieved
          required: false
          schema:
            type: boolean
        - name: offset
          in: query
          description: >-
            If specified, a 0-based index on the vulnerabilities list. Only
            entries >= offset will be retrieved. Defaults to 0. If filter is
            also specified, this index will be applied on the filtered list. An
            empty list will be retrieved if this index overflows the list.
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          description: >-
            If specified, a limit on the number of entries retrieved. If filter
            is also specified, the limit will be applied on the filtered list.
            limit must be >= 1 and if it overflows the list all entries will be
            retrieved.
          required: false
          schema:
            type: integer
        - name: includeVulnExceptions
          in: query
          description: >-
            If specified, returns also the set of vulnerability exception lists
            where the vulnerability is contained and when it will expire.
          required: false
          schema:
            type: boolean
        - name: imageTag
          in: query
          description: |
            The image's tag.
            Required when "includeVulnExceptions" is set to true.
          required: false
          schema:
            type: string
        - name: bundleId
          in: query
          description: >-
            Target bundle. If not specified, the currently active bundle will be
            used.
          required: false
          schema:
            type: string
      tags:
        - Scanning
      responses:
        '200':
          description: The retrieved vulnerabilities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningVulnerabilities'
  '/api/scanning/v1/images/{imageDigest}/vulnexceptions':
    get:
      summary: >
        Retrieve the vulnerability exception lists that this image is bound to
        via policies assignements [Digest]
      tags:
        - Scanning
      parameters:
        - name: imageDigest
          in: path
          description: The targeted image digest
          required: true
          schema:
            $ref: '#/components/schemas/ScanningImageDigest'
        - name: tag
          in: query
          description: The image's tag
          required: true
          schema:
            type: string
        - name: withItems
          in: query
          description: >
            Include or not "items" in the response. Useful when there are a lot
            of vulnerability exception lists.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: The associated vulnerability exception lists
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScanningVulnException'
        '404':
          description: Image digest not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningError'
              example: Image not found
  '/api/scanning/v1/images/by_id/{imageId}/vulnexceptions':
    get:
      summary: >
        Retrieve the vulnerability exception lists that this image is bound to
        via policies assignements [ImageID]
      tags:
        - Scanning
      parameters:
        - name: imageId
          in: path
          description: The targeted imageID
          required: true
          schema:
            $ref: '#/components/schemas/ScanningImageId'
        - name: tag
          in: query
          description: The image's tag
          required: true
          schema:
            type: string
        - name: withItems
          in: query
          description: >
            Include or not "items" in the response. Useful when there are a lot
            of vulnerability exception lists.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: The associated vulnerability exception lists
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScanningVulnException'
        '404':
          description: Image digest not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningError'
              example: Image not found
  '/api/scanning/v1/images/{imageDigest}/content/{ctype}':
    get:
      summary: |
        Retrieve the content of an image [Digest]
      parameters:
        - name: imageDigest
          in: path
          description: The targeted image digest
          required: true
          schema:
            $ref: '#/components/schemas/ScanningImageDigest'
        - name: ctype
          in: path
          description: The type of content to retrieve
          required: true
          schema:
            type: string
            enum:
              - os
              - files
              - npm
              - gem
              - python
              - java
        - name: filter
          in: query
          description: >-
            If specified, only content entries that contain this substring will
            be retrieved
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Sorting method
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: sortBy (for java type)
          in: query
          description: Field used to alphabetically sort by. Defaults to package
          required: false
          schema:
            type: string
            enum:
              - package
              - implementation-version
              - specification-version
              - maven-version
              - location
              - type
              - origin
        - name: sortBy (for files type)
          in: query
          description: Field used to alphabetically sort by. Defaults to filename
          required: false
          schema:
            type: string
            enum:
              - filename
              - gid
              - linkdest
              - mode
              - sha256
              - size
              - type
              - uid
        - name: 'sortBy (for os,npm,gem,python types)'
          in: query
          description: Field used to alphabetically sort by. Defaults to package
          required: false
          schema:
            type: string
            enum:
              - package
              - version
              - size
              - type
              - origin
              - license
              - location
        - name: offset
          in: query
          description: >-
            If specified, a 0-based index on the content list. Only entries >=
            offset will be retrieved. Defaults to 0. If filter is also
            specified, this index will be applied on the filtered list. An empty
            list will be retrieved if this index overflows the list.
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          description: >-
            If specified, a limit on the number of entries retrieved. If filter
            is also specified, the limit will be applied on the filtered list.
            limit must be >= 1 and if it overflows the list all entries will be
            retrieved.
          required: false
          schema:
            type: integer
      tags:
        - Scanning
      responses:
        '200':
          description: The retrieved content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningImageContent'
  '/api/scanning/v1/images/by_id/{imageId}/content/{ctype}':
    get:
      summary: |
        Retrieve the content of an image [ImageID]
      parameters:
        - name: imageId
          in: path
          description: The targeted imageID
          required: true
          schema:
            $ref: '#/components/schemas/ScanningImageId'
        - name: ctype
          in: path
          description: The type of content to retrieve
          required: true
          schema:
            type: string
            enum:
              - os
              - files
              - npm
              - gem
              - python
              - java
        - name: filter
          in: query
          description: >-
            If specified, only content entries that contain this substring will
            be retrieved
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Sorting method
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: sortBy (for java type)
          in: query
          description: Field used to alphabetically sort by. Defaults to package
          required: false
          schema:
            type: string
            enum:
              - package
              - implementation-version
              - specification-version
              - maven-version
              - location
              - type
              - origin
        - name: sortBy (for files type)
          in: query
          description: Field used to alphabetically sort by. Defaults to filename
          required: false
          schema:
            type: string
            enum:
              - filename
              - gid
              - linkdest
              - mode
              - sha256
              - size
              - type
              - uid
        - name: 'sortBy (for os,npm,gem,python types)'
          in: query
          description: Field used to alphabetically sort by. Defaults to package
          required: false
          schema:
            type: string
            enum:
              - package
              - version
              - size
              - type
              - origin
              - license
              - location
        - name: offset
          in: query
          description: >-
            If specified, a 0-based index on the content list. Only entries >=
            offset will be retrieved. Defaults to 0. If filter is also
            specified, this index will be applied on the filtered list. An empty
            list will be retrieved if this index overflows the list.
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          description: >-
            If specified, a limit on the number of entries retrieved. If filter
            is also specified, the limit will be applied on the filtered list.
            limit must be >= 1 and if it overflows the list all entries will be
            retrieved.
          required: false
          schema:
            type: integer
      tags:
        - Scanning
      responses:
        '200':
          description: The retrieved content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningImageContent'
  '/api/scanning/v1/images/{imageDigest}/checkSummary':
    get:
      summary: >-
        Retrieve the policy evaluation summary of an image with the selected
        timestamp [Digest]
      parameters:
        - name: imageDigest
          in: path
          description: The targeted image digest
          required: true
          schema:
            type: string
        - name: at
          in: query
          description: >-
            The RFC-3339 timestamp of the evaluation. If not specified, the most
            recent evaluation will be returned
          required: false
          schema:
            type: string
            format: date-time
        - name: tag
          in: query
          description: The image full tag
          required: true
          schema:
            type: string
      tags:
        - Scanning
      responses:
        '200':
          description: The policy evaluation summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningCheckSummary'
  '/api/scanning/v1/images/by_id/{imageId}/checkSummary':
    get:
      summary: >-
        Retrieve the policy evaluation summary of an image with the selected
        timestamp [ImageID]
      parameters:
        - name: imageId
          in: path
          description: The targeted imageID
          required: true
          schema:
            $ref: '#/components/schemas/ScanningImageId'
        - name: at
          in: query
          description: >-
            The RFC-3339 timestamp of the evaluation. If not specified, the most
            recent evaluation will be returned
          required: false
          schema:
            type: string
            format: date-time
        - name: tag
          in: query
          description: The image full tag
          required: true
          schema:
            type: string
      tags:
        - Scanning
      responses:
        '200':
          description: The policy evaluation summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningCheckSummary'
  '/api/scanning/v1/images/{imageDigest}/checkSummary/{policyId}':
    get:
      summary: >-
        Retrieve the policy evaluation summary of a specific policy for an image
        with the selected timestamp [Digest]
      parameters:
        - name: imageDigest
          in: path
          description: The targeted image digest
          required: true
          schema:
            $ref: '#/components/schemas/ScanningImageDigest'
        - name: policyId
          in: path
          description: The targeted policy ID
          required: true
          schema:
            type: string
        - name: at
          in: query
          description: >-
            The RFC-3339 timestamp of the evaluation. If not specified, the most
            recent evaluation will be returned
          required: false
          schema:
            type: string
            format: date-time
        - name: tag
          in: query
          description: The image full tag
          required: true
          schema:
            type: string
      tags:
        - Scanning
      responses:
        '200':
          description: The policy evaluation policy summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningCheckPolicySummary'
  '/api/scanning/v1/images/by_id/{imageId}/checkSummary/{policyId}':
    get:
      summary: >-
        Retrieve the policy evaluation summary of a specific policy for an image
        with the selected timestamp [ImageID]
      parameters:
        - name: imageId
          in: path
          description: The targeted image digest
          required: true
          schema:
            $ref: '#/components/schemas/ScanningImageId'
        - name: policyId
          in: path
          description: The targeted policy ID
          required: true
          schema:
            type: string
        - name: at
          in: query
          description: >-
            The RFC-3339 timestamp of the evaluation. If not specified, the most
            recent evaluation will be returned
          required: false
          schema:
            type: string
            format: date-time
        - name: tag
          in: query
          description: The image full tag
          required: true
          schema:
            type: string
      tags:
        - Scanning
      responses:
        '200':
          description: The policy evaluation policy summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningCheckPolicySummary'
  '/api/scanning/v1/images/{imageDigest}/policyEvaluation':
    get:
      summary: 'Retrieve the policy evaluation summary of an image [Digest]'
      parameters:
        - name: imageDigest
          in: path
          description: The targeted image digest
          required: true
          schema:
            $ref: '#/components/schemas/ScanningImageDigest'
        - name: tag
          in: query
          description: The image full tag
          required: true
          schema:
            type: string
      tags:
        - Scanning
      responses:
        '200':
          description: The policy evaluation summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyEvaluationResponse'
  '/api/scanning/v1/images/by_id/{imageId}/policyEvaluation':
    get:
      summary: 'Retrieve the policy evaluation summary of an image [ImageID]'
      parameters:
        - name: imageId
          in: path
          description: The targeted imageID
          required: true
          schema:
            $ref: '#/components/schemas/ScanningImageId'
        - name: tag
          in: query
          description: The image full tag
          required: true
          schema:
            type: string
      tags:
        - Scanning
      responses:
        '200':
          description: The policy evaluation summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyEvaluationResponse'
  /api/scanning/v1/policies:
    get:
      summary: >-
        Retrieve the list of all the policies in the targeted Anchore policy
        bundle
      parameters:
        - name: bundleId
          in: query
          description: >-
            Target bundle. If not specified, the currently active bundle will be
            used.
          required: false
          schema:
            type: string
      tags:
        - Scanning
      responses:
        '200':
          description: List of all the policies in the targeted policy bundle
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScanningPolicy'
    post:
      summary: Create a new Anchore policy in the targeted Anchore policy bundle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanningPolicy'
      tags:
        - Scanning
      responses:
        '200':
          description: The newly created policy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningPolicy'
  /api/scanning/v1/auditPolicies:
    get:
      summary: >-
        Retrieve the list of all the default audit policies IDs in the targeted
        Anchore policy bundle
      parameters:
        - name: bundleId
          in: query
          description: >-
            Target bundle. If not specified, the currently active bundle will be
            used.
          required: false
          schema:
            type: string
      tags:
        - Scanning
      responses:
        '200':
          description: >-
            List of all the default audit policies IDs in the targeted policy
            bundle
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  '/api/scanning/v1/policies/{id}':
    get:
      summary: >-
        Retrieve the policy with the given id in the targeted Anchore policy
        bundle
      tags:
        - Scanning
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: bundleId
          in: query
          description: >-
            Target bundle. If not specified, the currently active bundle will be
            used.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The policy with the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningPolicy'
        '404':
          description: Policy not found
    put:
      summary: >-
        Update the policy with the given id in the targeted Anchore policy
        Bundle
      tags:
        - Scanning
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanningPolicy'
      responses:
        '200':
          description: The updated policy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningPolicy'
        '404':
          description: Policy not found
    delete:
      summary: >-
        Delete the policy with the given id in the targeted Anchore policy
        Bundle
      tags:
        - Scanning
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: bundleId
          in: query
          description: >-
            Target bundle. If not specified, the currently active bundle will be
            used.
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Policy deleted
        '404':
          description: Policy not found
  /api/scanning/v1/registryDisplayNames:
    get:
      summary: >-
        Retrieve the list of all mappings between registry names and registry
        display names
      tags:
        - Scanning
      responses:
        '200':
          description: List of all registry display name mappings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScanningRegistryDisplayNameMapping'
  /api/scanning/v1/whitelists:
    get:
      summary: >-
        Retrieve all the vulnerability exception lists in the targeted Anchore
        policy bundle
      parameters:
        - name: bundleId
          in: query
          description: >-
            Target bundle. If not specified, the currently active bundle will be
            used.
          required: false
          schema:
            type: string
        - name: withItems
          in: query
          description: >
            Include or not "items" in the response. Useful when there are a lot
            of vulnerability exception lists.
          required: false
          schema:
            type: boolean
      tags:
        - Scanning
      responses:
        '200':
          description: All the vulnerability exception lists in the targeted policy bundle
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScanningVulnException'
    post:
      summary: Create a new vulnerability exception list in the targeted policy bundle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanningVulnException'
      tags:
        - Scanning
      responses:
        '200':
          description: The newly created vulnerability exception list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningVulnException'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningError'
              example: Missing field name
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningError'
              example: >-
                A vulnerability exception list with the given name already
                exists
  '/api/scanning/v1/whitelists/{id}':
    get:
      summary: >-
        Retrieve the vulnerability exception list with the given id in the
        active Anchore policy bundle
      tags:
        - Scanning
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: bundleId
          in: query
          description: >-
            Target bundle. If not specified, the currently active bundle will be
            used.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The vulnerability exception list with the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningVulnException'
        '404':
          description: Vulnerability exception list not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningError'
              example: Vulnerability exception list not found
    put:
      summary: >-
        Update the main attributes of the vulnerability exception list with the
        given id in the targeted Anchore policy bundle
      tags:
        - Scanning
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: bundleId
          in: query
          schema:
            type: string
          description: >-
            Target bundle. If not specified, the currently active bundle will be
            used.
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanningVulnExceptionPUTRequest'
      responses:
        '200':
          description: The updated vulnerability exception list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningVulnException'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningError'
              example: Missing field name
        '404':
          description: Policy not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningError'
              example: Vulnerability exception list not found
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningError'
              example: >-
                A vulnerability exception list with the given name already
                exists
    delete:
      summary: >-
        Delete the vulnerability exception list with the given id in the
        targeted Anchore policy bundle
      tags:
        - Scanning
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: bundleId
          in: query
          description: >-
            Target bundle. If not specified, the currently active bundle will be
            used.
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Vulnerability exception list deleted
  /api/scanning/v1/vulnexceptions:
    get:
      summary: >-
        Retrieve all the vulnerability exception lists in the targeted Anchore
        policy bundle
      parameters:
        - name: bundleId
          in: query
          description: >-
            Target bundle. If not specified, the currently active bundle will be
            used.
          required: false
          schema:
            type: string
        - name: withItems
          in: query
          description: >
            Include or not "items" in the response. Useful when there are a lot
            of vulnerability exception lists.
          required: false
          schema:
            type: boolean
      tags:
        - Scanning
      responses:
        '200':
          description: All the vulnerability exception lists in the targeted policy bundle
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScanningVulnException'
    post:
      summary: Create a new vulnerability exception list in the targeted policy bundle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanningVulnException'
      tags:
        - Scanning
      responses:
        '200':
          description: The newly created vulnerability exception list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningVulnException'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningError'
              example: Missing field name
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningError'
              example: >-
                A vulnerability exception list with the given name already
                exists
  '/api/scanning/v1/vulnexceptions/{id}':
    get:
      summary: >-
        Retrieve the vulnerability exception list with the given id in the
        active Anchore policy bundle
      tags:
        - Scanning
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: bundleId
          in: query
          description: >-
            Target bundle. If not specified, the currently active bundle will be
            used.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The vulnerability exception list with the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningVulnException'
        '404':
          description: Vulnerability exception list not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningError'
              example: Vulnerability exception list not found
    put:
      summary: >-
        Update the main attributes of the vulnerability exception list with the
        given id in the targeted Anchore policy bundle
      tags:
        - Scanning
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: bundleId
          in: query
          schema:
            type: string
          description: >-
            Target bundle. If not specified, the currently active bundle will be
            used.
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanningVulnExceptionPUTRequest'
      responses:
        '200':
          description: The updated vulnerability exception list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningVulnException'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningError'
              example: Missing field name
        '404':
          description: Policy not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningError'
              example: Vulnerability exception list not found
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningError'
              example: >-
                A vulnerability exception list with the given name already
                exists
    delete:
      summary: >-
        Delete the vulnerability exception list with the given id in the
        targeted Anchore policy bundle
      tags:
        - Scanning
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: bundleId
          in: query
          description: >-
            Target bundle. If not specified, the currently active bundle will be
            used.
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Vulnerability exception list deleted
  '/api/scanning/v1/vulnexceptions/{id}/vulnerabilities':
    post:
      summary: |
        Add a new vulnerability to a specific vulnerability exception list.
      tags:
        - Scanning
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            description: |
              The vulnerability exception list identifier
        - name: bundleId
          in: query
          description: >-
            Target bundle. If not specified, the currently active bundle will be
            used.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanningVulnExceptionItemRequest'
      responses:
        '200':
          description: Vulnerability added to exception list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningVulnExceptionItemResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningError'
              example: Bad request
        '404':
          description: Vulnerability exception list not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningError'
              example: Vulnerability exception list not found
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningError'
              example: Vulnerability already exists in the exception list
  '/api/scanning/v1/vulnexceptions/{id}/vulnerabilities/{vulnId}':
    get:
      summary: >
        Retrieve vulnerability informations in a specific vulnerability
        exception list
      tags:
        - Scanning
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            description: |
              The vulnerability exception list identifier
        - name: vulnId
          in: path
          required: true
          schema:
            type: string
            description: |
              The vulnerability identifier
        - name: bundleId
          in: query
          description: >-
            Target bundle. If not specified, the currently active bundle will be
            used.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Fetched vulnerability details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningVulnExceptionItemResponse'
        '404':
          description: Vulnerability exception list or vulnerability item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningError'
              example: Vulnerability exception list not found
    put:
      summary: |
        Update a vulnerability in a specific vulnerability exception list
      tags:
        - Scanning
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            description: |
              The vulnerability exception list identifier
        - name: vulnId
          in: path
          required: true
          schema:
            type: string
            description: |
              The vulnerability identifier
        - name: bundleId
          in: query
          description: >-
            Target bundle. If not specified, the currently active bundle will be
            used.
          required: false
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanningVulnExceptionItemRequest'
      responses:
        '200':
          description: Updated vulnerability details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningVulnExceptionItemResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningError'
              example: Bad request
        '404':
          description: Vulnerability exception list or vulnerability item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningError'
              example: Vulnerability exception list not found
    delete:
      summary: |
        Remove a vulnerability from a specific vulnerability exception list
      tags:
        - Scanning
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            description: |
              The vulnerability exception list identifier
        - name: vulnId
          in: path
          required: true
          schema:
            type: string
            description: |
              The vulnerability identifier
        - name: bundleId
          in: query
          description: >-
            Target bundle. If not specified, the currently active bundle will be
            used.
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Vulnerability removed
  '/api/scanning/v1/vulnerabilities/{id}':
    get:
      summary: |
        Retrieve generic vulnerability informations
      tags:
        - Scanning
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            description: |
              The vulnerability identifier
      responses:
        '200':
          description: Fetched vulnerability details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningVulnerabilityDetailsResponse'
        '404':
          description: Vulnerability not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningError'
              example: Vulnerability not found
  /api/scanning/v1/mappings:
    get:
      summary: >-
        Retrieve the list, in order, of all the mappings in the targeted Anchore
        policy bundle
      parameters:
        - name: bundleId
          in: query
          description: >-
            Target bundle. If not specified, the currently active bundle will be
            used.
          required: false
          schema:
            type: string
      tags:
        - Scanning
      responses:
        '200':
          description: List of all the mappings in the targeted policy bundle
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningMappingList'
        '404':
          description: Bundle not found
    put:
      summary: Update the mappings in the targeted Anchore policy Bundle.
      tags:
        - Scanning
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanningMappingList'
      responses:
        '200':
          description: The updated mapping list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningMappingList'
        '404':
          description: Bundle not found
  /api/scanning/v1/whitelistedImages:
    get:
      summary: Retrieve the Image whitelist in the targeted Anchore bundle
      parameters:
        - name: bundleId
          in: query
          description: >-
            Target bundle. If not specified, the currently active bundle will be
            used.
          required: false
          schema:
            type: string
      tags:
        - Scanning
      responses:
        '200':
          description: |
            The list of whitelisted image names
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningImageList'
    put:
      summary: Update the Image whitelist in the targeted Anchore bundle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanningImageList'
      tags:
        - Scanning
      responses:
        '200':
          description: |
            The updated list of whitelisted image names
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningImageList'
  /api/scanning/v1/blacklistedImages:
    get:
      summary: Retrieve the Image blacklist in the targeted Anchore bundle
      parameters:
        - name: bundleId
          in: query
          description: >-
            Target bundle. If not specified, the currently active bundle will be
            used.
          required: false
          schema:
            type: string
      tags:
        - Scanning
      responses:
        '200':
          description: |
            The list of blacklisted image names
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningImageList'
    put:
      summary: Update the Image blacklist in the targeted Anchore bundle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanningImageList'
      tags:
        - Scanning
      responses:
        '200':
          description: |
            The updated list of blacklisted image names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/scanning/v1/alerts:
    get:
      summary: Retrieve the list of all the scanning alerts
      tags:
        - Scanning
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Maximum number of alerts in the response
        - name: cursor
          in: query
          required: false
          schema:
            type: string
          description: >-
            An opaque string representing the current position in the list of
            alerts
      responses:
        '200':
          description: The list of requested alerts
          content:
            application/json:
              schema:
                type: object
                properties:
                  alerts:
                    type: array
                    items:
                      $ref: '#/components/schemas/ScanningAlert'
                  responseMetadata:
                    type: object
                    properties:
                      next_cursor:
                        type: string
    post:
      summary: Create a new scanning alert
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanningAlert'
      tags:
        - Scanning
      responses:
        '200':
          description: The newly created alert
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningAlert'
  '/api/scanning/v1/alerts/{id}':
    get:
      summary: Retrieve the scanning alert with the given id
      tags:
        - Scanning
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The scanning alert with the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningAlert'
        '404':
          description: Alert not found
    put:
      summary: Update the alert with the given id
      tags:
        - Scanning
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanningAlert'
      responses:
        '200':
          description: The updated alert
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningAlert'
        '404':
          description: Alert not found
    delete:
      summary: Delete the scanning alert with the given id
      tags:
        - Scanning
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Alert deleted
        '404':
          description: Alert not found
  /api/scanning/v1/query/containers:
    post:
      summary: >-
        Retrieve the list of runtime images in the selected scope, time and
        container range.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanningQueryBody'
      tags:
        - Scanning
      responses:
        '200':
          description: The list of requested runtime images
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningQueryResponse'
  /api/scanning/v1/reports:
    post:
      summary: Generate a report based on the given scope and conditions.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanningReportQueryBody'
      tags:
        - Scanning
      responses:
        '200':
          description: The report was generated successfully for given conditions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningReportResponse'
        '404':
          description: The API was not found
  /api/scanning/v1/reports/csv:
    post:
      summary: Generate a CSV formatted report based on the given scope and conditions.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanningReportQueryBody'
      tags:
        - Scanning
      responses:
        '200':
          description: The download request was received successfully.
          content:
            text/csv:
              schema:
                type: string
          headers:
            content-disposition:
              schema:
                type: string
              description: >-
                string in the format of 'attachment;
                filename={year}{month}{day}-{queryType}-report.csv"'
            content-type:
              schema:
                type: string
              description: text/csv
        '404':
          description: The result was not found
  /api/scanning/v1/results:
    get:
      summary: Fetches all scanning results
      description: Fetches all scanning results
      parameters:
        - name: filter
          in: query
          description: >-
            If specified, only scan results that contain this substring will be
            retrieved
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Sorting method. Defaults to descending.
          required: false
          schema:
            type: string
            enum:
              - desc
              - asc
        - name: sortBy
          in: query
          description: Field used to alphabetically sort by. Defaults to scanDate.
          required: false
          schema:
            type: string
            enum:
              - repository
              - tag
              - digest
              - scanDate
        - name: registry
          in: query
          description: >-
            A comma-separated list of registry display names. If specified, only
            scan results from these registries will be retrieved
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: >-
            If specified, a 0-based index on the scan results list. Only entries
            >= offset will be retrieved. Defaults to 0. If filter is also
            specified, this index will be applied on the filtered list. An empty
            list will be retrieved if this index overflows the list.
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          description: >-
            If specified, a limit on the number of entries retrieved. If filter
            is also specified, the limit will be applied on the filtered list.
            limit must be >= 1 and if it overflows the list all entries will be
            retrieved.
          required: false
          schema:
            type: integer
      tags:
        - Scanning
      responses:
        '200':
          description: an array of scan results matching the provided filters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningResultsBody'
        '400':
          description: An invalid request was provided
        '500':
          description: 'Internal server error, not due to request parameters'
  /api/scanning/v1/retention/policy:
    get:
      summary: Retrieve the retention policy
      tags:
        - Scanning
      responses:
        '200':
          description: The retention policy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningRetentionBody'
        '500':
          description: Unable to retrieve retention policy for the customer
    put:
      summary: Update retention policy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanningRetentionBody'
      tags:
        - Scanning
      responses:
        '200':
          description: The retention policy was successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanningRetentionBody'
        '400':
          description: The retention policy was not updated
        '500':
          description: 'Internal server error, not due to request parameters'
  /api/scanning/v1/onboarding:
    get:
      summary: Fetch secure onboarding steps' status
      description: fetches secure specific onboarding steps
      tags:
        - Onboarding
      responses:
        '200':
          description: map with completion status of each step specific to customer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardingMetadata'
        '404':
          description: No record found for customerId
  '/api/scanning/v1/onboarding/{customerId}':
    get:
      summary: Fetch customer secure onboarding steps' status
      description: Admin api for fetching completion status for secure steps for customer
      tags:
        - Onboarding
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: number
      responses:
        '200':
          description: admin endpoint for getting steps specific to secure + customer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardingMetadata'
        '404':
          description: No record found for customerId
    put:
      summary: Create or update customer secure onboarding steps' status
      description: >-
        Admin endpoint for creating or updating secure specific onboarding steps
        for customer
      tags:
        - Onboarding
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: number
      requestBody:
        required: true
        description: One or more updated completion states for onboarding steps in secure
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnboardingMetadata'
      responses:
        '200':
          description: >-
            admin endpoint for updating onboarding steps specific to secure +
            customer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardingMetadata'
        '404':
          description: No record found for customerId
    delete:
      description: >-
        Admin endpoint for removing secure specific onboarding steps for
        customer
      summary: Removing secure specific onboarding steps for customer
      tags:
        - Onboarding
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: number
      responses:
        '204':
          description: Simple acknowledgment of a successfully deleted record
        '404':
          description: The record for customerId did not exist
  /api/scanning/v1/system/feeds:
    get:
      description: Get the vulnerability feeds metadata information
      tags:
        - Scanning
      summary: list feeds operations and information
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeedMetadata'
        '500':
          description: Internal Error
  /api/v1/secureEvents:
    get:
      summary: Retrieves a secure events feed
      description: >
        Retrieves the list of events that match a filter given a specified

        time range or cursor.

        The pair `from` and `to` and the `cursor` parameter are mutually

        exclusive. If you supply a `from` and `to` you must not supply a

        `cursor` and vice-versa.

        If you supply a `cursor` then the `prev` field inside the response is

        set if and only if there are events before the first event returned,
        while

        the `next` field inside the response is set if and only if there are

        events after the last event returned. If, instead, you supply the `from`

        and `to` pair then the `prev` and `next` fields inside the response are

        always set, because in that case there is no efficient way for the
        backend

        to verify if `next` and `prev` events actually exist. For this reason,
        the

        best way to use this API is to supply the `from` and `to` pair at the

        first request and then use the `prev` and `next` cursors to fetch events

        before and after the events returned.

        Please, do note that if you supply `from` and `to` and receive the
        `prev`

        and `next` cursors, any subsequent request made by supplying that `next`

        or `prev` cursor will return results that are not filtered by the `from`

        and `to` you provided in the first request.

        Finally, the difference between `from` and `to` cannot be greater than

        2 weeks.
      tags:
        - Secure Events
      parameters:
        - $ref: '#/components/parameters/parameters-from'
        - $ref: '#/components/parameters/parameters-to'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/specialCategory'
      responses:
        '200':
          description: The secure events feed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eventsFeed'
        '400':
          $ref: '#/components/responses/responses-badRequest'
        '422':
          $ref: '#/components/responses/unprocessableEntity'
        '500':
          $ref: '#/components/responses/internalServerError'
  /api/v1/secureEvents/status:
    get:
      summary: Ping the status
      description: |
        Retrieves a 200 to double check if the `secureEvents` feature on the
        backend is available.
      tags:
        - Secure Events
      responses:
        '200':
          description: The supported secure events filters.
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  status:
                    type: string
                    description: The status.
                    enum:
                      - ok
                    example: ok
  /api/v1/secureEvents/hasEvents:
    get:
      summary: Verify presence of old events
      description: |
        Verify if there are new/legacy events in the store.
      tags:
        - Secure Events
      responses:
        '200':
          description: Whether or not there are new/legacy events.
          content:
            application/json:
              schema:
                type: object
                required:
                  - hasLegacyEvents
                  - hasNewEvents
                properties:
                  hasLegacyEvents:
                    type: boolean
                    description: >
                      This is `true` if and only if there are no new events
                      (i.e.

                      events in the new indices) in the time range from 30 days

                      ago to 29 days ago. This assumes that once the Secure
                      Events

                      feature is deployed, all the events are written in the new

                      indices only; therefore, there are legacy events only if

                      there are no events in the new indices for that time
                      range.
                  hasNewEvents:
                    type: boolean
                    description: >
                      This is `true` if and only if there is at least a new
                      event

                      in the time range from 1 day ago to now.
                    example: true
        '500':
          $ref: '#/components/responses/internalServerError'
  /api/v1/secureEvents/filters:
    get:
      summary: Retrieves the supported events feed scope filters
      description: >
        Retrieves the whitelist of supported secure events scope filters that
        can

        be used inside the `filter` parameter while retrieving the secure events

        feed.
      tags:
        - Secure Events
      responses:
        '200':
          description: The supported secure events scope filters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scopeFilters'
        '500':
          $ref: '#/components/responses/internalServerError'
  '/api/v1/secureEvents/{eventId}':
    get:
      summary: Retrieves an event given its id
      description: |
        Retrieves an event with a given id.
      tags:
        - Secure Events
      parameters:
        - $ref: '#/components/parameters/eventId'
      responses:
        '200':
          description: Event with the given id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
        '404':
          $ref: '#/components/responses/responses-notFound'
        '500':
          $ref: '#/components/responses/internalServerError'
  /api/v1/activityAudit/summary:
    get:
      summary: Retrieve a summary of the audit events
      description: |
        Retrieves a summary of the audit events in a time range grouped by a
        series of metrics.
      tags:
        - Activity Audit
      parameters:
        - $ref: '#/components/parameters/components-parameters-from'
        - $ref: '#/components/parameters/components-parameters-to'
        - $ref: '#/components/parameters/metric'
        - $ref: '#/components/parameters/scopeFilter'
        - $ref: '#/components/parameters/parameters-filter'
        - name: segment
          description: |
            Whether or not to segment the results with a distance between points
            depending on the distance between `from` and `to`.
          in: query
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: The summary of audit events.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metric:
                    type: object
                    additionalProperties: true
                  step:
                    type: number
                    format: integer
                    description: >
                      If segmented data has been requested, the distance between
                      points

                      in values expressed in nanoseconds.
                  values:
                    type: object
                    properties:
                      command:
                        $ref: '#/components/schemas/summarySerie'
                      connection:
                        $ref: '#/components/schemas/summarySerie'
                      fileaccess:
                        $ref: '#/components/schemas/summarySerie'
                      kubernetes:
                        $ref: '#/components/schemas/summarySerie'
                example:
                  - metric:
                      host.hostName: ip-127-0-0-1
                    values:
                      command:
                        - - 1569065400000000000
                          - 132
                        - - 1569065460000000000
                          - 132
                        - - 1569065520000000000
                          - 132
                        - - 1569065580000000000
                          - 132
                    step: 60000000000
                  - metric:
                      host.hostName: ip-172-31-63-213
                    values:
                      command:
                        - - 1569065400000000000
                          - 36
                        - - 1569065460000000000
                          - 36
                        - - 1569065520000000000
                          - 36
                        - - 1569065580000000000
                          - 36
                      connection:
                        - - 1569065400000000000
                          - 36
                        - - 1569065460000000000
                          - 36
                        - - 1569065520000000000
                          - 36
                        - - 1569065580000000000
                          - 36
                      fileaccess:
                        - - 1569065400000000000
                          - 36
                        - - 1569065460000000000
                          - 36
                        - - 1569065520000000000
                          - 36
                        - - 1569065580000000000
                          - 36
                      kubernetes:
                        - - 1569065400000000000
                          - 36
                        - - 1569065460000000000
                          - 36
                        - - 1569065520000000000
                          - 36
                        - - 1569065580000000000
                          - 36
                    step: 60000000000
        '400':
          $ref: '#/components/responses/components-responses-badRequest'
  /api/v1/activityAudit/events:
    get:
      summary: Retrieves a list of audit events
      description: |
        Retrieves a list of audit events in a time range filters.
        The pair `from` and `to` and the `cursor` parameter are mutually
        exclusive. If you supply a `from` and `to` you must not supply a
        `cursor` and vice-versa.
      tags:
        - Activity Audit
      parameters:
        - $ref: '#/components/parameters/components-parameters-from'
        - $ref: '#/components/parameters/components-parameters-to'
        - $ref: '#/components/parameters/parameters-cursor'
        - $ref: '#/components/parameters/parameters-limit'
        - $ref: '#/components/parameters/scopeFilter'
        - $ref: '#/components/parameters/parameters-filter'
      responses:
        '200':
          description: The list of audit events.
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    $ref: '#/components/schemas/properties-page'
                  data:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/command'
                        - $ref: '#/components/schemas/connection'
                        - $ref: '#/components/schemas/fileaccess'
                        - $ref: '#/components/schemas/kubernetesAudit'
        '400':
          $ref: '#/components/responses/components-responses-badRequest'
  '/api/v1/activityAudit/events/{type}/{eventId}':
    get:
      summary: Retrieves an audit event given its type and id
      description: |
        Retrieves an audit event of a specified type with a given id.
      tags:
        - Activity Audit
      parameters:
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/parameters-eventId'
        - $ref: '#/components/parameters/metrics'
      responses:
        '200':
          description: Audit event with the given type and id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singleResponse'
        '404':
          $ref: '#/components/responses/responses-notFound'
  '/api/v1/activityAudit/events/{type}/{eventId}/trace':
    get:
      summary: Retrieves the trace of an audit event
      description: |
        Retrieves a trace of all the audit events related to the traceable event
        in case it is a long running task. The audit events returned are all the
        commands, connections etc collected during the duration of the traceable
        event.
        If the event has not completed yet, the time range considered is up
        until the current time.
      tags:
        - Activity Audit
      parameters:
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/parameters-eventId'
        - $ref: '#/components/parameters/parameters-limit'
      responses:
        '200':
          description: |
            All the events associated with this traceable event.
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    $ref: '#/components/schemas/properties-page'
                  data:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/command'
                        - $ref: '#/components/schemas/connection'
                        - $ref: '#/components/schemas/fileaccess'
        '400':
          $ref: '#/components/responses/components-responses-badRequest'
        '404':
          $ref: '#/components/responses/responses-notFound'
        '422':
          $ref: '#/components/responses/responses-unprocessableEntity'
  /api/v1/eventsForwarding/supported:
    get:
      summary: Retrieve a list of the supported targets.
      description: |
        Retrieves a list of all the supported forwarding targets.
      tags:
        - Events Forwarding
      responses:
        '200':
          description: List of supported forwarding targets.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - syslog
                  - splunk
        '400':
          $ref: '#/components/responses/components-responses-badRequest'
  /api/v1/eventsForwarding/channels:
    get:
      summary: Retrieve a list of the supported channels.
      description: |
        Retrieves a list of all the supported forwarding channels.
      tags:
        - Events Forwarding
      responses:
        '200':
          description: List of supported forwarding channels.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - POLICY_EVENTS
        '400':
          $ref: '#/components/responses/components-responses-badRequest'
  /api/v1/eventsForwarding/integrations:
    get:
      summary: Retrieve a list of integrations for the customer.
      description: |
        Retrieves a list of forwarding integrations for the customer making the
        request.
      tags:
        - Events Forwarding
      responses:
        '200':
          description: The list of integrations.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/integration'
        '400':
          $ref: '#/components/responses/components-responses-badRequest'
    post:
      summary: Create an integration for the customer.
      description: |
        Creates a forwarding integration for the customer.
      tags:
        - Events Forwarding
      requestBody:
        description: |
          The content of the integration to create.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createPayload'
      responses:
        '201':
          description: |
            The creation of the integration was successful.
          headers:
            Location:
              schema:
                type: string
                example: /api/v1/eventsForwarding/integrations/1
              description: |
                Where to find the integration newly created
        '400':
          $ref: '#/components/responses/components-responses-badRequest'
  '/api/v1/eventsForwarding/integrations/{integrationId}':
    get:
      summary: Retrieve an integration given its id.
      description: |
        Retrieves a forwarding rule given its id.
      tags:
        - Events Forwarding
      parameters:
        - $ref: '#/components/parameters/integrationId'
      responses:
        '200':
          description: The forwarding integration with a given id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/integration'
        '404':
          $ref: '#/components/responses/components-responses-notFound'
    patch:
      summary: Update an integration given its id.
      description: |
        Updates an integration given its id. The `PATCH` payload can be any
        combination of the following fields having the value to change.
        None of the `connectionInfo` fields are required for patching.
      tags:
        - Events Forwarding
      parameters:
        - $ref: '#/components/parameters/integrationId'
      requestBody:
        description: |
          The content of the integration to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchPayload'
      responses:
        '204':
          description: |
            The integration was successfully updated.
          headers:
            Location:
              schema:
                type: string
                example: /api/v1/eventsForwarding/integrations/1
              description: |
                Where to find the integration updated
        '404':
          $ref: '#/components/responses/components-responses-notFound'
    delete:
      summary: Delete an integration given its id.
      description: |
        Delete an integration given its id.
      tags:
        - Events Forwarding
      parameters:
        - $ref: '#/components/parameters/integrationId'
      responses:
        '201':
          description: |
            The integration was successfully deleted.
        '404':
          $ref: '#/components/responses/components-responses-notFound'
  /api/v1/profiling/profileGroups:
    get:
      summary: Get info about profile groups for a customer
      description: |
        This endpoint returns the profile groups for a customer
      tags:
        - Profiling
      responses:
        '200':
          description: An array of profile groups for a customer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProfileGroup'
        '401':
          $ref: '#/components/responses/responses-Unauthorized'
  '/api/v1/profiling/profileGroups/{profileGroupId}':
    get:
      summary: Get info about a profile group with a specific id for a customer
      description: |
        This endpoint returns the profile group given a id for a customer
      parameters:
        - $ref: '#/components/parameters/profileGroupId'
      tags:
        - Profiling
      responses:
        '200':
          description: The profile group for the given profileGroupId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileGroup'
        '400':
          $ref: '#/components/responses/responses-BadRequest'
        '401':
          $ref: '#/components/responses/responses-Unauthorized'
  '/api/v1/profiling/profileGroups/{profileGroupId}/profiles':
    get:
      summary: Get all profiles for a given profileGroupId
      description: |
        This endpoint returns the profiles for a given profileGroupId
      parameters:
        - $ref: '#/components/parameters/profileGroupId'
        - $ref: '#/components/parameters/scoreMin'
        - $ref: '#/components/parameters/parameters-status'
        - $ref: '#/components/parameters/components-parameters-filter'
        - $ref: '#/components/parameters/sortBy'
        - $ref: '#/components/parameters/components-parameters-limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sortMethod'
      tags:
        - Profiling
      responses:
        '200':
          description: The profiles for a given profileGroupId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profiles'
        '400':
          $ref: '#/components/responses/responses-BadRequest'
        '401':
          $ref: '#/components/responses/responses-Unauthorized'
  '/api/v1/profiling/profiles/{profileId}':
    get:
      summary: Get profile matching given profileId
      description: |
        This endpoint returns the profile matching a given profileId
      parameters:
        - $ref: '#/components/parameters/profileId'
      tags:
        - Profiling
      responses:
        '200':
          description: The profile for a given profileId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '400':
          $ref: '#/components/responses/responses-BadRequest'
        '401':
          $ref: '#/components/responses/responses-Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  '/api/v1/profiling/profiles/{profileId}/actions/reset':
    post:
      summary: Reset a profile given the profileId
      description: |
        This endpoint can be used to reset a profile given a profileId
      parameters:
        - $ref: '#/components/parameters/profileId'
      tags:
        - Profiling
      responses:
        '200':
          description: The ActionsProfileResponse containing time when profile was reset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileActionResetResponse'
        '400':
          $ref: '#/components/responses/responses-BadRequest'
        '401':
          $ref: '#/components/responses/responses-Unauthorized'
        '500':
          $ref: '#/components/responses/ServerError'
  '/api/v1/profiling/profiles/{profileId}/actions/remove':
    post:
      summary: Remove a profile given the profileId
      description: |
        This endpoint can be used to remove a profile given a profileId
      parameters:
        - $ref: '#/components/parameters/profileId'
      tags:
        - Profiling
      responses:
        '200':
          description: The ActionsProfileResponse containing time when profile was removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileActionResetResponse'
        '400':
          $ref: '#/components/responses/responses-BadRequest'
        '401':
          $ref: '#/components/responses/responses-Unauthorized'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/v1/profiling/status:
    get:
      summary: Get status of Profiling API
      description: |
        This endpoint can be used to get status of Profiling API
      tags:
        - Profiling
      responses:
        '200':
          description: The ActionsProfileResponse containing time when profile was removed
          content:
            text/plain:
              schema:
                type: string
        '401':
          $ref: '#/components/responses/responses-Unauthorized'
        '403':
          $ref: '#/components/responses/responses-Forbidden'
components:
  parameters:
    panel:
      name: panel
      in: query
      required: false
      schema:
        type: string
        enum:
          - buildtimeScanResults
          - buildtimeCveSeverity
          - runtimeScanResults
          - runtimeCveSeverity
          - policyEvents
          - benchmarks
      description: >-
        Comma seperated string of panel(s) for which to fetch metrics. Defaults
        to all panels if omitted.
      example: 'buildtimeScanResults,runtimeScanResults,benchmarks'
    timeframe:
      name: timeframe
      in: query
      required: false
      schema:
        type: string
        enum:
          - instant
          - range
      description: >-
        Type of data to return. Either instant (Donut graphs) or range (Trend
        graphs). Defaults to both if omitted. If range data is included, a
        constant timeframe will be returned for all range data in the response,
        with a length of 90 days, or the number of days since customer creation,
        whichever is smaller.
    cluster:
      name: cluster
      in: query
      required: false
      schema:
        type: string
      description: >-
        Cluster name (Applies to runtimeScanResults and runtimeCveSeverity). Can
        be set to `non-k8s` to get data not associated with a kubernetes cluster
        (e.g. locally run Docker images. Omit to include all data (both k8s and
        non-k8s)
    namespace:
      name: namespace
      in: query
      required: false
      schema:
        type: string
      description: >-
        Namespace name (Applies to runtimeScanResults and runtimeCveSeverity).
        Only available if `cluster` is set and valid. Omit to include all
        namespaces.
    standard:
      name: standard
      description: The compliance standard to be queried.
      required: true
      in: query
      schema:
        type: string
        enum:
          - PCI_3.2
          - SOC2
          - NIST_800_190
        example: 'PCI_3.2, SOC2, NIST_800_190'
    environment:
      name: environment
      description: The environemnt to be queried for a given standard.
      required: true
      in: query
      schema:
        type: string
        enum:
          - kubernetes
        example: kubernetes
    controlId:
      name: controlId
      description: The control id to be queried for a given standard.
      required: true
      in: query
      schema:
        type: string
        enum:
          - 2.2.1.a
          - 3.6.1
          - 2.1.1
        example: '2.2.1.a, 3.6.1, 2.1.1'
    parameters-cluster:
      name: cluster
      description: The cluster name scope for a given compliance standard.
      required: false
      in: query
      schema:
        type: string
        enum:
          - prod
          - test
        example: prod
    detail:
      name: detail
      description: >-
        To fetch the long form description of every control in the compliance
        report
      required: true
      in: query
      schema:
        type: boolean
        default: true
        example: false
    showBulkFail:
      name: showBulkFail
      description: To be used to determine whether to show bulk failures
      required: false
      in: query
      schema:
        type: boolean
        default: true
        example: false
    status:
      name: status
      description: To filter the results by status=FAIL/PASS/WARN
      required: false
      in: query
      schema:
        type: string
        enum:
          - PASS
          - FAIL
          - WARN
        example: WARN
    domain:
      in: path
      name: domain
      schema:
        type: string
        enum:
          - scanning
      required: true
      description: The data domain of the report. The only supported value is `scanning`
      example: scanning
    reportType:
      in: path
      name: reportType
      schema:
        type: string
        enum:
          - vulnerabilities
          - policies
      required: true
      description: The kind of report to generate
      example: vulnerabilities
    scheduleId:
      in: path
      name: scheduleId
      schema:
        type: string
      required: true
      description: The ID of the schedule for report generation
      example: schedule-1hDkklCWc5UtuFhwCaZkbFNY5ZV
    fileId:
      in: path
      name: fileId
      schema:
        type: string
      required: true
      description: The ID of the generated report ready for download
      example: 1ueqXHvmzvtwJV2lFr8z8wdydu
    from:
      name: from
      in: query
      required: true
      schema:
        type: integer
      description: A unix timestamp in seconds of specifying the initial time of a range
    to:
      name: to
      in: query
      required: true
      schema:
        type: integer
      description: A unix timestamp in seconds of specifying the end time of a range
    components-parameters-cluster:
      name: cluster
      in: query
      required: true
      schema:
        type: string
      description: The name of a kubernetes cluster
    parameters-namespace:
      name: namespace
      in: query
      required: true
      schema:
        type: string
      description: The name of a kubernetes namespace
    name:
      name: name
      in: query
      required: true
      schema:
        type: string
      description: The name of a pod owner
    kind:
      name: kind
      in: query
      required: true
      schema:
        type: string
        enum:
          - Service
          - Deployment
          - StatefulSet
          - DaemonSet
          - Pod
          - Namespace
      description: Specifies how to group pods
    namespaceName:
      name: namespaceName
      in: path
      required: true
      schema:
        type: string
      description: The name of a kubernetes namespace
    parameters-from:
      name: from
      description: |
        From, expressed in nanoseconds. The difference between `from` and `to`
        cannot be greater than 2 weeks.
      in: query
      required: false
      schema:
        type: number
        format: int64
        minimum: 0
        example: 1546300800000000000
    parameters-to:
      name: to
      description: |
        To, expressed in nanoseconds. The difference between `from` and `to`
        cannot be greater than 2 weeks.
      in: query
      required: false
      schema:
        type: number
        format: int64
        minimum: 0
        example: 1546300800000000000
    cursor:
      name: cursor
      description: >
        Cursor is a string used to retrieve data given a specific context. The
        context can either be events feed before a certain event, after it or
        its surrounding. See the `prev`, `next` and `cursor` fields inside the
        response for further details.
      in: query
      required: false
      schema:
        type: string
        example: LTltNGUybXIwdWkzZThhMjE1bjRn
    filter:
      name: filter
      description: >
        Query language expression for filtering results. It is a subset of the

        full metrics query language used in monitoring.


        Operators:

        - `and`, `or` and `not` logical operators (i.e. `pid = 1 and ppid = 2`)

        - `=`, `!=`, `>`, `>=`, `<` and `<=` comparison operators (i.e. `pid =
        1`)

        - `in` to check inclusion in a list of values (i.e. `pid in (1, 2)` or

        `clientipv4 in ("127.0.0.1", "192.168.0.1")`)


        This query language does not support the full set of metrics supported

        in the monitor query language, but instead supports a set of fields

        proper to each audit events type.


        The list of supported fields can be retrieved through the

        `eventsFeedFilters` endpoint. In addition to those fields, also these

        fields are supported:

        - `severity` as numeric value in the `[0, 7]` range

        - `category` as string value

        - `originator` as string value (either  `policy` or `scanning`)

        - `name` as string value

        - `freeText` as string value

        - `source` as string value

        - `agentId` as numeric value

        - `containerId` as string value

        - `machineId` as string value

        - `ruleName` as string value

        - `ruleType` as numeric value

        - `ruleSubType` as numeric value

        - `policyId` as numeric value

        - `alertName` as string value

        - `trigger` as string value

        - `image.id` as string value

        - `image.registry` as string value

        - `image.repo` as string value

        - `image.tag` as string value

        - `image.digest` as string value
      in: query
      required: false
      schema:
        type: string
        example: agent.id=1
    limit:
      name: limit
      description: Limit the number of events to return.
      in: query
      schema:
        type: number
        format: integer
        example: 50
        minimum: 1
        maximum: 999
        default: 100
    specialCategory:
      name: specialCategory
      description: |
        How to handle special events categories, like the policy simulation
        (advisor).
        - `exclude_simulation` excludes events with category `simulation`
        - `only_simulation` returns only events with category `simulation`
      in: query
      schema:
        type: string
        enum:
          - exclude_simulation
          - only_simulation
        example: exclude_simulation
        default: exclude_simulation
    eventId:
      name: eventId
      description: The event id.
      required: true
      in: path
      schema:
        type: string
        example: 15cbf54e34df95404caad1c988cf7c42
    components-parameters-from:
      name: from
      description: 'From, expressed in nanoseconds.'
      in: query
      schema:
        type: number
        format: long
        example: 1546300800000000000
    components-parameters-to:
      name: to
      description: 'To, expressed in nanoseconds.'
      in: query
      schema:
        type: number
        format: long
        example: 1546300800000000000
    metric:
      name: metric
      description: |
        Metric used for aggregating results. The metric values are directly
        fetched from the metadata service, so please refer to it for the full
        list of supported metrics.
      in: query
      schema:
        type: string
        example: host.hostName
    scopeFilter:
      name: scopeFilter
      description: >
        Metrics query language expression for filtering results based on the
        scope. This filter is forwarded to the metadata service to scope down
        the number of results based on metrics attributes.
      in: query
      schema:
        type: string
        example: host.hostName="ip-127-0-0-1"
    parameters-filter:
      name: filter
      description: >
        Query language expression for filtering results. It is a subset of the

        full metrics query language used in monitoring.


        Operators:

        - `and`, `or` and `not` logical operators (i.e. `pid = 1 and ppid = 2`)

        - `=`, `!=`, `>`, `>=`, `<` and `<=` comparison operators (i.e. `pid =
        1`)

        - `in` to check inclusion in a list of values (i.e. `pid in (1, 2)` or

        `clientipv4 in ("127.0.0.1", "192.168.0.1")`)


        This query language does not support the full set of metrics supported

        in the monitor query language, but instead supports a set of fields

        proper to each audit events type.


        These are the supported fields:

        - `id`

        - `type`

        - `agentid`

        - `auditid`

        - `clientipv4`

        - `clientport`

        - `cmdline`

        - `comm`

        - `command`

        - `containerid`

        - `count`

        - `customerid`

        - `cwd`

        - `direction`

        - `errorcode`

        - `l4protocol`

        - `loginshell.distance`

        - `loginshell.id`

        - `name`

        - `namespace`

        - `pid`

        - `ppid`

        - `processname`

        - `resource`

        - `rxtimestamp`

        - `serveripv4`

        - `serverport`

        - `sourceaddresses`

        - `stages`

        - `status`

        - `subresource`

        - `timestamp`

        - `uid`

        - `user`

        - `useragent`
      in: query
      schema:
        type: string
        example: pid=1
    parameters-cursor:
      name: cursor
      description: >
        Cursor is a string used to retrieve data given a specific context. The
        context can either be audit events before a certain event, after it or
        its surrounding.
      in: query
      schema:
        type: string
        example: LTltNGUybXIwdWkzZThhMjE1bjRn
    parameters-limit:
      name: limit
      description: Limit the number of results to return.
      in: query
      schema:
        type: number
        format: integer
        example: 100
        minimum: 1
        maximum: 9999
        default: 100
    type:
      name: type
      description: The event type.
      required: true
      in: path
      schema:
        type: string
        example: command
        enum:
          - commands
          - connections
          - fileaccesses
          - kubernetes
    parameters-eventId:
      name: eventId
      description: The audit event id.
      required: true
      in: path
      schema:
        type: string
        example: 15cbf54e34df95404caad1c988cf7c42
    metrics:
      name: metrics
      description: |
        JSON list of metrics used to enrich results.
        If no `metrics` is passed the audit events returned will not have a
        `metrics` field populated. The metrics attributes are directly fetched
        from the metadata service, so please refer to it for the full list of
        supported metrics.
      in: query
      schema:
        type: string
        example: '["host.hostName","container.id"]'
    integrationId:
      name: integrationId
      description: The forwarding integration id.
      required: true
      in: path
      schema:
        type: integer
        example: 1
    profileGroupId:
      name: profileGroupId
      in: path
      description: The id of the profile group
      required: true
      schema:
        type: integer
    scoreMin:
      name: scoreMin
      in: query
      description: >-
        If specified, only profiles with a confidence score at least this amount
        will be retrieved. Defaults to `0`
      required: false
      schema:
        type: integer
    parameters-status:
      name: status
      in: query
      description: >-
        A comma-separated list of statuses. If specified, only profiles with
        these statuses will be retrieved. Defaults to `['FINALIZED','LEARNING']`
      required: false
      schema:
        type: string
        enum:
          - FINALIZED
          - LEARNING
    components-parameters-filter:
      name: filter
      in: query
      description: >-
        If specified, filter to only include profiles where the profile name or
        image name (registry/repository:tag@hash) contains this string. Defaults
        to empty string
      required: false
      schema:
        type: string
    sortBy:
      name: sortBy
      in: query
      description: >-
        Field used to sort. Defaults to `score`. Profiles with
        `status:'FINALIZED'` will always appear above `status:'LEARNING'`, for
        all values of `sortBy` except `sortBy:'status', sortMethod:'asc'`.
      required: false
      schema:
        type: string
        enum:
          - score
          - profileName
          - status
          - createdOn
    components-parameters-limit:
      name: limit
      in: query
      description: >-
        If specified, a limit on the number of entries retrieved. If any filters
        are also specified, the limit will be applied on the filtered list.
        `limit` must be >= `1` and if it overflows the list all entries will be
        retrieved. Defaults to length of list
      required: false
      schema:
        type: integer
    offset:
      name: offset
      in: query
      description: >-
        If specified, a 0-based index on the profiles list. Only entries >=
        `offset` will be retrieved. Defaults to `0`. If any filters are also
        specified, this index will be applied on the filtered list. An empty
        list will be retrieved if this index overflows the list.
      required: false
      schema:
        type: integer
    sortMethod:
      name: sortMethod
      in: query
      description: Sorting method. Defaults to `desc`.
      required: false
      schema:
        type: string
        enum:
          - desc
          - asc
    profileId:
      name: profileId
      in: path
      required: true
      schema:
        type: string
  schemas:
    Instant:
      type: array
      items:
        type: number
        format: integer
      description: >-
        An array of two numbers representing a metric, where the first number is
        the unix timestamp in ms, and the second number is the metric value.
      example:
        - 1554508800
        - 32
    RangeVector:
      type: array
      items:
        $ref: '#/components/schemas/Instant'
      description: >-
        An array of Instant objects representing a metric over a given time
        frame.
      example:
        - - 1554508800
          - 34
        - - 1586451864
          - 3
    Warnings:
      type: array
      items:
        type: string
    Errors:
      type: array
      items:
        type: string
    OverviewBuildtimeScanResultsData:
      type: object
      properties:
        instant:
          type: object
          properties:
            pass:
              $ref: '#/components/schemas/Instant'
            fail:
              $ref: '#/components/schemas/Instant'
        range:
          type: object
          properties:
            pass:
              $ref: '#/components/schemas/RangeVector'
            fail:
              $ref: '#/components/schemas/RangeVector'
        warnings:
          $ref: '#/components/schemas/Warnings'
        errors:
          $ref: '#/components/schemas/Errors'
    OverviewBuildtimeCveSeverityData:
      type: object
      properties:
        instant:
          type: object
          properties:
            critical:
              $ref: '#/components/schemas/Instant'
            high:
              $ref: '#/components/schemas/Instant'
            medium:
              $ref: '#/components/schemas/Instant'
            low:
              $ref: '#/components/schemas/Instant'
        range:
          type: object
          properties:
            critical:
              $ref: '#/components/schemas/RangeVector'
            high:
              $ref: '#/components/schemas/RangeVector'
            medium:
              $ref: '#/components/schemas/RangeVector'
            low:
              $ref: '#/components/schemas/RangeVector'
        warnings:
          $ref: '#/components/schemas/Warnings'
        errors:
          $ref: '#/components/schemas/Errors'
    OverviewRuntimeScanResultsData:
      type: object
      properties:
        instant:
          type: object
          properties:
            pass:
              $ref: '#/components/schemas/Instant'
            fail:
              $ref: '#/components/schemas/Instant'
            unscanned:
              $ref: '#/components/schemas/Instant'
        range:
          type: object
          properties:
            pass:
              $ref: '#/components/schemas/RangeVector'
            fail:
              $ref: '#/components/schemas/RangeVector'
            unscanned:
              $ref: '#/components/schemas/RangeVector'
        warnings:
          $ref: '#/components/schemas/Warnings'
        errors:
          $ref: '#/components/schemas/Errors'
    OverviewRuntimeCveSeverityData:
      type: object
      properties:
        instant:
          type: object
          properties:
            critical:
              $ref: '#/components/schemas/Instant'
            high:
              $ref: '#/components/schemas/Instant'
            medium:
              $ref: '#/components/schemas/Instant'
            low:
              $ref: '#/components/schemas/Instant'
        range:
          type: object
          properties:
            critical:
              $ref: '#/components/schemas/RangeVector'
            high:
              $ref: '#/components/schemas/RangeVector'
            medium:
              $ref: '#/components/schemas/RangeVector'
            low:
              $ref: '#/components/schemas/RangeVector'
        warnings:
          $ref: '#/components/schemas/Warnings'
        errors:
          $ref: '#/components/schemas/Errors'
    OverviewPolicyEventsData:
      type: object
      properties:
        instant:
          type: object
          properties:
            high:
              $ref: '#/components/schemas/Instant'
            medium:
              $ref: '#/components/schemas/Instant'
            low:
              $ref: '#/components/schemas/Instant'
            information:
              $ref: '#/components/schemas/Instant'
        range:
          type: object
          properties:
            high:
              $ref: '#/components/schemas/RangeVector'
            medium:
              $ref: '#/components/schemas/RangeVector'
            low:
              $ref: '#/components/schemas/RangeVector'
            information:
              $ref: '#/components/schemas/RangeVector'
        warnings:
          $ref: '#/components/schemas/Warnings'
        errors:
          $ref: '#/components/schemas/Errors'
    OverviewBenchmarksData:
      type: object
      properties:
        instant:
          type: object
          properties:
            docker:
              $ref: '#/components/schemas/Instant'
            kubernetes:
              $ref: '#/components/schemas/Instant'
            linux:
              $ref: '#/components/schemas/Instant'
        range:
          type: object
          properties:
            docker:
              $ref: '#/components/schemas/RangeVector'
            kubernetes:
              $ref: '#/components/schemas/RangeVector'
            linux:
              $ref: '#/components/schemas/RangeVector'
    OverviewData:
      type: object
      properties:
        buildtimeScanResults:
          $ref: '#/components/schemas/OverviewBuildtimeScanResultsData'
        buildtimeCveSeverity:
          $ref: '#/components/schemas/OverviewBuildtimeCveSeverityData'
        runtimeScanResults:
          $ref: '#/components/schemas/OverviewRuntimeScanResultsData'
        runtimeCveSeverity:
          $ref: '#/components/schemas/OverviewRuntimeCveSeverityData'
        policyEvents:
          $ref: '#/components/schemas/OverviewPolicyEventsData'
        benchmarks:
          $ref: '#/components/schemas/OverviewBenchmarksData'
    OverviewTime:
      type: object
      properties:
        from:
          type: number
          format: integer
          description: >-
            the earliest date in all returned timeseries as a unix timestamp in
            ms.
          example: 1588801177000
        to:
          type: number
          format: integer
          description: >-
            the last date in the all returned timeseries as a unix timestamp in
            ms.
          example: 1588883737000
        sampling:
          type: number
          format: integer
          description: the step size between subsequent datapoints in a timeseries in ms.
          example: 960000
    OverviewResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/OverviewData'
        time:
          $ref: '#/components/schemas/OverviewTime'
    OverviewError:
      type: object
      properties:
        message:
          type: string
          description: a human-readable description of the error
          example: startDate cannot be more than 90 days earlier than endDate
    CronExpression:
      type: string
      pattern: '^[0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+$'
      description: A cron-like expression representing a frequency.
      example: 0 9 * * 1
    Schema:
      type: string
      description: Benchmark Schema
      enum:
        - kube_bench_cis-1.5
        - kube_bench_cis-1.6
        - kube_bench_gke-1.0
        - kube_bench_eks-1.0
        - kube_bench_rh-0.7
        - linux_bench_cis-1.1
        - docker_bench_security_1.0
        - aws_foundations_bench-1.3
    CreateTaskBody:
      type: object
      required:
        - name
        - schedule
        - schema
      properties:
        name:
          type: string
          example: Kube-bench Production
        schedule:
          $ref: '#/components/schemas/CronExpression'
        schema:
          $ref: '#/components/schemas/Schema'
        scope:
          type: string
          example: |
            kubernetes.cluster.name="production"
        enabled:
          type: boolean
          default: true
        excludeControlList:
          type: array
          description: A list of controlIDs to be excluded
          items:
            type: string
          example:
            - 1.1.1.a
            - 1.2.2
    TaskResponseBody:
      allOf:
        - $ref: '#/components/schemas/CreateTaskBody'
        - type: object
          required:
            - id
            - createdOn
            - modifiedOn
          properties:
            id:
              type: integer
              example: 1
            nodeCount:
              type: integer
              example: 1572
            passPercent:
              type: integer
              example: 72
            createdOn:
              type: string
              format: date-time
            modifiedOn:
              type: string
              format: date-time
            lastRunOn:
              type: string
              format: date-time
    controlDescription:
      type: object
      properties:
        standard:
          type: string
          example: PCI_3.2
        controlId:
          type: string
          example: 2.2.1.a
        description:
          type: string
          example: Long form detailed description of the control
    linkDetail:
      type: object
      properties:
        url:
          type: string
          description: >-
            The full url to view the proof / remediation action for a given
            control
          example: 'https://secure.sysdig.com/#/policies?tags=PCI_3.2'
        text:
          type: string
          description: The link text that is to be displayed for a proof/remediation url
          example: Enable k8s auditing
        description:
          type: string
          description: The description of what the link / activity is
          example: Schedule a CIS Benchmark to run on your infrastructure
    control:
      type: object
      properties:
        name:
          type: string
          description: Name of a single compliance control per standard
          example: One function per server isolation
        id:
          type: string
          description: The control id / number of the given control
          example: 2.2.1.a
        status:
          type: string
          enum:
            - PASS
            - FAIL
            - WARN
          example: PASS
        rationale:
          type: string
          description: >-
            The explanation of what the checks are for a given control from
            Sysdig POV. This will be empty when detail=false
          example: >-
            Sysdig has falco policies that can be enabled to detect a particular
            scenario
        description:
          type: string
          description: >-
            The long form detailed description of a given control. This will be
            empty when detail=false
          example: Long form decsription
        remediations:
          type: array
          items:
            $ref: '#/components/schemas/linkDetail'
        proofs:
          type: array
          items:
            $ref: '#/components/schemas/linkDetail'
    family:
      type: object
      properties:
        pass:
          type: number
          format: integer
          description: Total number of passing controls for the compliance family
          example: 7
        total:
          type: number
          format: integer
          description: Total number of controls for the compliance family
          example: 10
        name:
          type: string
          description: >-
            The name / heading of the given compliance family under a compliance
            section
          example: >-
            Do not use vendor-supplied defaults for system passwords and other
            security parameters
        controls:
          type: array
          items:
            $ref: '#/components/schemas/control'
    simpleControl:
      type: object
      properties:
        name:
          type: string
          description: Name of the control
          example: 'Enable only necessary services, protocols and daemons.'
        id:
          type: string
          description: Control id / number
          example: 2.2.1.a
        status:
          type: string
          enum:
            - PASS
            - FAIL
            - WARN
          example: FAIL
    bulkFail:
      type: object
      properties:
        action:
          type: string
          description: The short action text for the type of remediation recommended
          example: Enable Falco Policy
        controls:
          type: array
          items:
            $ref: '#/components/schemas/simpleControl'
    complianceReport:
      type: object
      properties:
        pass:
          type: number
          format: integer
          description: Total number of passing controls for the entire compliance report
          example: 30
        fail:
          type: number
          format: integer
          description: Total number of failing controls for the entire compliance report
          example: 20
        warn:
          type: number
          format: integer
          description: >-
            Total number of controls in warn state for the entire compliance
            report
          example: 7
        unchecked:
          type: number
          format: integer
          description: >-
            Total number of controls not checked by Sysdig for the entire
            compliance report
          example: 20
        checkedTotal:
          type: number
          format: integer
          description: >-
            Total number of controls checked by Sysdig for the entire compliance
            report
          example: 57
        families:
          type: array
          items:
            $ref: '#/components/schemas/family'
        bulkFails:
          type: array
          items:
            $ref: '#/components/schemas/bulkFail'
    ReportConfig:
      type: object
      description: Configuration of a report generation
      required:
        - scope
        - columns
        - sorting
      properties:
        scope:
          type: object
          description: Filter the results based on the given scope
          properties:
            imageId:
              type: string
              nullable: true
              description: restrict the report generation on the given image ID
              example: >-
                sha256:b6fa739cedf5ea12a620a439402b6004d057da800f91c7524b5086a5e4749c9f
            runtimeEnabled:
              type: boolean
              description: whether the report should be filtered using a runtime scope
              example: true
            runtimeScope:
              type: string
              nullable: true
              description: >-
                An AND-composed string of predicates that restrict the scope of
                the generated report
            registry:
              type: string
              nullable: true
              description: Docker registry
              example: docker.io
            repository:
              type: string
              nullable: true
              description: Docker image repository
              example: debian
            tag:
              type: string
              nullable: true
              description: Docker image tag
              example: stable
        queryFilters:
          type: object
          additionalProperties:
            type: object
            properties:
              value:
                oneOf:
                  - type: string
                  - type: number
                  - type: boolean
                  - type: array
                    items:
                      type: string
                description: Filter value
              comparision:
                type: string
                nullable: true
                enum:
                  - <
                  - <=
                  - '='
                  - '>='
                  - '>'
                description: Comparison operator to be applied with the chosen filter value
          description: >-
            Set of additional filter conditions on the generated reports.
            Filters are defined as map with filter names as key.
          example:
            vulnType:
              value: os
            fixAvailable:
              value: false
            severity:
              value: high
              comparison: '>='
        columns:
          type: array
          items:
            type: string
          description: >-
            The columns to be included in the generated report, in the order
            desired
          example:
            - vulnId
            - severity
            - package
        sorting:
          type: array
          description: Sorting criteria
          items:
            type: object
            required:
              - column
              - sortOrder
            properties:
              column:
                type: string
                description: The column identifier chosen for sorting
                example: vulnId
              sortOrder:
                type: string
                enum:
                  - asc
                  - desc
                description: >-
                  The sorting order (ascending or descending) for the given
                  column
                example: asc
    ReportContent:
      type: array
      items:
        type: object
        additionalProperties:
          oneOf:
            - type: string
            - type: number
            - type: boolean
          nullable: true
          description: >-
            A record of the requested report. Record keys are the column
            identifiers.
        example:
          vulnId: CVE-2017-14062
          severity: High
          package: log4j
    ReportingError:
      type: string
    ReportSchedule:
      type: object
      description: Schedule and configuration definition for a report generation
      required:
        - id
        - name
        - configuration
        - schedule
        - format
        - enabled
        - notificationChannelIds
      properties:
        id:
          type: string
          readOnly: true
          description: Unique opaque identifier of the report generation schedule.
          example: schedule-1hDkklCWc5UtuFhwCaZkbFNY5ZV
        name:
          type: string
          description: The title for the generated reports.
          example: Weekly vulnerability report
        description:
          type: string
          description: A human-readable description for the report content.
          example: >
            Weekly report for package vulnerabilities fount in the Production
            environment.

            Required for compliance needs.
        reportType:
          type: string
          description: The kind of report to generate
          enum:
            - vulnerabilities
            - policies
          example: vulnerabilities
        configuration:
          $ref: '#/components/schemas/ReportConfig'
        schedule:
          type: string
          pattern: '^[0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+$'
          description: >-
            A cron-like expression representing the generation frequency of the
            reports.
          example: 0 9 * * 1
        enabled:
          type: boolean
          description: Whether the report generation is active or not
          example: true
        notificationChannels:
          type: array
          description: >-
            Notification channels where to notify the generation of a new report
            along with the chosen report format
          items:
            type: object
            properties:
              notificationChannelId:
                type: integer
                description: >-
                  ID of notification channel where the generation of new reports
                  is notified
                example: 12456
              format:
                type: string
                enum:
                  - csv
                  - json
                  - pdf
                description: Format of the generated report
                example: csv
        status:
          type: object
          readOnly: true
          description: 'Schedule, start and completion timestamps for the latest report'
          properties:
            lastScheduledAt:
              type: integer
              readOnly: true
              nullable: true
              description: >-
                The timestamp when a new generation of the scheduled report was
                last queued
              example: 1602674500
            lastStartedAt:
              type: integer
              readOnly: true
              nullable: true
              description: >-
                The timestamp when the generation of the scheduled report
                started the last time
              example: 1602674521
            lastCompletedAt:
              type: integer
              readOnly: true
              nullable: true
              description: >-
                The timestamp when the generation of the scheduled report
                completed the last time
              example: 1602674554
        createdAt:
          type: integer
          readOnly: true
          description: The timestamp when the schedule was defined the first time
          example: 1602672997
        updatedAt:
          type: integer
          readOnly: true
          description: The timestamp when the schedule was last updated
          example: 1602673124
    PolicySimulationK8sObject:
      type: object
      required:
        - k8sObj
      properties:
        k8sObj:
          type: string
          description: >-
            A string containing a k8s deployment/pod/etc object, as a file bytes
            in base64
          example: |
            apiVersion: extensions/v1beta1
            kind: Deployment
            metadata:
              name: nginx-deployment
    K8sPsp:
      type: object
      required:
        - result
      properties:
        result:
          type: string
          example: |
            apiVersion: policy/v1beta1
            kind: PodSecurityPolicy
            metadata:
              name: example
              spec:
                privileged: false  # Don't allow privileged pods!
    BEError:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Description of the error occured at backend
          example: 'Scope metric not present: agent.tag.secure-version'
    Error:
      type: object
      required:
        - message
        - referenceId
      properties:
        message:
          type: string
          description: Description of the error occured
          example: Simulation not found
        referenceId:
          type: string
          description: Reference id for error tracking
          example: request_1TCy9vwpC78hwcnZdwtWMe5gsVT
        errors:
          type: array
          description: Array of backend errors
          items:
            $ref: '#/components/schemas/BEError'
    PolicySimulationInfo:
      type: object
      required:
        - name
        - content
      properties:
        name:
          type: string
          description: >-
            The name of the PSP/K8s Network Policy being used for this
            simulation.
          example: nginx.psp
        content:
          type: string
          description: >-
            The full contents of the policy file, base64 encoded, being used for
            the simulation
          example: |
            apiVersion: policy/v1beta1
            kind: PodSecurityPolicy
            metadata:
              name: example
              spec:
                privileged: false  # Don't allow privileged pods!
        scope:
          type: string
          description: 'Where the policy is being applied- Container, Host etc..'
          example: container.image.repository = mysql
        enabled:
          type: boolean
          description: >-
            If true, the policy simulation is currently enabled; otherwise
            disabled or does not exist
          example: false
    PolicySimulation:
      type: object
      required:
        - name
        - id
        - state
        - startTime
        - numEvents
      allOf:
        - $ref: '#/components/schemas/PolicySimulationInfo'
        - type: object
          properties:
            id:
              type: number
              format: int64
              description: 'A unique identifier for this simulation, for this customer.'
              example: 6
            version:
              type: integer
              description: >-
                Version of the object. Incremented on each update and used for
                optimistic locking
              example: 18
            startTime:
              type: number
              format: int64
              description: >-
                If the simulation is "enabled", a UTC Unix time (in
                milliseconds) of when the rules object was first created.
              example: 1553702727177
            numEvents:
              type: number
              format: integer
              description: >-
                The number of policy events that have been emitted so far for
                any policies created by this simulation.
              example: 48
    PolicySimulationsList:
      type: object
      required:
        - offset
        - limit
        - canLoadMore
        - items
      properties:
        offset:
          type: number
          description: Return values from the simulations list at this position.
        limit:
          type: number
          description: The maximum number of items to return.
        canLoadMore:
          type: boolean
          description: >-
            Flag that indicates whether or not there are more results that can
            be loaded
        items:
          type: array
          items:
            $ref: '#/components/schemas/PolicySimulation'
    ClustersResponse:
      type: array
      description: Cluster names
      items:
        type: string
    schemas-Error:
      type: object
      properties:
        message:
          type: string
          description: a human readable description of the error
          example: startDate cannot be more than 90 days earlier than endDate
        referenceId:
          type: string
          description: Reference id for error tracking
          example: d2c5bb61-8b51-4b58-ad9d-1412b63e75de
    Labels:
      type: array
      items:
        type: string
      description: Array of kubernetes labels
    OwnerKind:
      type: string
      description: Owner type
      enum:
        - Service
        - Deployment
        - StatefulSet
        - DaemonSet
        - Pod
        - Namespace
    CommonKubernetesEntity:
      type: object
      properties:
        name:
          type: string
          description: name of the object
        labels:
          $ref: '#/components/schemas/Labels'
          description: >-
            For pod owners, the labels are used to identify the pods related to
            the deployment/job/etc. For services, the labels are used to
            identify the endpoints for the service. For namespaces, the labels
            will be put in any knp generated based on objects in this namespace.
        kind:
          $ref: '#/components/schemas/OwnerKind'
        cluster:
          type: string
          description: the name of the cluster
    Namespace:
      allOf:
        - $ref: '#/components/schemas/CommonKubernetesEntity'
        - type: object
    NamespacesResponse:
      type: array
      items:
        $ref: '#/components/schemas/Namespace'
    PodControllerLabels:
      allOf:
        - $ref: '#/components/schemas/Labels'
      description: >-
        Kubernetes labels of the pod controller. If the pod owner is a service,
        the labels are for the pod owner of the service’s endpoint.
    PodOwner:
      allOf:
        - $ref: '#/components/schemas/CommonKubernetesEntity'
        - type: object
          properties:
            namespace:
              type: string
              description: the name of the namespace that the pod owner belongs to
            podControllerLabels:
              $ref: '#/components/schemas/PodControllerLabels'
    OwnersResponse:
      type: array
      items:
        $ref: '#/components/schemas/PodOwner'
    NetworkingTopologyMetadata:
      type: object
      properties:
        resolvedFrom:
          type: integer
          description: >-
            The from parameter after being normalized to fit the closest
            approximate available time range
        resolvedTo:
          type: integer
          description: >-
            The to parameter after being normalized to fit the closest
            approximate available time range
    IngressConnectionSummary:
      type: object
      properties:
        clientOwner:
          $ref: '#/components/schemas/PodOwner'
        clientNamespace:
          $ref: '#/components/schemas/Namespace'
        serverProcess:
          type: string
          description: The process on the server
          example: nginx
        serverPort:
          type: number
          description: The port on the server
    IngressSummary:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/NetworkingTopologyMetadata'
        connections:
          type: array
          items:
            $ref: '#/components/schemas/IngressConnectionSummary'
    EgressConnectionSummary:
      type: object
      properties:
        serverOwner:
          $ref: '#/components/schemas/PodOwner'
        serverNamespace:
          $ref: '#/components/schemas/Namespace'
        clientProcess:
          type: string
          description: The process on the client
          example: nginx
        serverPort:
          type: number
          description: The port on the server
    EgressSummary:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/NetworkingTopologyMetadata'
        connections:
          type: array
          items:
            $ref: '#/components/schemas/EgressConnectionSummary'
    IPMetadata:
      type: object
      properties:
        origin:
          type: string
          description: IP origin
          enum:
            - internal
            - external
        ip:
          type: string
          format: ipv4
          description: Unresolved IP address
    NetworkPolicyPort:
      type: object
      properties:
        port:
          type: integer
          description: port on the pod
        protocol:
          type: string
          description: >-
            The protocol by which traffic must match. Defaults to TCP if not
            specified. In the future UDP and SCTP may be supported.
          enum:
            - TCP
    UnresolvedEgress:
      type: object
      properties:
        serverIPMetadata:
          $ref: '#/components/schemas/IPMetadata'
        clientProcess:
          type: string
          description: The process on the client
        serverPort:
          $ref: '#/components/schemas/NetworkPolicyPort'
    EgressUnresolvedIpsResponse:
      type: object
      properties:
        clusterSubnetsComplete:
          type: boolean
          description: >-
            If false, the FE will display the warning “Cluster subnet list is
            incomplete. IPs not mapping to known subnets will be marked as
            external”.
        unresolveds:
          type: array
          description: Collection of unresolved egress IPs
          items:
            $ref: '#/components/schemas/UnresolvedEgress'
    UnresolvedIngress:
      type: object
      properties:
        clientIPMetadata:
          $ref: '#/components/schemas/IPMetadata'
        serverProcess:
          type: string
          description: The process on the server
        serverPort:
          $ref: '#/components/schemas/NetworkPolicyPort'
    IngressUnresolvedIpsResponse:
      type: object
      properties:
        clusterSubnetsComplete:
          type: boolean
          description: >-
            If false, the FE will display the warning “Cluster subnet list is
            incomplete. IPs not mapping to known subnets will be marked as
            external”.
        unresolveds:
          type: array
          description: Collection of unresolved ingress IPs
          items:
            $ref: '#/components/schemas/UnresolvedIngress'
    Metadata:
      description: 'Metadata, could be attached to a graph, an edge, or a vertex'
      type: object
      additionalProperties:
        type: string
    VertexType:
      type: string
      enum:
        - service
        - deployment
        - statefulset
        - daemonset
        - namespace
        - unresolvedip
      description: Vertex type
    Vertex:
      type: object
      description: Pod Owner
      properties:
        id:
          type: string
          description: Vertex ID
        type:
          $ref: '#/components/schemas/VertexType'
        name:
          type: string
          description: Pod Owner name
        metadata:
          $ref: '#/components/schemas/Metadata'
        parent:
          type: string
          description: >-
            Namespace vertex ID; required for all pod owner types except
            'namespace' and 'unresolvedip'
    EdgeType:
      type: string
      enum:
        - endpoints
        - communication
      description: Type of edge relationship
    Edge:
      type: object
      description: 'A directed edge, indicates a relationship between two vertices'
      properties:
        type:
          $ref: '#/components/schemas/EdgeType'
        source:
          type: string
          description: ID of the source vertex
        destination:
          type: string
          description: ID of the destination vertex
        metadata:
          $ref: '#/components/schemas/Metadata'
    Graph:
      type: object
      description: Communication topology graph
      properties:
        metadata:
          $ref: '#/components/schemas/Metadata'
        vertices:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Vertex'
        edges:
          type: array
          items:
            $ref: '#/components/schemas/Edge'
    TopologyResponse:
      type: object
      description: Owner communication topology graph
      properties:
        graph:
          $ref: '#/components/schemas/Graph'
    IPBlock:
      type: object
      properties:
        cidr:
          type: string
          description: Represents an IP Block
          example: 192.168.1.1/24
        except:
          type: array
          description: CIDRs that should not be included within an IP Block
          items:
            type: string
            description: a CIDR
            example: 192.168.1.1/24
    LabelSelectorRequirement:
      type: object
      properties:
        key:
          type: string
          description: The label key that the selector applies to.
        operator:
          type: string
          description: >-
            Represents a key's relationship to a set of values. If the operator
            is In or NotIn, the values array must be non-empty. If the operator
            is Exists or DoesNotExist, the values array must be empty.
          enum:
            - In
            - NotIn
            - Exists
            - DoesNotExist
        values:
          type: array
          description: A list of operands
          items:
            type: string
    LabelSelector:
      type: object
      properties:
        matchExpressions:
          type: array
          description: A list of label selector requirements. The requirements are ANDed.
          items:
            $ref: '#/components/schemas/LabelSelectorRequirement'
        matchLabels:
          type: object
          description: >-
            A map of {key,value} pairs. A single {key,value} in the matchLabels
            map is equivalent to an element of matchExpressions, whose key field
            is "key", the operator is "In", and the values array contains only
            "value". The requirements are ANDed.
    NetworkPolicyPeer:
      type: object
      properties:
        ipBlock:
          description: Defines policy on a particular IPBlock
          $ref: '#/components/schemas/IPBlock'
        namespaceSelector:
          description: Matches all pods in all namespaces selected by this label selector
          $ref: '#/components/schemas/LabelSelector'
        podSelector:
          description: Selects all matching pods in the namespace
          $ref: '#/components/schemas/LabelSelector'
    NetworkPolicyIngressRule:
      type: object
      properties:
        from:
          type: array
          description: >-
            List of sources which should be able to access the pods selected for
            this rule
          items:
            $ref: '#/components/schemas/NetworkPolicyPeer'
        ports:
          type: array
          description: >-
            List of ports which should be made accessible on the pods selected
            for this rule
          items:
            $ref: '#/components/schemas/NetworkPolicyPort'
    NetworkPolicyEgressRule:
      type: object
      properties:
        to:
          type: array
          description: >-
            List of destinations for outgoing traffic of pods selected for this
            rule
          items:
            $ref: '#/components/schemas/NetworkPolicyPeer'
        ports:
          type: array
          description: List of destination ports for outgoing traffic
          items:
            $ref: '#/components/schemas/NetworkPolicyPort'
    PolicyType:
      type: string
      description: A rule type
      enum:
        - Ingress
        - Egress
    NetworkPolicySpec:
      type: object
      properties:
        ingress:
          type: array
          description: List of ingress rules to be applied to the selected pods
          items:
            $ref: '#/components/schemas/NetworkPolicyIngressRule'
        egress:
          type: array
          description: List of egress rules to be applied to the selected pods
          items:
            $ref: '#/components/schemas/NetworkPolicyEgressRule'
        podSelector:
          description: >-
            Selects the pods to which this NetworkPolicy object applies. An
            empty podSelector matches all pods in this namespace.
          $ref: '#/components/schemas/LabelSelector'
        policyTypes:
          type: array
          description: List of rule types that the NetworkPolicy relates to
          items:
            $ref: '#/components/schemas/PolicyType'
    KubernetesNetworkPolicyRequest:
      type: object
      properties:
        spec:
          $ref: '#/components/schemas/NetworkPolicySpec'
    KubernetesNetworkPolicy:
      type: string
      description: The text of a proposed Kubernetes Network Policy
    SortableCaptureFields:
      type: string
      description: An enum of allowable fields to sort a list of captures
      enum:
        - date_requested
        - duration
        - name
        - size
        - status
    Direction:
      type: string
      description: An enum of ways to order a sorted collection of values
      enum:
        - asc
        - desc
    AppEnum:
      type: string
      description: An enum of Sysdig products
      enum:
        - sdc
        - sds
    Agent:
      type: object
      description: Describes a Sysdig agent running on a machine
      properties:
        customer:
          type: integer
          description: The ID of a particular customer
        id:
          type: integer
          description: Uniquely identifies an agent
          example: 34688
        machineId:
          type: string
          description: Uniquely identifies a machine
          example: '12:dd:fe:e0:17:0b'
        hostName:
          type: string
          description: The name of the host the agent is running on
          example: ip-10-2-157-201
        attributes:
          type: object
          additionalProperties: true
    CreateCapture:
      type: object
      description: Metadata to create a capture
      properties:
        source:
          $ref: '#/components/schemas/AppEnum'
        name:
          type: string
          description: A way to reference a capture. Must not be empty
          example: my_capture.scap
        duration:
          type: integer
          description: >-
            The range in time from when the capture began to when it ended in
            seconds. The maximum value is 86400
          example: 30
        containerId:
          type: integer
          description: Uniquely identifies a container
          example: 8883164eb9bf
        bucketName:
          type: string
          description: >-
            The name of the s3 bucket to which the capture will be saved. May be
            null
        folder:
          type: string
          description: The name of a folder in an s3 bucket
          example: /
        annotations:
          type: object
          description: A map of assorted metadata
          additionalProperties: true
        filters:
          type: string
          description: A way to only capture a subset of the data
          example: proc.name=vi
        agent:
          $ref: '#/components/schemas/Agent'
    CaptureStorageType:
      type: string
      description: An enum of the different types of storage to which captures can be saved
      enum:
        - local
        - s3
        - agent
        - provided
        - cassandra
    CaptureStatus:
      type: string
      description: An enum of the different statuses a capture can have
      enum:
        - requested
        - filtering
        - capturing
        - done
        - error
        - uploading
        - uploadingError
        - uploaded
    Capture:
      allOf:
        - $ref: '#/components/schemas/CreateCapture'
        - description: Contains system calls and other operating system events
        - type: object
          properties:
            id:
              type: integer
              description: uniquely identifies the capture
              example: 1327048
            maxSize:
              type: integer
              description: The maximum number of bytes allowed to be in this capture
              example: 104857600
            pastDuration:
              type: integer
              description: >-
                The range in time from when the capture began to when the event
                that triggered the capture occurred in seconds. The maximum
                value is 86400
              example: 3
            pastSize:
              type: integer
              description: >-
                The amount of bytes in the capture that occurred in the
                pastDuration interval
            dateRequested:
              type: integer
              description: >-
                The unix timestamp of when the capture was requested in
                milliseconds
              example: 1625783854265
            dateReceived:
              type: integer
              description: >-
                The unx timestamp of when the Sysdig backend received the
                capture from the agent in milliseconds
              example: 1625783881254
            downloadUrl:
              type: string
              description: The url to download the capture
              example: /api/v1/captures/1327048/download
            size:
              type: integer
              description: The number of bytes in the capture
              example: 87335540
            type:
              $ref: '#/components/schemas/CaptureStorageType'
            status:
              $ref: '#/components/schemas/CaptureStatus'
            accessKey:
              type: string
              description: The key that allows an agent to communicate with a collector
            bytesReceived:
              type: integer
              description: >-
                The number of bytes the Sysdig backend has received from the
                agent
              example: 87335540
            bytesStored:
              type: integer
              description: >-
                The number of bytes the Sysdig backend has pushed to a storage
                provider
              example: 87335540
            token:
              type: string
              description: >-
                Uniquely identifies a capture and correlates the capture to a
                request. Must match the following regex
                ([a-z0-9]){8}-([a-z0-9]){4}-([a-z0-9]){4}-([a-z0-9]){4}-([a-z0-9]){12}
              example: 960d9da0-cc79-4079-932a-544e193ab385
            metrics:
              type: array
              description: A list of metrics
              items:
                type: string
            storageId:
              type: integer
              description: Uniquely identifies a storage configuration
              example: 153
            scope:
              type: string
              description: >-
                A scope expression that limits where the capture could have been
                taken
              example: host.hostName = 'ip-10-2-157-201'
            machineId:
              type: string
              description: Uniquely identifies a machine
              example: '12:dd:fe:e0:17:0b'
    GetCapturesResponse:
      type: object
      description: A list of captures and associated metadata
      properties:
        total:
          type: integer
          description: >-
            Indicates how many captures would have been returned if no limit
            query param was specified. It does not represent the number of
            captures returned in the request.
        captures:
          type: array
          items:
            $ref: '#/components/schemas/Capture'
        offset:
          type: integer
          description: >-
            Indicates the distance between the true starting point and the index
            of the first returned capture. Corresponds to the offset query param
            that was provided in the original request.
        canLoadMore:
          type: boolean
          description: >-
            Indicates whether the number of captures returned had some limit
            applied
    BadRequestResponse:
      type: object
      description: Details on why the request was invalid
      properties:
        errors:
          type: array
          description: A list of errors
          items:
            type: object
            properties:
              message:
                type: string
                description: Explains why the request was rejected
                example: Value for parameter 'dir' is not supported
              reason:
                type: string
                description: Describes the http status code
                example: Bad Request
    CaptureWrapper:
      type: object
      properties:
        capture:
          $ref: '#/components/schemas/Capture'
    DeleteCapturesResponse:
      type: object
      properties:
        deleted:
          type: integer
      required:
        - deleted
      additionalProperties:
        type: string
    NotFoundResponse:
      type: object
      description: Details on why the object could not be found
      properties:
        timestamp:
          type: integer
        status:
          type: integer
          description: The http status
        error:
          type: string
        message:
          type: string
        path:
          type: string
          description: The path used by the corresponding request
    ScanningVulnSummaryMap:
      type: object
      properties:
        vulnType:
          type: object
          properties:
            severity:
              type: integer
    ScanningImageDigest:
      type: string
      description: |
        an image digest string, starting with "sha256:" prefix
      minLength: 1
      example: 'sha256:7492c1f615e3651629bd6c61777e9660caa3819cf3561a47d1d526dfeee02cf6'
    ScanningImageId:
      type: string
      description: |
        the imageID that identifies the image
      minLength: 1
      example: d4d4f50f871a02502debe52927b7c5769a1b9ed2f4a06ea0e3c3623ba089511b
    ScanningVulnerabilities:
      type: object
      properties:
        imageDigest:
          type: string
          description: The targeted image digest
        imageID:
          type: string
          description: The targeted imageID
        vtype:
          type: string
          description: The type of vulnerabilities retrieved
        filter:
          type: string
          description: The filter used
        sort:
          type: string
          description: The sorting method used
        sortBy:
          type: string
          description: The field used to sort the result
        hasFix:
          type: boolean
          description: Wether only vulns with a fix have been retrieved
        filters:
          type: string
          description: The severities retrieved
        offset:
          type: integer
          description: The start offset used
        limit:
          type: integer
          description: The limit used. 0 for no limit.
        canLoadMore:
          type: boolean
          description: True if more results can be fetched.
        totalVulns:
          type: integer
          description: The total count of vulnerabilities.
        vulnCounts:
          type: object
          properties:
            total:
              type: integer
              description: The total count of vulnerabilities.
            new:
              type: integer
              description: The total count of new vulnerabilities.
            fixed:
              type: integer
              description: The total count of fixed vulnerabilities.
            shared:
              type: integer
              description: The total count of shared vulnerabilities.
          description: Total counts of comparison statuses.
        vulns:
          type: array
          description: The vulnerabilities retrieved.
          items:
            type: object
            description: Anchore Vulnerability object plus comparison status.
            properties:
              feed:
                type: string
                description: |
                  The feed type, Always "vulnerabilities"
                example: vulnerabilities
              feed_group:
                type: string
                description: |
                  The distribution group name
                example: 'debian:10'
              fix:
                type: string
                description: |
                  If exists, the fix version
                example: None
              nvd_data:
                type: array
                items:
                  type: object
                  description: Anchore nvd_data object
              package:
                type: string
                description: |
                  The package full name
                example: gcc-8-base-8.3.0-6
              package_cpe:
                type: string
                example: None
              package_name:
                type: string
                description: |
                  The package name
                example: gcc-8-base
              package_path:
                type: string
                description: |
                  The package path
                example: pkgdb
              package_type:
                type: string
                description: |
                  The package type
                example: dpkg
              severity:
                type: string
                description: |
                  The vulnerability severity level
                example: Medium
              url:
                type: string
                description: |
                  URL to full description of the vulnerability
                example: 'https://security-tracker.debian.org/tracker/CVE-2018-12886'
              vuln:
                type: string
                description: |
                  The vulnerability identifier
                example: CVE-2018-12886
              vulnexceptions:
                type: array
                description: >
                  List of vulnExceptions by id/name along with the vulnerability
                  expiration for that exception list
                readOnly: true
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: vuln-exception-list-id
                    name:
                      type: string
                      example: some-name
                    expires:
                      type: integer
                      nullable: true
                      description: >
                        The timestamp till the vulnerability will be disabled.
                        If `null`, the entry never expires.


                        **Note**: the actual expiration will be computed only
                        once a day for the entire Sysdig installation.

                        The task will be executed each day at 0:00 UTC (4:00 PM
                        PST, 5:00 PM PDT) and will consider

                        expiration dates which are <= than the current **date**.
    ScanningVulnExceptionItemRequest:
      type: object
      required:
        - gate
        - trigger_id
      properties:
        gate:
          type: string
          description: |
            The Anchore gate kind
          example: vulnerabilities
        trigger_id:
          type: string
          description: |
            The name of the vulnerability
          example: CVE-2020-9071+*
        notes:
          type: string
          nullable: true
          description: >
            The user written notes attached to a specific vulnerability
            exception item
        expiration_date:
          type: integer
          nullable: true
          description: >
            The timestamp till the vulnerability will be disabled. If `null`,
            the entry never expires.


            **Note**: the actual expiration will be computed only once a day for
            the entire Sysdig installation.

            The task will be executed each day at 0:00 UTC (4:00 PM PST, 5:00 PM
            PDT) and will consider

            expiration dates which are <= than the current **date**.
          example: 1657622089
        enabled:
          type: boolean
          description: >
            Enable/disable vulnerability when considering exceptions.

            Useful, in combination with `expiration_date` to handle temporary
            exceptions.
    ScanningVulnExceptionItemResponse:
      allOf:
        - type: object
          required:
            - id
            - createdAt
            - updatedAt
          properties:
            id:
              type: string
              description: |
                The vulnerability identifier. Computed server side
            createdAt:
              type: integer
              example: 1595433581
              description: >
                The timestamp when the vulnerability has been added to the
                exception list
            updatedAt:
              type: integer
              example: 1595433581
              description: >
                The timestamp when the vulnerability has been modified in one of
                its fields.
            description:
              type: string
              nullable: true
              example: >
                There is a few bytes out-of-bounds read vulnerability in some
                Huawei products.

                The software reads data past the end of the intended buffer when
                parsing certain message,

                an authenticated attacker could exploit this vulnerability by
                sending crafted messages to the device.

                Successful exploit may cause service abnormal in specific
                scenario.

                Affected product versions include:AR120-S versions
                V200R007C00SPC900,V200R007C00SPCa00
              description: |
                The vulnerability generic description
        - $ref: '#/components/schemas/ScanningVulnExceptionItemRequest'
    ScanningVulnException:
      type: object
      required:
        - id
        - items
        - createdAt
        - updatedAt
        - name
        - version
      properties:
        id:
          type: string
          readOnly: true
          description: >
            Unique identifier associated with this vulnerability exception list.
            It's created backend side.
        createdAt:
          type: integer
          readOnly: true
          description: |
            The timestamp when the vulnerability exception list has been created
          example: 1595433581
        updatedAt:
          type: integer
          readOnly: true
          description: |
            The timestamp when the vulnerability exception list has been updated
          example: 1595433581
        comment:
          type: string
          description: |
            A human-readable description.
        name:
          type: string
          description: |
            The name of the vulnerability exception list.
        version:
          type: string
          description: |
            Version of the vulnerability exception list. Should be "1_0"
        items:
          type: array
          description: >
            An array of vulnerability exception items (while creating/updating a
            list, new item IDs will be created backend side)
          items:
            $ref: '#/components/schemas/ScanningVulnExceptionItemResponse'
        policyBundleId:
          type: string
          readOnly: true
          description: >
            An Anchore policy bundle ID. While retrieving this object, this is
            the bundle ID that contains this vulnerability exception list. While
            inserting/updating, this is the target bundle, and if not specified,
            the currently active bundle will be used.
    ScanningError:
      type: string
    ScanningImageContent:
      type: object
      properties:
        imageDigest:
          type: string
          description: The targeted image digest
        ctype:
          type: string
          description: The type of content retrieved
        filter:
          type: string
          description: The filter used
        sort:
          type: string
          description: The sorting method used
        sortBy:
          type: string
          description: The field used to sort the result
        offset:
          type: integer
          description: The start offset used
        limit:
          type: integer
          description: The limit used. 0 for no limit.
        canLoadMore:
          type: boolean
          description: True if more results can be fetched.
        content:
          type: array
          items:
            type: object
            description: 'Anchore Content{Package,Files,JAVA}Response.Content entry object'
          description: The content retrieved
    ScanningCheckSummary:
      type: object
      properties:
        imageDigest:
          type: string
          description: The targeted image digest
        imageId:
          $ref: '#/components/schemas/ScanningImageId'
        at:
          type: string
          description: The RFC-3339 timestamp of the evaluation
        tag:
          type: string
          description: The image full tag
        status:
          type: string
          description: Final evaluation status
        policyBundleId:
          type: string
          description: The bundle ID used in this evaluation
        finalAction:
          type: string
          description: Final evaluation action
        finalActionReason:
          type: string
          description: Final evaluation action reason
        nStops:
          type: integer
          description: Total number of stop rules triggered
        nWarns:
          type: integer
          description: Total number of warn rules triggered
        policies:
          type: array
          items:
            type: object
            properties:
              policyId:
                type: string
                description: Policy ID
              policyName:
                type: string
                description: Policy Name
              nStops:
                type: integer
                description: Number of stop rules triggered from this policy
              nWarns:
                type: integer
                description: Number of warn rules triggered from this policy
              rules:
                type: array
                items:
                  type: object
                  properties:
                    gate:
                      type: string
                      description: An Anchore rule gate
                    trigger:
                      type: string
                      description: An Anchore rule trigger
                    nStops:
                      type: integer
                      description: >-
                        Number of stop rules triggered from this gate/trigger
                        pair
                    nWarns:
                      type: integer
                      description: >-
                        Number of warn rules triggered from this gate/trigger
                        pair
    ScanningCheckRuleOutput:
      type: object
      properties:
        Image_Id:
          type: string
          description: The ID of the image that triggered this rule.
        Repo_Tag:
          type: string
          description: The name of the image that triggered this rule.
        Trigger_Id:
          type: string
          description: The trigger identifier responsible for this rule output.
        Gate:
          type: string
          description: The gate of this rule.
        Trigger:
          type: string
          description: The trigger of this rule.
        Check_Output:
          type: string
          description: Human-readable output string of this rule.
        Gate_Action:
          type: string
          description: The action of this rule.
        Whitelisted:
          type: string
          description: Whether this rule was whitelisted in the policy.
        Policy_Id:
          type: string
          description: The ID of the policy that contains the triggered rule.
    ScanningCheckPolicySummary:
      type: object
      properties:
        imageId:
          $ref: '#/components/schemas/ScanningImageId'
        imageDigest:
          $ref: '#/components/schemas/ScanningImageDigest'
        at:
          type: string
          description: The RFC-3339 timestamp of the evaluation
        tag:
          type: string
          description: The image full tag
        policyId:
          type: string
          description: The targeted policy ID
        policy:
          type: object
          description: An Anchore Policy object
        rules:
          type: array
          items:
            type: object
            properties:
              gate:
                type: string
                description: An Anchore rule gate
              trigger:
                type: string
                description: An Anchore rule trigger
              nStops:
                type: integer
                description: Number of stop rules triggered from this gate/trigger pair
              nWarns:
                type: integer
                description: Number of warn rules triggered from this gate/trigger pair
              rows:
                type: array
                items:
                  $ref: '#/components/schemas/ScanningCheckRuleOutput'
                description: the list of outputs for this pair/gate trigger
    PolicyEvaluationResponse:
      type: object
      properties:
        imageDigest:
          type: string
          description: The targeted image digest
        at:
          type: integer
          description: The RFC-3339 timestamp of the evaluation
        tag:
          type: string
          description: The image full tag
        status:
          type: string
          description: Final evaluation status
        bundleId:
          type: string
          description: The bundle ID used in this evaluation
        finalAction:
          type: string
          description: Final evaluation action
        finalActionReason:
          type: string
          description: Final evaluation action reason
        nStops:
          type: integer
          description: Total number of stop rules triggered
        nWarns:
          type: integer
          description: Total number of warn rules triggered
        policies:
          type: array
          items:
            type: object
            properties:
              comment:
                type: string
                description: Policy comment
              id:
                type: string
                description: Policy ID
              name:
                type: string
                description: Policy Name
              varsion:
                type: string
                description: Policy version
              rules:
                type: array
                items:
                  type: object
                  properties:
                    action:
                      type: string
                      description: Rule action
                    gate:
                      type: string
                      description: Anchore rule gate
                    id:
                      type: string
                      description: Rule ID
                    trigger:
                      type: string
                      description: Anchore rule trigger
                    params:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            description: Parameter Name
                          value:
                            type: string
                            description: Parameter Value
        results:
          type: array
          items:
            type: object
            properties:
              policyId:
                type: string
                description: Policy ID
              policyName:
                type: string
                description: Policy Name
              nStops:
                type: integer
                description: Number of stop rules triggered from this policy
              nWarns:
                type: integer
                description: Number of warn rules triggered from this policy
              gateResults:
                type: array
                items:
                  type: object
                  properties:
                    gate:
                      type: string
                      description: An Anchore rule gate
                    trigger:
                      type: string
                      description: An Anchore rule trigger
                    nStops:
                      type: integer
                      description: >-
                        Number of stop rules triggered from this gate/trigger
                        pair
                    nWarns:
                      type: integer
                      description: >-
                        Number of warn rules triggered from this gate/trigger
                        pair
                    ruleREsults:
                      type: array
                      items:
                        type: object
                        properties:
                          gate:
                            type: string
                            description: An Anchore rule gate
                          trigger:
                            type: string
                            description: Anchore rule trigger
                          checkOutput:
                            type: string
                            description: the policy rule check output
                          gateAction:
                            type: string
                            description: the gate action
                          triggerId:
                            type: string
                            description: the trigger ID
                          whitelisted:
                            type: boolean
                            description: rule whitelisted (true/false)
    ScanningPolicy:
      type: object
      required:
        - name
        - rules
      properties:
        id:
          type: string
          description: >
            Unique identifier associated with this policy. It's created backend
            side.
        comment:
          type: string
          description: |
            A human-readable description.
        name:
          type: string
          description: |
            The name of the policy.
        version:
          type: string
          description: |
            Version of the policy.
        isDefault:
          type: boolean
          description: >
            If true, this policy is referenced in the default mapping
            (registry=repository=tag=*)
        rules:
          description: >
            An array of Anchore PolicyRule elements (while creating/updating a
            policy, new rule IDs will be created backend side)
          type: array
          items:
            type: object
        policyBundleId:
          type: string
          description: >
            An Anchore policy bundle ID. While retrieving this object, this is
            the bundle ID that contains this policy. While inserting/updating,
            this is the target bundle, and if not specified, the currently
            active bundle will be used.
    ScanningRegistryDisplayNameMapping:
      type: object
      properties:
        registryName:
          type: string
        displayName:
          type: string
    ScanningVulnExceptionPUTRequest:
      allOf:
        - $ref: '#/components/schemas/ScanningVulnException'
        - type: object
          required:
            - items
          properties:
            items:
              deprecated: true
              description: >
                An array of vulnerability exception items (while
                creating/updating a list,

                new item IDs will be created backend side)


                **Deprecated**: use POST .../vulnexceptions/{id}/vulnerabilities
                instead
              type: array
              items:
                $ref: '#/components/schemas/ScanningVulnExceptionItemRequest'
    ScanningVulnerabilityDetailsResponse:
      type: object
      required:
        - id
        - link
        - feeds
        - description
      properties:
        id:
          type: string
          example: CVE-2020-7091
          description: |
            The vulnerability identifier
        description:
          type: string
          example: This vulnerability will make kittens explode
          description: >
            The vulnerability human readable description as reported in the NVD
            database
        feeds:
          type: array
          items:
            type: object
            required:
              - name
              - link
              - severity
            properties:
              name:
                type: string
                example: 'ubuntu:12.04'
                description: |
                  The source
              link:
                type: string
                example: 'http://people.ubuntu.com/~ubuntu-security/cve/CVE-2020-8492'
                description: |
                  The specific url by source
              severity:
                type: string
                example: High
                description: |
                  The specific severity by source
    ScanningMappingList:
      type: object
      required:
        - items
      properties:
        items:
          description: >
            A list of mappings as Anchore MappingRule elements.


            **Note**: the default mapping should always be the last one in the
            array.
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              whitelist_ids:
                type: array
                items:
                  type: string
              repository:
                type: string
                example: quay.io
              registry:
                type: string
                example: nginx
              policy_ids:
                type: array
                items:
                  type: string
              image:
                type: object
                properties:
                  type:
                    type: string
                    example: tag
                  value:
                    type: string
                    example: latest
        policyBundleId:
          type: string
          description: >
            An Anchore policy bundle ID. While retrieving this object, this is
            the bundle ID that contains this mapping list. While
            inserting/updating, this is the target bundle, and if not specified,
            the currently active bundle will be used.
    ScanningImageList:
      type: object
      required:
        - items
      properties:
        items:
          description: |
            A list of image names to be {white,black}listed
          type: array
          items:
            type: string
        policyBundleId:
          type: string
          description: >
            An Anchore policy bundle ID. While retrieving this object, this is
            the bundle ID that contains this image list. While
            inserting/updating, this is the target bundle, and if not specified,
            the currently active bundle will be used.
    ScanningAlert:
      type: object
      required:
        - name
        - type
        - enabled
        - autoscan
        - triggers
        - notificationChannelIds
      properties:
        alertId:
          type: string
          description: >
            Unique identifier associated with this alert. It's created backend
            side.
        enabled:
          type: boolean
          description: Whether this alert should actually be applied.
        name:
          type: string
          description: The name of the alert.
        description:
          type: string
          description: The description of the alert.
        type:
          type: string
          description: The type of the alert.
          enum:
            - runtime
            - repository
        scope:
          type: string
          description: >-
            An AND-composed string of predicates that selects the scope in which
            the alert will be applied. Only used when type=runtime.
        repositories:
          type: array
          items:
            type: object
            required:
              - registry
              - repository
              - tag
            properties:
              registry:
                type: string
                description: The image registry.
              repository:
                type: string
                description: The image repository.
              tag:
                type: string
                description: The image tag.
          description: >-
            The list of images for which the alert will be applied. Only used
            when type=repository.
        triggers:
          type: object
          items:
            type: object
            required:
              - unscanned
              - analysis_update
              - vuln_update
              - policy_eval
            properties:
              unscanned:
                type: boolean
                description: >-
                  True if the alert should trigger for unscanned images. Only
                  used when type=runtime.
              analysis_update:
                type: boolean
                description: >-
                  True if the alert should trigger when a new image is analyzed.
                  Only used when type=repository.
              vuln_update:
                type: boolean
                description: >-
                  True if the alert should trigger if the set of vulnerabilities
                  for an image changes.
              policy_eval:
                type: boolean
                description: >-
                  True if the alert should trigger when the final result of the
                  policy evaluation for a policy changes.
        autoscan:
          type: boolean
          description: True if the alert should automatically analyze unscanned images.
        onlyPassFail:
          type: boolean
          description: >-
            True if the policy_eval trigger should activate only when the result
            changes from pass to fail.
        notificationChannelIds:
          type: array
          items:
            type: integer
    ScanningQueryBody:
      type: object
      required:
        - scope
        - time
        - skipPolicyEvaluation
      properties:
        scope:
          type: string
          description: >-
            An AND-composed string of predicates that selects the scope in which
            the alert will be applied.
        time:
          type: object
          description: 'The selected time range (unix timestamp, microseconds)'
          properties:
            from:
              type: integer
            to:
              type: integer
        skipPolicyEvaluation:
          type: boolean
          description: 'If true, no policy evaluations will be triggered for the images.'
    ScanningQueryResponse:
      type: object
      properties:
        scope:
          type: string
        time:
          type: object
          properties:
            from:
              type: integer
            to:
              type: integer
        images:
          type: array
          items:
            type: object
            properties:
              imageId:
                type: string
              repo:
                type: string
              tag:
                type: string
              digest:
                type: string
              parentDigest:
                type: string
              analysisStatus:
                type: string
              policyEvalStatus:
                type: string
              containers:
                type: array
                items:
                  type: object
                  properties:
                    containerId:
                      type: string
    ScanningReportQueryBody:
      type: object
      required:
        - queryType
        - scopeType
      properties:
        queryType:
          type: string
          description: Generate the report based on the given query type.
          enum:
            - image
            - vuln
            - pkg
            - policies
        scopeType:
          type: string
          description: Filter the results based on the given scope.
          enum:
            - runtime
            - static
        runtimeScope:
          type: object
          required:
            - scope
          properties:
            scope:
              type: string
              description: >-
                An AND-composed string of predicates that selects the scope in
                which the alert will be applied.
            time:
              type: object
              description: 'The selected time range (unix timestamp, microseconds)'
              properties:
                from:
                  type: integer
                to:
                  type: integer
        staticScope:
          type: object
          properties:
            registry:
              type: string
              description: Filter the results based on the registry name.
            repository:
              type: string
              description: Filter the results based on the repository name.
            tag:
              type: string
              description: Filter the results based on the given image tag.
        vulnQueryFilter:
          type: object
          properties:
            vulnId:
              type: string
              description: Filter the results based on the vulnerability ID.
            age:
              type: object
              description: The selected time range (value as specified by iso8601)
              properties:
                from:
                  type: string
                  example: '2019-07-31T00:00:00-07:00'
                to:
                  type: string
                  example: '2019-08-02T20:15:24-07:00'
            severity:
              type: string
              description: Filter the results based on the vulnerability severity.
              enum:
                - Critical
                - High
                - Medium
                - Low
                - Negligible
                - Unknown
            fixAvailable:
              type: string
              description: Filter the results based on vulnerabolity with fixes.
            pkgName:
              type: string
              description: Filter the results based on the given package name.
            pkgVersion:
              type: string
              description: Filter the results based on the given package version.
        pkgQueryFilter:
          type: object
          properties:
            name:
              type: string
              description: Filter the results based on the given package name.
            version:
              type: string
              description: Filter the results based on the given package version.
        policyQueryFilter:
          type: object
          properties:
            imageDigest:
              type: string
              description: Filter the results based on image digest
            result:
              type: string
              description: Filter the results based on the result of a policy evaluation.
              enum:
                - pass
                - fail
            lastEvaluatedAfter:
              type: string
              description: >-
                Timestamp value for policy evaluation (value as specified by
                iso8601). Show all the policy evaluations after this timestamp.
              example: '2019-07-15T14:47:08-07:00'
            lastEvaluatedBefore:
              type: string
              description: >-
                Timestamp value for policy evaluation (value as specified by
                iso8601) Show all the policy evaluations before this timestamp.
              example: '2019-07-15T14:47:08-07:00'
        sort:
          description: Sorting method. Defaults to descendent.
          type: string
          enum:
            - desc
            - asc
        sortBy:
          type: string
          description: Field used to determine sorting column. Defaults to severity.
          enum:
            - imageName
            - tag
            - vulnId
            - fixedIn
            - severity
            - pkgName
            - pkgVersion
            - evaluationDate
            - bundleId
            - result
        offset:
          type: integer
          description: >-
            If specified, a 0-based index on the list. Only entries >= offset
            will be retrieved. Defaults to 0.
        limit:
          type: integer
          description: >-
            If specified, a limit on the number of entries retrieved. limit must
            be >= 1 and if it overflows the list all entries will be retrieved.
        filter:
          type: string
          description: The string on which the results are to be filtered.
    ScanningReportResponse:
      type: object
      properties:
        imageQueryResponse:
          type: array
          items:
            type: object
            properties:
              imageName:
                type: string
              vulnId:
                type: string
              severity:
                type: string
              age:
                type: integer
              pkgName:
                type: string
              pkgVersion:
                type: string
              tag:
                type: string
              fixedIn:
                type: string
              depName:
                type: string
              depVersion:
                type: string
              runtime:
                type: object
                properties:
                  clusterName:
                    type: string
                  namespace:
                    type: string
                  deployment:
                    type: string
                  pod:
                    type: string
                  hostname:
                    type: string
                  containerLabels:
                    type: string
        vulnQueryResponse:
          type: array
          items:
            type: object
            properties:
              vulnId:
                type: string
              severity:
                type: string
              age:
                type: integer
              pkgName:
                type: string
              pkgVersion:
                type: string
              tag:
                type: string
              fixedIn:
                type: string
              imageName:
                type: string
              depName:
                type: string
              depVersion:
                type: string
              runtime:
                type: object
                properties:
                  clusterName:
                    type: string
                  namespace:
                    type: string
                  deployment:
                    type: string
                  pod:
                    type: string
                  hostname:
                    type: string
                  containerLabels:
                    type: string
        pkgQueryResponse:
          type: array
          items:
            type: object
            properties:
              pkgName:
                type: string
              pkgVersion:
                type: string
              imageNames:
                type: array
                items:
                  type: string
              vulnIds:
                type: array
                items:
                  type: string
              runtime:
                type: array
                items:
                  type: object
                  properties:
                    clusterName:
                      type: string
                    namespace:
                      type: string
                    deployment:
                      type: string
                    pod:
                      type: string
                    hostname:
                      type: string
                    containerLabels:
                      type: string
        policyQueryResponse:
          type: array
          items:
            type: object
            properties:
              imageName:
                type: string
              tag:
                type: string
              result:
                type: string
              policyId:
                type: string
              evaluationDate:
                type: string
              finalAction:
                type: string
              imageDigest:
                type: string
              runtime:
                type: object
                properties:
                  clusterName:
                    type: string
                  namespace:
                    type: string
                  deployment:
                    type: string
                  pod:
                    type: string
                  hostname:
                    type: string
                  containerLabels:
                    type: string
        sort:
          type: string
          description: The sorting method used
        sortBy:
          type: string
          description: The field used to sort the result
        offset:
          type: integer
          description: The start offset used
        limit:
          type: integer
          description: The limit used. Must be >= 1.
        canLoadMore:
          type: boolean
          description: True if more results can be fetched.
        filter:
          type: string
          description: The string on which the results are to be filtered.
    ScanningResultsBody:
      type: object
      properties:
        options:
          type: object
          properties:
            filter:
              type: string
              description: The string on which the results are to be filtered.
            registry:
              type: string
              description: A comma seperated list of registries to filter by
            sort:
              type: string
              description: The sort direction (default desc)
              enum:
                - asc
                - desc
            sortBy:
              type: string
              description: The field used to sort the result
              enum:
                - repository
                - tag
                - digest
                - scanDate
            offset:
              type: integer
              description: The start offset used
            limit:
              type: integer
              description: The limit used. Must be >= 1.
            canLoadMore:
              type: boolean
              description: True if more results can be fetched.
        totalRows:
          type: integer
          description: The total number of images scanned
        metadata:
          type: object
          properties:
            total:
              type: integer
              description: The total number of images scanned
            policyStatus:
              type: object
              properties:
                totalFailed:
                  type: integer
                  description: The total number of images that are NOT pass the evaluation
                totalPassed:
                  type: integer
                  description: The total number of images that are pass the evaluation
            origins:
              type: object
              properties:
                sysdig-cli:
                  type: number
                  description: The total images that has this specific origin
                sysdig-secure-ui:
                  type: number
                  description: The total images that has this specific origin
                sysdig-runtime-alert:
                  type: number
                  description: The total images that has this specific origin
                sysdig-inline-scanner:
                  type: number
                  description: The total images that has this specific origin
                sysdig-node-image-analyzer:
                  type: number
                  description: The total images that has this specific origin
                sysdig-admission-controller:
                  type: number
                  description: The total images that has this specific origin
                cicd-scan-request:
                  type: number
                  description: The total images that has this specific origin
                cicd-inline-scan:
                  type: number
                  description: The total images that has this specific origin
                aws-registry:
                  type: number
                  description: The total images that has this specific origin
                aws-fargate:
                  type: number
                  description: The total images that has this specific origin
            allRegistries:
              type: array
              items:
                type: string
                description: list of the all possible registry in all image scanned
            allOrigins:
              type: array
              items:
                type: string
                description: list of the all possible origins in all image scanned
        results:
          type: array
          items:
            type: object
            properties:
              analysisStatus:
                type: string
                description: The current analysis status (Anchore field)
              analyzedAt:
                type: integer
                description: The timestamp when analysis was comleted (Anchore field)
              createdAt:
                type: integer
                description: >-
                  The timestamp when the analysis request was created (Anchore
                  field)
              fullTag:
                type: string
                description: >-
                  The full tag of the image including registry, repository and
                  tag (Anchore field)
              imageDigest:
                type: string
                description: The image digest (Anchore field)
              imageId:
                type: string
                description: The image id (Anchore field)
              parentDigest:
                type: string
                description: The parent image digest (Anchore field)
              tagDetectedAt:
                type: string
                description: The timestamp when tag was detected (Anchore field)
              registry:
                type: string
                description: The image registry as derived from the fullTag
              repository:
                type: string
                description: The image repository as derived from the fullTag
              tag:
                type: string
                description: The image tag as derived from the fullTag
              displayRegistry:
                type: string
                description: >-
                  The display name configured for the registry as derived from
                  the fullTag
              origin:
                type: string
                description: The image origin
              policyStatus:
                type: string
                description: The image origin
    ScanningRetentionBody:
      type: object
      required:
        - datePolicy
        - tagsPolicy
      properties:
        datePolicy:
          type: integer
          description: >-
            Date policy in seconds. By default, the range is between 30 and 90
            days (in seconds)
          example: 2592000
        tagsPolicy:
          type: integer
          description: Tags policy. Number of tags that triggers the retention policy
          example: 5
    OnboardingCompletionState:
      type: string
      enum:
        - INCOMPLETE
        - COMPLETED
        - SKIPPED
        - FAILED
      example: INCOMPLETE
    OnboardingStatus:
      type: object
      properties:
        agentConnected:
          $ref: '#/components/schemas/OnboardingCompletionState'
        k8sAuditEnabled:
          $ref: '#/components/schemas/OnboardingCompletionState'
        notificationChannelLinked:
          $ref: '#/components/schemas/OnboardingCompletionState'
        detectionRuleCreated:
          $ref: '#/components/schemas/OnboardingCompletionState'
        inlineScanImported:
          $ref: '#/components/schemas/OnboardingCompletionState'
        scanningAlertRuntimeCreated:
          $ref: '#/components/schemas/OnboardingCompletionState'
        scanningAlertRepositoryCreated:
          $ref: '#/components/schemas/OnboardingCompletionState'
        cloudAccountConnected:
          $ref: '#/components/schemas/OnboardingCompletionState'
        teamMemberInvited:
          $ref: '#/components/schemas/OnboardingCompletionState'
        benchmarkTaskCreated:
          $ref: '#/components/schemas/OnboardingCompletionState'
    OnboardingMetadata:
      type: object
      required:
        - customerId
        - status
      properties:
        customerId:
          type: number
          description: Id related to customer record in which these steps belong
          example: 1
        product:
          type: string
          example: SDS
          description: provided product id to remain consistent with other monitor requests
        status:
          $ref: '#/components/schemas/OnboardingStatus'
    FeedGroupMetadata:
      type: object
      properties:
        name:
          type: string
        created_at:
          type: string
          format: date-time
        last_sync:
          type: string
          format: date-time
        record_count:
          type: integer
    FeedMetadata:
      type: object
      description: >-
        Metadata on a single feed based on what the engine finds from querying
        the endpoints
      properties:
        name:
          type: string
          description: name of the feed
        created_at:
          type: string
          format: date-time
          description: >-
            Date the metadata record was created in engine (first seen on
            source)
        updated_at:
          type: string
          format: date-time
          description: Date the metadata was last updated
        groups:
          type: array
          items:
            $ref: '#/components/schemas/FeedGroupMetadata'
        last_full_sync:
          type: string
          format: date-time
    page:
      type: object
      required:
        - total
      properties:
        total:
          type: number
          format: integer
          description: |
            The number of events returned. This number is always less or
            equal the limit specified in the request.
          example: 10
        prev:
          type: string
          description: |
            The cursor that can be used to fetch a set of events before the
            first event returned in the `data` array.
            If this value is unset, then there are no events before the first
            event returned in the `data` array.
            By providing this value as `cursor` in a GET `secureEvents` request,
            you will get the set of events that precede the first event returned
            in the `data` array.
          example: LTltNGUybXIwdWkzZThhMjE1bjRn
        next:
          type: string
          description: |
            The cursor that can be used to fetch a set of events after the last
            event returned in the `data` array.
            If this value is unset, then there are no events after the last
            event returned  in the `data` array.
            By providing this value as `cursor` in a GET `secureEvents` request,
            you will get the set of events after the last event returned in the
            `data` array.
          example: KzltNGUybXIwdWkzZThhMjE1bjRn
    captureAction:
      title: Capture
      type: object
      description: Capture action performed once the event happened.
      required:
        - type
      properties:
        type:
          type: string
          description: Capture action type.
          enum:
            - capture
        successful:
          type: boolean
          description: Whether or not the action was completed successfully.
        errMsg:
          description: |
            When `successful == false`, details on why the action failed.
          type: string
        token:
          type: string
          description: Token that can be related to later messages.
          example: 4f24c92e-48f5-45ab-84a5-c394f07e855e
        afterEventNs:
          type: number
          format: int64
          description: |
            Period of time to capture after event in nanoseconds.
          example: 18000000000
        beforeEventNs:
          type: number
          format: int64
          description: |
            Period of time to capture before event in nanoseconds.
          example: 5000000000
    containerPausedAction:
      title: Container paused
      type: object
      description: Container paused action performed once the event happened.
      required:
        - type
      properties:
        type:
          type: string
          description: Container paused action type.
          enum:
            - container paused
        successful:
          type: boolean
          description: Whether or not the action was completed successfully.
        errMsg:
          description: |
            When `successful == false`, details on why the action failed.
          type: string
        token:
          type: string
          description: Token that can be related to later messages.
          example: 4f24c92e-48f5-45ab-84a5-c394f07e855e
    containerStoppedAction:
      title: Container stopped
      type: object
      description: Container stopped action performed once the event happened.
      required:
        - type
      properties:
        type:
          type: string
          description: Container stopped action type.
          enum:
            - container stopped
        successful:
          type: boolean
          description: Whether or not the action was completed successfully.
        errMsg:
          description: |
            When `successful == false`, details on why the action failed.
          type: string
        token:
          type: string
          description: Token that can be related to later messages.
          example: 4f24c92e-48f5-45ab-84a5-c394f07e855e
    containerKilledAction:
      title: Container killed
      type: object
      description: Container killed action performed once the event happened.
      required:
        - type
      properties:
        type:
          type: string
          description: Action type.
          enum:
            - container killed
        successful:
          type: boolean
          description: Whether or not the action was completed successfully.
        errMsg:
          description: |
            When `successful == false`, details on why the action failed.
          type: string
        token:
          type: string
          description: Token that can be related to later messages.
          example: 4f24c92e-48f5-45ab-84a5-c394f07e855e
    scanImageAction:
      title: Scan image
      type: object
      description: Scan image action performed once the event happened.
      required:
        - type
      properties:
        type:
          type: string
          description: Scan image action type.
          enum:
            - scan image
    policyEventContent:
      title: Policy Event
      type: object
      required:
        - policyId
        - ruleName
        - ruleType
        - ruleSubType
        - ruleTags
        - output
        - fields
        - falsePositive
        - matchedOnDefault
      properties:
        policyId:
          type: number
          format: integer
          description: Policy ID.
          example: 2
        ruleName:
          type: string
          description: Rule name.
          example: Terminal shell in container
        ruleType:
          type: number
          format: integer
          description: Rule type.
          example: 6
        ruleSubType:
          type: number
          format: integer
          description: Rule subtype.
          example: 0
        ruleTags:
          description: Rule tags.
          type: array
          items:
            type: object
          example:
            - mitre_credential_access
            - mitre_discovery
            - filesystem
        output:
          type: string
          description: Output of the policy event.
          example: |
            File below a known binary directory opened for writing...
        fields:
          type: object
          description: |
            Attribute fields of the policy event.
        falsePositive:
          type: boolean
          default: false
          example: false
        matchedOnDefault:
          type: boolean
          default: false
          example: false
    cve:
      type: object
      required:
        - id
        - severity
        - packageName
        - fixAvailable
      properties:
        id:
          type: string
        feed:
          type: string
        feedGroup:
          type: string
        fixAvailable:
          type: boolean
        packageName:
          type: string
        packageType:
          type: string
        packageVersion:
          type: string
        severity:
          type: string
        url:
          type: string
        vulnerablePackage:
          type: string
    scanningEventContent:
      title: Scanning Event
      type: object
      required:
        - alertId
        - trigger
        - alertName
        - alertUrl
        - scanResultUrl
        - image
        - result
      properties:
        alertId:
          type: string
          description: The alert id.
          example: abcdaaaaaa
        trigger:
          type: string
          description: Event trigger.
          example: Unscanned Image
        alertName:
          type: string
          description: Alert Name.
          example: Notify CVE Result change in store frontend
        alertUrl:
          type: string
          description: Edit alert link.
        scanResultUrl:
          type: string
          description: Scan result link.
        image:
          description: Docker image metadata.
          type: object
          required:
            - id
            - repo
            - registry
            - tag
            - digest
          properties:
            id:
              type: number
              format: int64
              description: Image ID.
              example: 5.353536363873897e+38
            repo:
              type: string
              description: Image repository.
              example: alpine
            registry:
              type: string
              description: Image registry.
              example: quay.io
            tag:
              type: string
              description: Image tag.
              example: 3.11.2
            digest:
              type: string
              description: Image digest.
              example: 'sha256:1234432342323232323232323232323232323232'
        result:
          type: string
          description: Scanning Result.
          enum:
            - Failed
            - Passed
          example: Failed
        cveUpdate:
          type: object
          required:
            - added
            - updated
            - removed
          properties:
            added:
              type: array
              items:
                $ref: '#/components/schemas/cve'
            updated:
              type: array
              items:
                $ref: '#/components/schemas/cve'
            removed:
              type: array
              items:
                $ref: '#/components/schemas/cve'
    event:
      type: object
      required:
        - id
        - cursor
        - timestamp
        - customerId
        - originator
        - source
        - category
        - name
        - description
        - severity
        - machineId
        - actions
        - labels
      properties:
        id:
          type: string
          description: The event id.
          example: 15cbf54e34df95404caad1c988cf7c42
        cursor:
          type: string
          description: |
            The cursor that can be used to fetch a set of events surrounding
            this same event. By providing this value as `cursor` in a GET
            `secureEvents` request, you will get the set of events surrounding
            this current event.
          example: LTltNGUybXIwdWkzZThhMjE1bjRn
        timestamp:
          type: string
          format: date-time
          description: Timestamp the event occured.
          example: '2020-04-21T16:08:08.845336507Z'
        customerId:
          type: number
          format: int64
          description: The customer id.
          example: 1
        originator:
          type: string
          description: 'Type of the event (i.e. policy, scanning etc.).'
          example: policy
        source:
          type: string
          description: Source of the event.
          example: k8s_audit
        category:
          type: string
          description: The event category.
          enum:
            - runtime
            - simulation
          example: runtime
        name:
          type: string
          description: The event name.
          example: Launch Privileged Container
        description:
          type: string
          description: The event description.
          example: |
            Identify a container being created with privileged=true
        severity:
          type: number
          description: The event severity.
          minimum: 0
          maximum: 7
          example: 4
        agentId:
          type: number
          format: int64
          description: The agent id.
          example: 1
        containerId:
          type: string
          description: The container id.
          example: df5f83c5d5e5
        machineId:
          type: string
          description: The machine id (i.e. hostname).
          example: '02:37:22:86:ce:53'
        actions:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/captureAction'
              - $ref: '#/components/schemas/containerPausedAction'
              - $ref: '#/components/schemas/containerStoppedAction'
              - $ref: '#/components/schemas/containerKilledAction'
              - $ref: '#/components/schemas/scanImageAction'
        content:
          type: object
          description: |
            Body of the specific event. It contains fields that are specific to
            a single event and are not shared among different event types.
          oneOf:
            - $ref: '#/components/schemas/policyEventContent'
            - $ref: '#/components/schemas/scanningEventContent'
        label:
          type: object
          description: Key value pairs of labels.
          additionalProperties:
            type: string
    eventsFeed:
      type: object
      required:
        - page
        - data
      properties:
        page:
          $ref: '#/components/schemas/page'
        data:
          type: array
          items:
            $ref: '#/components/schemas/event'
    error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: The error message.
        requestId:
          type: string
          description: The request ID.
    scopeFilters:
      type: object
      description: List of supported scope filters
      required:
        - labelDescriptors
      properties:
        labelDescriptors:
          type: array
          items:
            type: object
            required:
              - id
              - type
            properties:
              id:
                type: string
                description: The supported scope filter key.
              type:
                type: string
                description: Type of the scope filter value.
                enum:
                  - string
                  - number
                  - date
                  - ip
          example:
            - id: container.image.repo
              type: string
            - id: container.image.tag
              type: string
            - id: container.name
              type: string
            - id: container.label
              type: string
            - id: container.label.io.kubernetes.container.name
              type: string
            - id: container.label.io.kubernetes.pod.name
              type: string
            - id: container.label.io.kubernetes.pod.namespace
              type: string
            - id: container.label.maintainer
              type: string
            - id: host.hostName
              type: string
            - id: host.ip.private
              type: ip
            - id: host.ip.public
              type: ip
            - id: host.mac
              type: string
            - id: kubernetes.cluster.name
              type: string
            - id: kubernetes.daemonSet.name
              type: string
            - id: kubernetes.namespace.name
              type: string
            - id: kubernetes.pod.name
              type: string
            - id: kubernetes.replicaSet.name
              type: string
            - id: kubernetes.statefulSet.name
              type: string
    summarySerie:
      type: array
      description: >
        Series of tuples containing timestamp and values for a specific point in

        time for the metric. Only present if there are elements matching the
        metric.
      items:
        type: array
        items:
          type: number
          description: |
            The first element is always a timestamp expressed in
            nanoseconds and the second one the metric value.
          minItems: 2
          maxItems: 2
    properties-page:
      type: object
      properties:
        total:
          type: number
          format: integer
          description: |
            The number of audit events returned. This number is always less or
            equal the limit specified in the request.
          example: 10
        prev:
          type: string
          description: |
            The continuation token used to fetch a set of audit events before
            the current one.
          example: LTltNGUybXIwdWkzZThhMjE1bjRn
        next:
          type: string
          description: |
            The continuation token used to fetch a set of audit events after the
            current one.
          example: KzltNGUybXIwdWkzZThhMjE1bjRn
    id:
      type: string
      description: The audit event id.
      example: 15cbf54e34df95404caad1c988cf7c42
    customerId:
      type: number
      format: integer
      description: The customer id.
      example: 1
    agentId:
      type: number
      format: integer
      description: The agent id.
      example: 1
    timestamp:
      type: number
      format: long
      description: 'Timestamp the audit event occured, expressed in nanoseconds.'
      example: 1546300800000000000
    rxTimestamp:
      type: number
      format: long
      description: 'Timestamp the command was received, expressed in nanoseconds.'
      example: 1546300800000000000
    metrics:
      type: array
      description: List of metrics associated to the audit event.
      example:
        - ip-127-0-0-1
        - f8d4f71ab80b
    schemas-event:
      type: object
      required:
        - id
        - customerId
        - agentId
        - timestamp
        - rxTimestamp
        - type
      properties:
        id:
          $ref: '#/components/schemas/id'
        customerId:
          $ref: '#/components/schemas/customerId'
        agentId:
          $ref: '#/components/schemas/agentId'
        timestamp:
          $ref: '#/components/schemas/timestamp'
        rxTimestamp:
          $ref: '#/components/schemas/rxTimestamp'
        type:
          type: string
          enum:
            - command
            - connection
            - fileaccess
            - kubernetes
        metrics:
          $ref: '#/components/schemas/metrics'
    containerId:
      type: string
      description: |
        The container id. `containerId` is present only if the audit event was
        collected in a container context.
      example: f8d4f71ab80b
    hostname:
      type: string
      description: The Kubernetes hostname.
      example: ip-127-0-0-1
    command:
      description: Represents a command execution.
      allOf:
        - $ref: '#/components/schemas/schemas-event'
        - type: object
          required:
            - count
            - cmdline
            - comm
            - pcomm
            - pid
            - ppid
            - uid
            - loginShellId
            - loginShellDistance
            - tty
            - traceable
          properties:
            type:
              enum:
                - command
            containerId:
              $ref: '#/components/schemas/containerId'
            count:
              type: number
              format: integer
              description: |
                Count of commands. `command` is ever greater than `1` only when
                commands are grouped together.
              example: 1
              default: 1
            cmdline:
              type: string
              description: Full command line
              example: pg_isready --host 10.32.0.8
            comm:
              type: string
              description: The name of the command.
              example: pg_isready
            pcomm:
              type: string
              description: The name of the parent command.
              example: sshd
            pid:
              type: number
              format: integer
              description: Process ID.
              example: 31135
            ppid:
              type: number
              format: integer
              description: Parent process ID.
              example: 31132
            uid:
              type: number
              format: integer
              description: User ID
              example: 0
            cwd:
              type: string
              description: Command working directory.
              example: /
            hostname:
              $ref: '#/components/schemas/hostname'
            loginShellId:
              type: number
              format: integer
              description: Process id of the shell.
            loginShellDistance:
              type: number
              format: integer
              description: Level of nesting from the parent shell.
            tty:
              type: number
              format: integer
              description: TTY number.
            traceable:
              type: boolean
              default: false
              description: If command can be traced.
    connection:
      allOf:
        - $ref: '#/components/schemas/schemas-event'
        - type: object
          required:
            - pid
            - type
          properties:
            type:
              enum:
                - connection
            containerId:
              $ref: '#/components/schemas/containerId'
            pid:
              type: number
              format: integer
              description: Id of the process owning the connection.
              example: 123
            processName:
              type: number
              format: string
              description: Name of the process owning the connection.
              example: curl
            clientIPv4:
              type: string
              description: The IPv4 dotted notation of the client address.
              example: 127.0.0.1
            clientPort:
              type: number
              format: integer
              description: The client port.
              example: 31234
            serverIPv4:
              type: string
              description: The IPv4 dotted notation of the server address.
              example: 127.0.0.1
            serverPort:
              type: number
              format: integer
              description: The server port.
              example: 80
            tty:
              type: number
              format: integer
              description: TTY number.
            direction:
              type: string
              description: The direction of the connection.
              enum:
                - INCOMING
                - OUTGOING
            l4protocol:
              type: string
              description: The layer 4 protocol.
              example: tcp
            errorCode:
              type: number
              description: The error code.
              example: 115
            hostname:
              $ref: '#/components/schemas/hostname'
            status:
              type: string
              description: The status of the connection.
              enum:
                - ESTABLISHED
                - FAILED
              example: ESTABLISHED
    fileaccess:
      allOf:
        - $ref: '#/components/schemas/schemas-event'
        - type: object
          required:
            - pid
            - type
          properties:
            type:
              enum:
                - fileaccess
            containerId:
              $ref: '#/components/schemas/containerId'
            pid:
              type: number
              format: integer
              description: Id of the process owning the connection.
              example: 123
            processName:
              type: number
              format: string
              description: Name of the process owning the connection.
              example: curl
            directory:
              type: string
              description: The Directory for the file access.
              example: /home/sysdig/
            filename:
              type: string
              description: The Filename involved in file access.
              example: malicious_file.txt
            permissions:
              type: string
              description: The Permissions of the file access.
              example: rw
            hostname:
              $ref: '#/components/schemas/hostname'
            tty:
              type: number
              format: integer
              description: TTY number.
    kubernetesAudit:
      allOf:
        - $ref: '#/components/schemas/schemas-event'
        - type: object
          required:
            - resource
            - stages
            - sourceAddresses
            - user
            - userAgent
            - type
          properties:
            type:
              enum:
                - kubernetes
            hostname:
              $ref: '#/components/schemas/hostname'
            containerId:
              $ref: '#/components/schemas/containerId'
            resource:
              type: string
              description: The Kubernetes resource.
              example: pods
            subResource:
              type: string
              description: The Kubernetes subresource.
              example: exec
            namespace:
              type: string
              description: The Kubernetes namespace.
              example: sysdigcloud
            name:
              type: string
              description: The name of the resource.
              example: sysdigcloud-redis-75675f5897-7ci7o
            stages:
              type: object
              properties:
                started:
                  type: number
                  format: long
                  description: |
                    The timestamp of the started stage, expressed in nanoseconds
                  example: 1546300800000000000
                completed:
                  type: number
                  format: long
                  description: |
                    The timestamp of the completed stage, expressed in
                    nanoseconds
                  example: 1546300800000000000
            sourceAddresses:
              type: array
              example:
                - 127.0.0.1
                - 192.168.0.1
            user:
              type: object
              properties:
                username:
                  type: string
                  description: The username of the
                  example: kubernetes-admin
                groups:
                  type: array
                  example:
                    - 'system:masters'
                    - 'system:authenticated'
            userAgent:
              type: string
              description: The user agent of the client
              example: kubectl/v1.13.5 (linux/amd64) kubernetes/2166946
            args:
              type: object
              description: |
                Arguments specific for the different types of Kubernetes audit
                events. In case of `pods:exec`, `args` will contain the fields
                `command` and `container` representing the command called and
                the name of the container in the pod where the command was
                executed respectively.
              example:
                command: bash
                container: redis
    singleResponse:
      oneOf:
        - $ref: '#/components/schemas/command'
        - $ref: '#/components/schemas/connection'
        - $ref: '#/components/schemas/fileaccess'
        - $ref: '#/components/schemas/kubernetesAudit'
    integrationType:
      description: |
        The integration type.
      type: string
      enum:
        - SYSLOG
        - SPLUNK
        - MCM
        - QRADAR
    channels:
      description: |
        The channels for which the integration must forward data from.
      type: array
      items:
        type: string
        enum:
          - POLICY_EVENTS
    syslogConnectionInfo:
      required:
        - ServiceURL
        - ServicePort
      properties:
        ServiceURL:
          type: string
        ServicePort:
          type: number
          format: integer
        ServiceType:
          type: string
          enum:
            - tcp
            - udp
            - tls
        insecure:
          type: boolean
        MessageFormat:
          type: string
          enum:
            - RFC_3164
            - RFC_5424
            - RFC_5425
    splunkConnectionInfo:
      required:
        - ServiceURL
        - ServiceToken
      properties:
        ServiceURL:
          type: string
        ServiceToken:
          type: string
        SourceType:
          type: string
        Index:
          type: string
        insecure:
          type: boolean
    mcmConnectionInfo:
      required:
        - endpoint
        - apiKey
      properties:
        endpoint:
          type: string
        apiKey:
          type: string
        insecure:
          type: boolean
        accountId:
          type: string
        providerId:
          type: string
        noteName:
          type: string
    qradarConnectionInfo:
      required:
        - address
        - port
      properties:
        address:
          type: string
        port:
          type: number
          format: integer
        insecure:
          type: boolean
    connectionInfo:
      oneOf:
        - $ref: '#/components/schemas/syslogConnectionInfo'
        - $ref: '#/components/schemas/splunkConnectionInfo'
        - $ref: '#/components/schemas/mcmConnectionInfo'
        - $ref: '#/components/schemas/qradarConnectionInfo'
    integration:
      description: |
        Represents a command execution.
      type: object
      properties:
        id:
          type: number
          format: integer
        name:
          type: string
        customerId:
          type: number
          format: integer
        type:
          $ref: '#/components/schemas/integrationType'
        enabled:
          type: boolean
        channels:
          $ref: '#/components/schemas/channels'
        connectionInfo:
          $ref: '#/components/schemas/connectionInfo'
      example:
        id: 1
        name: Forward to Syslog
        customerId: 1
        type: syslog
        enabled: true
        channels:
          - POLICY_EVENTS
        connectionInfo:
          ServiceURL: syslog-address
          ServicePort: 514
    createPayload:
      description: |
        The payload for creating an integration.
      type: object
      required:
        - name
        - type
        - channels
        - connectionInfo
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/integrationType'
        enabled:
          type: boolean
          default: false
        channels:
          $ref: '#/components/schemas/channels'
        connectionInfo:
          $ref: '#/components/schemas/connectionInfo'
      example:
        name: Forward to Syslog
        type: SYSLOG
        enabled: true
        channels:
          - POLICY_EVENTS
        connectionInfo:
          ServiceURL: syslog-address
          ServicePort: 514
    patchPayload:
      description: |
        The payload for updating an integration.
      type: object
      properties:
        name:
          description: Change the name of the integration.
          type: string
        enabled:
          description: Enable/disable the integration.
          type: boolean
        channels:
          $ref: '#/components/schemas/channels'
        connectionInfo:
          $ref: '#/components/schemas/connectionInfo'
      example:
        enabled: true
    ProfileGroup:
      type: object
      properties:
        id:
          type: integer
          description: Identifier of this profile group.
        type:
          type: string
          description: >-
            Specify whether the profile engine aggregates data at the container
            or host level.
          enum:
            - AT_HOSTS
            - AT_CONTAINERS
        aggregationKeys:
          type: array
          description: >-
            List of metrics used to identify the entity to be profiles (e.g.
            ["container.image"].
          items:
            type: string
        uniqueIdKeys:
          type: array
          description: >-
            List of metrics used to identify a sub-entity inside an entity (e.g.
            ["container.id"].
          items:
            type: string
        profileCount:
          type: integer
          description: Number of profiles computed within the profileGroup.
          items:
            type: integer
        lastTimestampUs:
          type: number
          format: int64
    ProfileModelMeta:
      type: object
      required:
        - profileId
        - profileName
        - profileVersion
        - imageId
        - imageName
      properties:
        profileId:
          type: string
          description: 'UUID of the profile, based on a SHA of (imageId + profileVersion).'
        profileName:
          type: string
          description: 'Name of the profile, which includes registry/repository:tag@hash.'
        profileVersion:
          type: integer
          description: 'Version of the profile, incremented when the model is updated.'
        imageId:
          type: string
          description: 'UUID of the image, based on a SHA256 of the image content.'
        imageName:
          type: string
          description: 'Name of the image, as registry/repository:tag.'
    ProfileResult:
      type: object
      required:
        - score
      properties:
        score:
          type: integer
          description: >-
            Value from 0 to 1000 representing the score of the category or
            subcategory.
    RuntimePolicyRuleType:
      type: object
      required:
        - ruleType
      properties:
        ruleType:
          type: string
          description: Indicates the rule type
          enum:
            - PROCESS
            - CONTAINER
            - FILESYSTEM
            - NETWORK
            - SYSCALL
            - FALCO
          example: FALCO
    ProfileProposalRule:
      allOf:
        - type: object
          required:
            - name
            - ruleName
          properties:
            name:
              type: string
              description: Short description of the subcategory.
              example: files rw
            ruleName:
              type: string
              description: Name of the rule object.
              example: Unexpected spawned process postgres in image a1b2c3d4e5f6
        - $ref: '#/components/schemas/RuntimePolicyRuleType'
        - $ref: '#/components/schemas/ProfileResult'
    ProfileProposal:
      allOf:
        - type: object
          required:
            - subcategories
          properties:
            subcategories:
              type: array
              description: >-
                A category has at least one subcategory. Each subcategory refers
                to one rule and has its own score and status.
              example: >-
                The category `fileSystemProposal` will have an `items` array
                with subcategories such as "files rw" which refers to a single
                rule.
              items:
                $ref: '#/components/schemas/ProfileProposalRule'
        - $ref: '#/components/schemas/ProfileResult'
    ProfileIndex:
      allOf:
        - $ref: '#/components/schemas/ProfileModelMeta'
        - $ref: '#/components/schemas/ProfileResult'
        - type: object
          required:
            - status
            - profileGroupId
            - processesProposal
            - fileSystemProposal
            - syscallProposal
            - networkProposal
            - containerImagesProposal
          properties:
            status:
              type: string
              description: Status of the model (learning or finalized).
              enum:
                - LEARNING
                - FINALIZED
            profileGroupId:
              type: integer
              description: Identifier of the profile group.
            processesProposal:
              $ref: '#/components/schemas/ProfileProposal'
            fileSystemProposal:
              $ref: '#/components/schemas/ProfileProposal'
            syscallProposal:
              $ref: '#/components/schemas/ProfileProposal'
            networkProposal:
              $ref: '#/components/schemas/ProfileProposal'
            containerImagesProposal:
              $ref: '#/components/schemas/ProfileProposal'
    Profiles:
      type: object
      properties:
        offset:
          type: integer
          description: The start offset used
        limit:
          type: integer
          description: The limit used. 0 for no limit.
        canLoadMore:
          type: boolean
          description: True if more results can be fetched.
        profiles:
          type: array
          items:
            $ref: '#/components/schemas/ProfileIndex'
          description: The profiles retrieved
    ProfileLifeTracker:
      type: object
      description: keep track of the life of an entity
      properties:
        firstSeenUs:
          type: integer
        lastSeenUs:
          type: integer
        currentTimeUs:
          type: integer
        activeTimeUs:
          type: integer
    CapturePolicyAction:
      type: object
      properties:
        type:
          type: string
          enum:
            - POLICY_ACTION_CAPTURE
        filter:
          type: string
          description: specifies the subset to match
          example: proc.name=cat or proc.name=vi
        isLimitedToContainer:
          type: boolean
        beforeEventNs:
          type: integer
          description: period of time to capture before event in nanoseconds
        afterEventNs:
          type: integer
          description: period of time to capture after event in nanoseconds
        name:
          type: string
          description: the name of the file in which the capture will be saved
        storageType:
          type: string
          description: specifies which strategy will be taken to store the capture
          enum:
            - LOCAL
            - S3
            - AGENT
            - PROVIDED
            - CASSANDRA
        bucketName:
          type: string
          description: identifies an s3 compliant bucket
        folder:
          type: string
          description: >-
            the name of an s3 folder (enables the user to specify a bucket that
            is not in the default bucket root folder '/')
        storageId:
          type: integer
          description: >-
            specifies the id of a row in the file_storage table that corresponds
            to a FileStorageDetails.java object
    StopContainerPolicyAction:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - POLICY_ACTION_STOP
        msg:
          type: string
          description: a message to send to the thing being stopped
    PauseContainerPolicyAction:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - POLICY_ACTION_PAUSE
        msg:
          type: string
          description: a message to send to the thing being paused
    KillContainerPolicyAction:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - POLICY_ACTION_KILL
        msg:
          type: string
          description: a message to send to the thing being killed
    PolicyAction:
      type: object
      description: >-
        Functional behavior that can be enabled within a policy and should be
        performed if the condition of a policy is met. Certain actions may only
        make sense for policies of a particular type.
      oneOf:
        - $ref: '#/components/schemas/CapturePolicyAction'
        - $ref: '#/components/schemas/StopContainerPolicyAction'
        - $ref: '#/components/schemas/PauseContainerPolicyAction'
        - $ref: '#/components/schemas/KillContainerPolicyAction'
    schemas-PolicyType:
      type: string
      description: >-
        A name for a non overlapping subset of policies that share common
        characteristics. The enums falco and list_matching correspond to the
        FalcoSource enum syscall, k8s_audit corresponds to k8s_audit, and the
        others will map to a future enum value once OSS Falco decides a name
      enum:
        - falco
        - list_matching
        - k8s_audit
        - aws_cloudtrail
        - gcp_auditlog
    PolicyV2Info:
      type: object
      properties:
        name:
          type: string
          description: A short name for the policy
          example: Check filesystem activity
        description:
          type: string
          description: Description of policy
          example: >-
            Monitor all filesystem operations and look for suspicious or notable
            behavior
        severity:
          type: integer
          description: How severe is this policy when violated. Range from 0 to 7 included.
          items:
            type: string
          example: 4
        enabled:
          type: boolean
          description: True if the policy should be considered
          example: true
        scope:
          type: string
          description: 'Where the policy is being applied- Container, Host etc..'
          example: container.image.repository = sysdig/agent
        ruleNames:
          type: array
          description: >-
            Array of rule names. (They must be names instead of ids, as the
            rules list view is by name, to account for multiple rules having the
            same name).
          items:
            type: string
          example:
            - Write below binary dir
            - Write below root
            - Write below monitored dir
        actions:
          type: array
          items:
            $ref: '#/components/schemas/PolicyAction'
        type:
          $ref: '#/components/schemas/schemas-PolicyType'
    RuntimePolicyObjectOrigin:
      type: string
      description: >-
        A string naming the entity that created this rule. This, combined with
        the version identifier, corresponds to the "Published by" field in the
        UI. The origin should be "Secure UI" for objects created by the Secure
        UI, "Sysdig" for objects provided by Sysdig, and "Customer" for objects
        provided programmatically by the customer.
      enum:
        - Secure UI
        - Sysdig
        - Customer
        - Profiling
        - K8s Policy Advisor
      example: Secure UI
    RuntimePolicyObjectVersionId:
      type: string
      description: >-
        A string representing the version of the file that contained this rule.
        This, combined with the origin, corresponds to the "Published by" field
        in the UI. For rules with origin == Sysdig/Customer, the version
        identifier should come from the version property of the FalcoRulesFiles
        object that originally contained the rule. For rules with origin ==
        Secure UI, the version should be a constant string "current".
      example: v1.2.3
    PolicyV2:
      type: object
      allOf:
        - $ref: '#/components/schemas/PolicyV2Info'
        - type: object
          properties:
            id:
              type: integer
              description: Unique identifier representing a specific policy.
              example: 1
            version:
              type: integer
              description: >-
                Version of the object. Incremented on each update and used for
                optimistic locking
              example: 18
            createdOn:
              type: integer
              description: >-
                A timestamp (in milliseconds) of when the rules object was first
                created.
              example: 1553702727177
            modifiedOn:
              type: integer
              description: >-
                A timestamp (in milliseconds) of when the rules object was last
                modified.
              example: 1553702738288
            origin:
              $ref: '#/components/schemas/RuntimePolicyObjectOrigin'
            versionId:
              $ref: '#/components/schemas/RuntimePolicyObjectVersionId'
            notificationChannelIds:
              type: array
              items:
                type: integer
                example:
                  - 3
                  - 5
            profile:
              $ref: '#/components/schemas/ProfileModelMeta'
    RuntimePolicyRulesObject:
      type: object
      required:
        - id
        - name
        - origin
        - versionId
        - filename
        - version
        - modifiedOn
        - createdOn
      properties:
        id:
          type: integer
          description: A unique identifier representing a specific rule
          example: 1
        name:
          type: string
          description: >-
            A name for this object. For Falco rules/macros/lists, should exactly
            be the value of the "rule"/"macro"/"list" property of the yaml
            object.
          example: Write Below Binary Dir
        origin:
          $ref: '#/components/schemas/RuntimePolicyObjectOrigin'
        versionId:
          $ref: '#/components/schemas/RuntimePolicyObjectVersionId'
        filename:
          type: string
          description: >-
            Name of the file in which the rule is defined. For Default Falco
            rules, this should come from the name property of the FalcoRulesFile
            object that contained this rule. For other falco rules, the filename
            should be "falco_rules.local.yaml". For non-falco rules, the
            filename should be "fast_rules.local.yaml".
          example: falco_rules.local.yaml
        version:
          type: number
          format: integer
          description: The version is incremented when the update is successful.
          example: 5
        createdOn:
          type: number
          format: integer
          description: >-
            A timestamp (in milliseconds) of when the rules object was first
            created.
          example: 1553702727177
        modifiedOn:
          type: number
          format: integer
          description: >-
            A timestamp (in milliseconds) of when the rules object was last
            modified.
          example: 1553702738288
    TaggedPolicyObject:
      type: object
      required:
        - tags
      properties:
        tags:
          type: array
          description: The set of tags
          items:
            type: string
          example:
            - Kubernetes
            - CIS Compliance
            - File Integrity
    AppendableFalcoObject:
      type: object
      properties:
        append:
          type: string
          enum:
            - true
            - false
          description: >-
            If true, this object should be appended to an object with the same
            name that has already been loaded. Defaults to false if not present.
          example: 'true'
    FalcoConditionText:
      type: object
      required:
        - conditionText
      properties:
        text:
          type: string
          description: >-
            An opaque hunk of condition text. May contain a mix of fields,
            relational operators, etc. Basically anything between Macro/List
            references.
          example: 'evt.type in (open, openat) and '
    FalcoMacroReference:
      type: object
      required:
        - falcoMacroReference
      properties:
        falcoMacroReference:
          type: string
          description: >-
            The name of a FalcoMacro object. (Intentionally using names instead
            of ids so it can be passed directly from falco without falco having
            its own notion of rule/macro/list ids).
          example: bin_dir
    FalcoListReference:
      type: object
      required:
        - falcoListReference
      properties:
        falcoListReference:
          type: string
          description: >-
            The name of a FalcoList object. (Intentionally using names instead
            of ids so it can be passed directly from falco without falco having
            its own notion of rule/macro/list ids).
          example: monitored_directories
    FalcoCondition:
      type: object
      required:
        - condition
      properties:
        condition:
          type: object
          required:
            - condition
            - components
          properties:
            condition:
              type: string
              description: the full condition text exactly as represented in the yaml file
              example: >-
                evt.type in (open, openat) and bin_dir and fd.name in
                (monitored_directories)
            components:
              type: array
              description: >-
                an array containing the broken-up components of this falco
                rule\'s condition field
              items:
                type: object
                oneOf:
                  - $ref: '#/components/schemas/FalcoConditionText'
                  - $ref: '#/components/schemas/FalcoMacroReference'
                  - $ref: '#/components/schemas/FalcoListReference'
    FalcoSource:
      type: string
      description: >-
        An event source through which Falco rules are evaluated. The enum
        syscall corresponds to the policy types falco and list_matching. The
        enum k8s_audit corresponds to the policy type k8s_audit
      enum:
        - syscall
        - k8s_audit
        - aws_cloudtrail
        - gcp_auditlog
    FalcoRuleDetails:
      allOf:
        - $ref: '#/components/schemas/AppendableFalcoObject'
        - $ref: '#/components/schemas/RuntimePolicyRuleType'
        - $ref: '#/components/schemas/FalcoCondition'
        - type: object
          required:
            - output
            - priority
          properties:
            output:
              type: string
              description: >-
                A string describing the output string to generate when this rule
                matches an event. Should exactly match the output property of
                the rule\'s output field
              example: >-
                File below a known binary directory opened for writing
                (user=%user.name command=%proc.cmdline file=%fd.name)
            priority:
              type: string
              description: >-
                A string describing the falco rule\'s priority. This is only
                included so the resulting rule can be converted back to yaml
                easily. For the purposes of policy events, the policy\'s
                severity should be used instead of this value.
              enum:
                - emergency
                - alert
                - critical
                - error
                - warning
                - notice
                - informational
                - debug
              example: error
            source:
              $ref: '#/components/schemas/FalcoSource'
    RuntimePolicyRuleList:
      type: object
      description: >-
        Represents a list of items and whether the list represents a set of
        items to match or not match
      required:
        - items
        - matchItems
      properties:
        items:
          type: array
          items:
            type: string
            description: the set of paths/syscalls/ports/etc.
            example:
              - /bin
              - usr/bin
        matchItems:
          type: boolean
          description: >-
            If true, the rule matches if the path/syscall/port matches one of
            the items in the list. If false, the rule matches if the
            path/syscall/port/etc does not match any of the items in the list.
          example: true
    ProcessRuleDetails:
      type: object
      required:
        - processes
        - ruleType
      properties:
        processes:
          allOf:
            - $ref: '#/components/schemas/RuntimePolicyRuleList'
        ruleType:
          allOf:
            - $ref: '#/components/schemas/RuntimePolicyRuleType'
    FileSystemRuleDetails:
      type: object
      required:
        - readWritePaths
        - readPaths
        - ruleType
      properties:
        readWritePaths:
          allOf:
            - $ref: '#/components/schemas/RuntimePolicyRuleList'
        readPaths:
          allOf:
            - $ref: '#/components/schemas/RuntimePolicyRuleList'
        ruleType:
          allOf:
            - $ref: '#/components/schemas/RuntimePolicyRuleType'
    SyscallRuleDetails:
      type: object
      required:
        - syscalls
        - ruleType
      properties:
        syscalls:
          allOf:
            - $ref: '#/components/schemas/RuntimePolicyRuleList'
        ruleType:
          allOf:
            - $ref: '#/components/schemas/RuntimePolicyRuleType'
    ContainerImagesRuleDetails:
      type: object
      required:
        - containers
        - ruleType
      properties:
        containers:
          allOf:
            - $ref: '#/components/schemas/RuntimePolicyRuleList'
        ruleType:
          allOf:
            - $ref: '#/components/schemas/RuntimePolicyRuleType'
    NetworkRuleDetails:
      type: object
      required:
        - tcpListenPorts
        - udpListenPorts
        - allOutbound
        - allInbound
        - ruleType
      properties:
        allOutbound:
          type: boolean
          description: 'If true, then all outbound connection attempts match this rule'
          example: true
        allInbound:
          type: boolean
          description: 'If true, then all inbound connection attempts match this rule'
          example: true
        tcpListenPorts:
          allOf:
            - $ref: '#/components/schemas/RuntimePolicyRuleList'
        udpListenPorts:
          allOf:
            - $ref: '#/components/schemas/RuntimePolicyRuleList'
        ruleType:
          allOf:
            - $ref: '#/components/schemas/RuntimePolicyRuleType'
    RuntimePolicyRule:
      allOf:
        - $ref: '#/components/schemas/RuntimePolicyRulesObject'
        - $ref: '#/components/schemas/TaggedPolicyObject'
        - type: object
          required:
            - description
            - details
          properties:
            description:
              type: string
              description: A description of this rule. No newlines/formatting.
              example: >-
                an attempt to write to any file below a set of binary
                directories
            details:
              type: object
              oneOf:
                - $ref: '#/components/schemas/FalcoRuleDetails'
                - $ref: '#/components/schemas/ProcessRuleDetails'
                - $ref: '#/components/schemas/FileSystemRuleDetails'
                - $ref: '#/components/schemas/SyscallRuleDetails'
                - $ref: '#/components/schemas/ContainerImagesRuleDetails'
                - $ref: '#/components/schemas/NetworkRuleDetails'
    Profile:
      type: object
      properties:
        profileGroupId:
          type: integer
          description: Identifier of the related profile group.
        id:
          type: string
          description: UUID of this profile.
        name:
          type: string
          description: Name of the profile inside the profileGroup.
        mainKeyValues:
          type: array
          description: Values for the ProfileGroup.aggregationKeys.
          items:
            type: string
        profileLifeTracker:
          $ref: '#/components/schemas/ProfileLifeTracker'
        proposedPolicy:
          $ref: '#/components/schemas/PolicyV2'
        proposedRules:
          type: array
          description: >-
            Array of rules referred to by the proposed policy in
            `proposedPolicy`, that have not yet been created. Each of the
            `ruleNames` in `proposedPolicy` must refer to a rule's `name` of
            either a proposed rule in this array or a rule that already exists.
          items:
            $ref: '#/components/schemas/RuntimePolicyRule'
    ProfileActionResetResponse:
      type: object
      description: Profile reset action response
      properties:
        resetTimeUs:
          type: integer
  responses:
    unauthorized:
      description: Invalid or missing auth token.
    forbidden:
      description: Forbidden access to view Compliance.
    serviceUnavailable:
      description: Service is unavailable.
    badRequest:
      description: The given request is invalid.
    notFound:
      description: The compliance info could not be found.
    BadRequest:
      description: >-
        Indicates a parameter, header or another quality of the request was
        malformed. More information about 400 can be found at
        https://httpstatuses.com/400
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/schemas-Error'
    Unauthorized:
      description: >-
        The user failed to authenticate. More information about 401 can be found
        at https://httpstatuses.com/401
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/schemas-Error'
    Forbidden:
      description: >-
        The user successfully authenticated but has insufficient permissions.
        More information about 403 can be found at https://httpstatuses.com/403
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/schemas-Error'
    responses-badRequest:
      description: The request is invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    unprocessableEntity:
      description: |
        Attempting to retrieve a secure events feed by using a filter that
        contains unsupported metrics.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    internalServerError:
      description: |
        The server encountered an unexpected condition that prevented it from
        fulfilling the request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    responses-notFound:
      description: The event could not be found.
    components-responses-badRequest:
      description: The request is invalid.
    responses-unprocessableEntity:
      description: The audit event requested does not support tracing.
    components-responses-notFound:
      description: The integration could not be found.
    responses-Unauthorized:
      description: >-
        The user failed to authenticate. More information about 401 can be found
        at https://httpstatuses.com/401
      content:
        text/plain:
          schema:
            type: string
    responses-BadRequest:
      description: >-
        Indicates a parameter, header or another quality of the request was
        malformed. More information about 400 can be found at
        https://httpstatuses.com/400
      content:
        text/plain:
          schema:
            type: string
    NotFound:
      description: >-
        The requested resource was not found. More information about 404 can be
        found at https://httpstatuses.com/404
      content:
        text/plain:
          schema:
            type: string
    ServerError:
      description: Generic error from API
      content:
        text/plain:
          schema:
            type: string
    responses-Forbidden:
      description: API Access Forbidden
      content:
        text/plain:
          schema:
            type: string
