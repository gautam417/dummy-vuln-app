openapi: 3.0.0
info:
  title: Sysdig Secure API
  description: |
    Sysdig Secure RESTful Documentation

    ## Conventions
    ### Access | Send | Receive
    API access is over HTTPS and accessed from:


    SaaS: See [SaaS Regions](https://docs.sysdig.com/en/saas-regions-and-ip-ranges.html) and IP Ranges for the URLs corresponding to different regions.


    For example:
    Sysdig Secure for US East: https://secure.sysdig.com

    Sysdig Monitor for US West: https://us2.app.sysdig.com

    Sysdig Secure for EU Central: https://eu1.app.sysdig.com/secure/

    Sysdig Monitor for EU Central: https://eu1.app.sysdig.com

    On-Prem: through your Sysdig application server address


    Data is sent and received using `JSON` format.

    ### Authorization
    The Sysdig API token must be passed to the HTTPS server via the Authorization header with the format:

    `Authorization: Bearer [token]`

    ### Encoding
    The request should set the HTTP header:

    `Accept: application/json`

    Every response is returned with the HTTP header

    `Content-Type: application/json;charset=UTF-8`

    To reduce the size of the request and (primarily) the response, you can set the header to compress HTTP body and response:

    `Accept-Encoding:gzip, deflate, sdch`

    <SecurityDefinitions />
  version: "v2"
  x-logo:
    url: "https://docs.sysdig.com/css/image/portal-logo.png"
externalDocs:
  description: Sysdig Product Documentation
  url: "https://docs.sysdig.com"
servers:
  - url: https://secure.sysdig.com
    description: Sysdig Secure API
paths:
  /api/v1/secure/overview/status:
    $ref: "api/overview/v1/swagger.yaml#/paths/~1api~1v1~1secure~1overview~1status"
  /api/v1/secure/overview:
    $ref: "api/overview/v1/swagger.yaml#/paths/~1api~1v1~1secure~1overview"
#  /api/benchmarks/v2/status:
#    $ref: "api/benchmarks/v2/swagger.yaml#/paths/~1api~1benchmarks~1v2~1status"
#  /api/benchmarks/v2/scopeOptions:
#    $ref: "api/benchmarks/v2/swagger.yaml#/paths/~1api~1benchmarks~1v2~1scopeOptions"
#  /api/benchmarks/v2/schemas:
#    $ref: "api/benchmarks/v2/swagger.yaml#/paths/~1api~1benchmarks~1v2~1schemas"
#  /api/benchmarks/v2/schemas/{schemaId}:
#    $ref: "api/benchmarks/v2/swagger.yaml#/paths/~1api~1benchmarks~1v2~1schemas~1{schemaId}"
#  /api/benchmarks/v2/tasks:
#    $ref: "api/benchmarks/v2/swagger.yaml#/paths/~1api~1benchmarks~1v2~1tasks"
#  /api/benchmarks/v2/tasks/{taskId}:
#    $ref: "api/benchmarks/v2/swagger.yaml#/paths/~1api~1benchmarks~1v2~1tasks~1{taskId}"
#  /api/benchmarks/v2/tasks/{taskId}/enable:
#    $ref: "api/benchmarks/v2/swagger.yaml#/paths/~1api~1benchmarks~1v2~1tasks~1{taskId}~1enable"
#  /api/benchmarks/v2/tasks/{taskId}/disable:
#    $ref: "api/benchmarks/v2/swagger.yaml#/paths/~1api~1benchmarks~1v2~1tasks~1{taskId}~1disable"
#  /api/benchmarks/v2/tasks/{taskId}/run:
#    $ref: "api/benchmarks/v2/swagger.yaml#/paths/~1api~1benchmarks~1v2~1tasks~1{taskId}~1run"
#  /api/benchmarks/v2/tasks/{taskId}/result:
#    $ref: "api/benchmarks/v2/swagger.yaml#/paths/~1api~1benchmarks~1v2~1tasks~1{taskId}~1result"
#  /api/benchmarks/v2/tasks/{taskId}/results/{resultId}:
#    $ref: "api/benchmarks/v2/swagger.yaml#/paths/~1api~1benchmarks~1v2~1tasks~1{taskId}~1results~1{resultId}"
#  /api/benchmarks/v2/tasks/{taskId}/results/{resultId}/csv:
#    $ref: "api/benchmarks/v2/swagger.yaml#/paths/~1api~1benchmarks~1v2~1tasks~1{taskId}~1results~1{resultId}~1csv"
#  /api/compliance/v1/status:
#    $ref: "api/compliance/v1/swagger.yaml#/paths/~1api~1compliance~1v1~1status"
#  /api/compliance/v1/standards:
#    $ref: "api/compliance/v1/swagger.yaml#/paths/~1api~1compliance~1v1~1standards"
#  /api/compliance/v1/environments:
#    $ref: "api/compliance/v1/swagger.yaml#/paths/~1api~1compliance~1v1~1environments"
#  /api/compliance/v1/controls/description:
#    $ref: "api/compliance/v1/swagger.yaml#/paths/~1api~1compliance~1v1~1controls~1description"
#  /api/compliance/v1/report:
#    $ref: "api/compliance/v1/swagger.yaml#/paths/~1api~1compliance~1v1~1report"
#  /api/compliance/v1/report/csv:
#    $ref: "api/compliance/v1/swagger.yaml#/paths/~1api~1compliance~1v1~1report~1csv"
#  /api/reporting/v1/{domain}/{reportType}/config:
#    $ref: "api/reporting/v1/swagger.yaml#/paths/~1api~1reporting~1v1~1{domain}~1{reportType}~1config"
#  /api/reporting/v1/{domain}/{reportType}/preview:
#    $ref: "api/reporting/v1/swagger.yaml#/paths/~1api~1reporting~1v1~1{domain}~1{reportType}~1preview"
#  /api/reporting/v1/{domain}/schedules:
#    $ref: "api/reporting/v1/swagger.yaml#/paths/~1api~1reporting~1v1~1{domain}~1schedules"
#  /api/reporting/v1/{domain}/schedules/{scheduleId}:
#    $ref: "api/reporting/v1/swagger.yaml#/paths/~1api~1reporting~1v1~1{domain}~1schedules~1{scheduleId}"
#  /api/reporting/v1/{domain}/reports/{fileId}:
#    $ref: "api/reporting/v1/swagger.yaml#/paths/~1api~1reporting~1v1~1{domain}~1reports~1{fileId}"
#  /api/v1/policyAdvisor/podSecurityPolicies:
#    $ref: "api/v1/policyAdvisor/swagger.yaml#/paths/~1api~1v1~1policyAdvisor~1podSecurityPolicies"
#  /api/v1/policyAdvisor/simulations:
#    $ref: "api/v1/policyAdvisor/swagger.yaml#/paths/~1api~1v1~1policyAdvisor~1simulations"
#  /api/v1/policyAdvisor/simulations/{id}:
#    $ref: "api/v1/policyAdvisor/swagger.yaml#/paths/~1api~1v1~1policyAdvisor~1simulations~1{id}"
#  /api/v1/networkTopology/clusters:
#    $ref: "api/v1/networkTopology/swagger.yaml#/paths/~1api~1v1~1networkTopology~1clusters"
#  /api/v1/networkTopology/namespaces:
#    $ref: "api/v1/networkTopology/swagger.yaml#/paths/~1api~1v1~1networkTopology~1namespaces"
#  /api/v1/networkTopology/owners:
#    $ref: "api/v1/networkTopology/swagger.yaml#/paths/~1api~1v1~1networkTopology~1owners"
#  /api/v1/networkTopology/ingressSummaries:
#    $ref: "api/v1/networkTopology/swagger.yaml#/paths/~1api~1v1~1networkTopology~1ingressSummaries"
#  /api/v1/networkTopology/egressSummaries:
#    $ref: "api/v1/networkTopology/swagger.yaml#/paths/~1api~1v1~1networkTopology~1egressSummaries"
#  /api/v1/networkTopology/ingressUnresolvedIps:
#    $ref: "api/v1/networkTopology/swagger.yaml#/paths/~1api~1v1~1networkTopology~1ingressUnresolvedIps"
#  /api/v1/networkTopology/egressUnresolvedIps:
#    $ref: "api/v1/networkTopology/swagger.yaml#/paths/~1api~1v1~1networkTopology~1egressUnresolvedIps"
#  /api/v1/networkTopology/ownerTopology:
#    $ref: "api/v1/networkTopology/swagger.yaml#/paths/~1api~1v1~1networkTopology~1ownerTopology"
#  /api/v1/networkTopology/status:
#    $ref: "api/v1/networkTopology/swagger.yaml#/paths/~1api~1v1~1networkTopology~1status"
#  /api/v1/networkSecurity/namespaces/{namespaceName}/simulatedPolicies:
#    $ref: "api/v1/networkSecurity/swagger.yaml#/paths/~1api~1v1~1networkSecurity~1namespaces~1{namespaceName}~1simulatedPolicies"
#  /api/v1/networkSecurity/networkPolicyOverlayOwnerTopology:
#    $ref: "api/v1/networkSecurity/swagger.yaml#/paths/~1api~1v1~1networkSecurity~1networkPolicyOverlayOwnerTopology"
#  /api/v1/networkSecurity/status:
#    $ref: "api/v1/networkSecurity/swagger.yaml#/paths/~1api~1v1~1networkSecurity~1status"
#  /api/v1/networkTopology/workloadLabelKeys:
#    $ref: "api/v1/networkTopology/internal/swagger.yaml#/paths/~1api~1v1~1networkTopology~1workloadLabelKeys"
#  /api/v1/networkTopology/namespaceLabelKeys:
#    $ref: "api/v1/networkTopology/internal/swagger.yaml#/paths/~1api~1v1~1networkTopology~1namespaceLabelKeys"
#  # Captures
#  /api/v1/captures:
#    $ref: "api/v1/captures/swagger.yaml#/paths/~1api~1v1~1captures"
#  /api/v1/captures/{captureId}:
#    $ref: "api/v1/captures/swagger.yaml#/paths/~1api~1v1~1captures~1{captureId}"
#  /api/v1/captures/{captureId}/download:
#    $ref: "api/v1/captures/swagger.yaml#/paths/~1api~1v1~1captures~1{captureId}~1download"
#  /api/v1/captures/{captureId}/stop:
#    $ref: "api/v1/captures/swagger.yaml#/paths/~1api~1v1~1captures~1{captureId}~1stop"
#
#  # Scanning
#  /api/scanning/v1/images/{imageDigest}/vulnSummary:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1images~1{imageDigest}~1vulnSummary"
#  /api/scanning/v1/images/{imageDigest}/vulnSummaryDirect:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1images~1{imageDigest}~1vulnSummaryDirect"
#  /api/scanning/v1/images/by_id/{imageId}/vulnSummaryDirect:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1images~1by_id~1{imageId}~1vulnSummaryDirect"
#  /api/scanning/v1/images/{imageDigest}/vuln/{vtype}:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1images~1{imageDigest}~1vuln~1{vtype}"
#  /api/scanning/v1/images/{imageDigest}/vulnDirect/{vtype}:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1images~1{imageDigest}~1vulnDirect~1{vtype}"
#  /api/scanning/v1/images/by_id/{imageId}/vulnDirect/{vtype}:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1images~1by_id~1{imageId}~1vulnDirect~1{vtype}"
#  /api/scanning/v1/images/{imageDigest}/vulnexceptions:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1images~1{imageDigest}~1vulnexceptions"
#  /api/scanning/v1/images/by_id/{imageId}/vulnexceptions:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1images~1by_id~1{imageId}~1vulnexceptions"
#  /api/scanning/v1/images/{imageDigest}/content/{ctype}:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1images~1{imageDigest}~1content~1{ctype}"
#  /api/scanning/v1/images/by_id/{imageId}/content/{ctype}:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1images~1by_id~1{imageId}~1content~1{ctype}"
#  /api/scanning/v1/images/{imageDigest}/checkSummary:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1images~1{imageDigest}~1checkSummary"
#  /api/scanning/v1/images/by_id/{imageId}/checkSummary:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1images~1by_id~1{imageId}~1checkSummary"
#  /api/scanning/v1/images/{imageDigest}/checkSummary/{policyId}:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1images~1{imageDigest}~1checkSummary~1{policyId}"
#  /api/scanning/v1/images/by_id/{imageId}/checkSummary/{policyId}:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1images~1by_id~1{imageId}~1checkSummary~1{policyId}"
#  /api/scanning/v1/images/{imageDigest}/policyEvaluation:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1images~1{imageDigest}~1policyEvaluation"
#  /api/scanning/v1/images/by_id/{imageId}/policyEvaluation:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1images~1by_id~1{imageId}~1policyEvaluation"
#  /api/scanning/v1/policies:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1policies"
#  /api/scanning/v1/auditPolicies:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1auditPolicies"
#  /api/scanning/v1/policies/{id}:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1policies~1{id}"
#  /api/scanning/v1/registryDisplayNames:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1registryDisplayNames"
#  /api/scanning/v1/whitelists:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1whitelists"
#  /api/scanning/v1/whitelists/{id}:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1whitelists~1{id}"
#  /api/scanning/v1/vulnexceptions:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1vulnexceptions"
#  /api/scanning/v1/vulnexceptions/{id}:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1vulnexceptions~1{id}"
#  /api/scanning/v1/vulnexceptions/{id}/vulnerabilities:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1vulnexceptions~1{id}~1vulnerabilities"
#  /api/scanning/v1/vulnexceptions/{id}/vulnerabilities/{vulnId}:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1vulnexceptions~1{id}~1vulnerabilities~1{vulnId}"
#  /api/scanning/v1/vulnerabilities/{id}:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1vulnerabilities~1{id}"
#  /api/scanning/v1/mappings:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1mappings"
#  /api/scanning/v1/whitelistedImages:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1whitelistedImages"
#  /api/scanning/v1/blacklistedImages:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1blacklistedImages"
#  /api/scanning/v1/alerts:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1alerts"
#  /api/scanning/v1/alerts/{id}:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1alerts~1{id}"
#  /api/scanning/v1/query/containers:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1query~1containers"
#  /api/scanning/v1/reports:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1reports"
#  /api/scanning/v1/reports/csv:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1reports~1csv"
#  /api/scanning/v1/results:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1results"
#  /api/scanning/v1/retention/policy:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1retention~1policy"
#  /api/scanning/v1/onboarding:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1onboarding"
#  /api/scanning/v1/onboarding/{customerId}:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1onboarding~1{customerId}"
#  /api/scanning/v1/system/feeds:
#    $ref: "api/scanning/v1/swagger.yaml#/paths/~1api~1scanning~1v1~1system~1feeds"
#
#  # Secure Events
#  /api/v1/secureEvents:
#    $ref: "api/v1/secureEvents/secureEvents.yaml#/paths/api~1v1~1secureEvents"
#  /api/v1/secureEvents/status:
#    $ref: "api/v1/secureEvents/secureEvents.yaml#/paths/api~1v1~1secureEvents~1status"
#  /api/v1/secureEvents/hasEvents:
#    $ref: "api/v1/secureEvents/secureEvents.yaml#/paths/api~1v1~1secureEvents~1hasEvents"
#  /api/v1/secureEvents/filters:
#    $ref: "api/v1/secureEvents/secureEvents.yaml#/paths/api~1v1~1secureEvents~1scopeFilters"
#  /api/v1/secureEvents/{eventId}:
#    $ref: "api/v1/secureEvents/secureEvents.yaml#/paths/api~1v1~1secureEvents~1{eventId}"
#
#  # Activity Audit
#  /api/v1/activityAudit/summary:
#    $ref: "api/v1/activityAudit/activityAudit.yaml#/paths/api~1v1~1activityAudit~1summary"
#  /api/v1/activityAudit/events:
#    $ref: "api/v1/activityAudit/activityAudit.yaml#/paths/api~1v1~1activityAudit~1events"
#  /api/v1/activityAudit/events/{type}/{eventId}:
#    $ref: "api/v1/activityAudit/activityAudit.yaml#/paths/api~1v1~1activityAudit~1events~1{type}~1{eventId}"
#  /api/v1/activityAudit/events/{type}/{eventId}/trace:
#    $ref: "api/v1/activityAudit/activityAudit.yaml#/paths/api~1v1~1activityAudit~1events~1{type}~1{eventId}~1trace"
#
#  # Events Forwarder
#  /api/v1/eventsForwarding/supported:
#    $ref: "api/v1/eventsForwarding/eventsForwarding.yaml#/paths/api~1v1~1eventsForwarding~1supported"
#  /api/v1/eventsForwarding/channels:
#    $ref: "api/v1/eventsForwarding/eventsForwarding.yaml#/paths/api~1v1~1eventsForwarding~1channels"
#  /api/v1/eventsForwarding/integrations:
#    $ref: "api/v1/eventsForwarding/eventsForwarding.yaml#/paths/api~1v1~1eventsForwarding~1integrations"
#  /api/v1/eventsForwarding/integrations/{integrationId}:
#    $ref: "api/v1/eventsForwarding/eventsForwarding.yaml#/paths/api~1v1~1eventsForwarding~1integrations~1{integrationId}"

  # Profiling
  /api/v1/profiling/profileGroups:
    $ref: "api/v1/profiling/swagger.yaml#/paths/~1api~1v1~1profiling~1profileGroups"
  /api/v1/profiling/profileGroups/{profileGroupId}:
    $ref: "api/v1/profiling/swagger.yaml#/paths/~1api~1v1~1profiling~1profileGroups~1{profileGroupId}"
  /api/v1/profiling/profileGroups/{profileGroupId}/profiles:
    $ref: "api/v1/profiling/swagger.yaml#/paths/~1api~1v1~1profiling~1profileGroups~1{profileGroupId}~1profiles"
  /api/v1/profiling/profiles/{profileId}:
    $ref: "api/v1/profiling/swagger.yaml#/paths/~1api~1v1~1profiling~1profiles~1{profileId}"
  /api/v1/profiling/profiles/{profileId}/actions/reset:
    $ref: "api/v1/profiling/swagger.yaml#/paths/~1api~1v1~1profiling~1profiles~1{profileId}~1actions~1reset"
  /api/v1/profiling/profiles/{profileId}/actions/remove:
    $ref: "api/v1/profiling/swagger.yaml#/paths/~1api~1v1~1profiling~1profiles~1{profileId}~1actions~1remove"
  /api/v1/profiling/status:
    $ref: "api/v1/profiling/swagger.yaml#/paths/~1api~1v1~1profiling~1status"
